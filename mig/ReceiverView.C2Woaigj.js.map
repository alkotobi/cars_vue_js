{"version":3,"file":"ReceiverView.C2Woaigj.js","sources":["../src/views/ReceiverView.vue"],"sourcesContent":["<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useApi } from '../composables/useApi'\n\nconst router = useRouter()\nconst { callApi, error } = useApi()\nconst user = ref(null)\nconst transfers = ref([])\nconst showReceiveDialog = ref(false)\nconst selectedTransfer = ref(null)\nconst receiveForm = ref({\n  amount_received_usd: '',\n  receiver_notes: ''\n})\n\nconst fetchTransfers = async () => {\n  const result = await callApi({\n    query: `\n      SELECT t.*, u.username as sender_name\n      FROM transfers t\n      JOIN users u ON t.id_user_do_transfer = u.id\n      WHERE t.date_receive IS NULL\n      ORDER BY t.date_do_transfer DESC\n    `,\n    params: []\n  })\n  if (result.success) {\n    transfers.value = result.data\n  }\n}\n\nconst calculateUSD = (amount, rate) => {\n  return (amount / rate).toFixed(2)\n}\n\nconst openReceiveDialog = (transfer) => {\n  selectedTransfer.value = transfer\n  receiveForm.value = {\n    amount_received_usd: calculateUSD(transfer.amount_sending_da, transfer.rate),\n    receiver_notes: ''\n  }\n  showReceiveDialog.value = true\n}\n\nconst receiveTransfer = async () => {\n  if (!receiveForm.value.amount_received_usd) {\n    error.value = 'Please fill all required fields'\n    return\n  }\n\n  const result = await callApi({\n    query: `\n      UPDATE transfers \n      SET amount_received_usd = ?,\n          receiver_notes = ?,\n          date_receive = NOW(),\n          id_user_receive_transfer = ?\n      WHERE id = ? AND date_receive IS NULL\n    `,\n    params: [\n      receiveForm.value.amount_received_usd,\n      receiveForm.value.receiver_notes || null,\n      user.value.id,\n      selectedTransfer.value.id\n    ]\n  })\n\n  if (result.success) {\n    showReceiveDialog.value = false\n    selectedTransfer.value = null\n    fetchTransfers()\n    fetchRecentTransfers()  // Add this line to update recent transfers table\n  }\n  else {\n    error.value = result.message\n  }\n}\n\nconst recentTransfers = ref([])\n\nconst fetchRecentTransfers = async () => {\n  const result = await callApi({\n    query: `\n      SELECT t.*, u.username as sender_name\n      FROM transfers t\n      JOIN users u ON t.id_user_do_transfer = u.id\n      WHERE t.date_receive IS NOT NULL\n      AND t.date_receive >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)\n      ORDER BY t.date_receive DESC\n    `,\n    params: []\n  })\n  if (result.success) {\n    recentTransfers.value = result.data\n  }\n}\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchTransfers()\n    fetchRecentTransfers()\n  }\n})\n\nconst unreceiveTransfer = async (transfer) => {\n  if (!confirm('Are you sure you want to mark this transfer as unreceived?')) return\n\n  const result = await callApi({\n    query: `\n      UPDATE transfers \n      SET amount_received_usd = NULL,\n          receiver_notes = NULL,\n          date_receive = NULL,\n          id_user_receive_transfer = NULL\n      WHERE id = ?\n    `,\n    params: [transfer.id]\n  })\n\n  if (result.success) {\n    fetchTransfers()\n    fetchRecentTransfers()\n  } else {\n    error.value = result.message\n  }\n}\n</script>\n\n<template>\n  <div class=\"receiver-view\">\n    <div class=\"header\">\n      <h1>All Pending Transfers</h1>\n      <button @click=\"router.push('/transfers')\" class=\"back-btn\">‚Üê Return to Transfers</button>\n    </div>\n\n    <!-- Transfers Table -->\n    <div class=\"transfers-table\">\n      <table>\n        <thead>\n          <tr>\n            <th>Sender</th>\n            <th>Date Sent</th>\n            <th>Sent USD</th>\n            <th>Received USD</th>\n            <th>Notes</th>\n            <th>Receiver Notes</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"transfer in transfers\" :key=\"transfer.id\">\n            <td>{{ transfer.sender_name }}</td>\n            <td>{{ new Date(transfer.date_do_transfer).toLocaleString() }}</td>\n            <td>${{ calculateUSD(transfer.amount_sending_da, transfer.rate) }}</td>\n            <td>${{ transfer.amount_received_usd || '-' }}</td>\n            <td>{{ transfer.notes || '-' }}</td>\n            <td>{{ transfer.receiver_notes || '-' }}</td>\n            <td>\n              <button \n                @click=\"openReceiveDialog(transfer)\" \n                class=\"btn receive-btn\"\n              >\n                Receive\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Recent Received Transfers Table -->\n    <h2 class=\"section-title\">Recently Received Transfers (Past Week)</h2>\n    <div class=\"transfers-table\">\n      <table>\n        <thead>\n          <tr>\n            <th>Sender</th>\n            <th>Date Received</th>\n            <th>Sent USD</th>\n            <th>Received USD</th>\n            <th>Notes</th>\n            <th>Receiver Notes</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"transfer in recentTransfers\" \n              :key=\"transfer.id\"\n              :class=\"{ 'amount-mismatch': calculateUSD(transfer.amount_sending_da, transfer.rate) !== transfer.amount_received_usd }\"\n          >\n            <td>{{ transfer.sender_name }}</td>\n            <td>{{ new Date(transfer.date_receive).toLocaleString() }}</td>\n            <td>${{ calculateUSD(transfer.amount_sending_da, transfer.rate) }}</td>\n            <td>${{ transfer.amount_received_usd }}</td>\n            <td>{{ transfer.notes || '-' }}</td>\n            <td>{{ transfer.receiver_notes || '-' }}</td>\n            <td>\n              <button \n                @click=\"unreceiveTransfer(transfer)\" \n                class=\"btn unreceive-btn\"\n              >\n                Unreceive\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Receive Dialog -->\n    <div v-if=\"showReceiveDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h2>Receive Transfer</h2>\n        <div class=\"form-group\">\n          <label>Amount Received (USD):</label>\n          <input \n            type=\"number\" \n            v-model=\"receiveForm.amount_received_usd\"\n            class=\"input-field\"\n            step=\"0.01\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label>Receiver Notes:</label>\n          <textarea \n            v-model=\"receiveForm.receiver_notes\" \n            class=\"input-field\"\n            placeholder=\"Add your notes here\"\n          ></textarea>\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"receiveTransfer\" class=\"btn receive-btn\">Confirm</button>\n          <button @click=\"showReceiveDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.receiver-view {\n  width: 80vw;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n}\n\n.back-btn {\n  padding: 8px 16px;\n  background-color: #4b5563;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.transfers-table {\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n  table-layout: fixed;\n}\n\nth, td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n}\n\n/* Column widths */\nth:nth-child(1) { width: 12%; } /* Sender */\nth:nth-child(2) { width: 15%; } /* Date */\nth:nth-child(3) { width: 10%; } /* Sent USD */\nth:nth-child(4) { width: 10%; } /* Received USD */\nth:nth-child(5) { width: 20%; } /* Notes */\nth:nth-child(6) { width: 20%; } /* Receiver Notes */\nth:nth-child(7) { width: 13%; } /* Actions */\n\n/* Notes cell specific styling */\ntd:nth-child(5),\ntd:nth-child(6) {\n  white-space: pre-wrap;\n  min-width: 150px;\n}\n\nth {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n\n.btn:hover {\n  opacity: 0.9;\n}\n\n.receive-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.unreceive-btn {\n  background-color: #DC2626;\n  color: white;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 300px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #4b5563;\n}\n\n.input-field {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ntextarea.input-field {\n  min-height: 100px;\n  resize: vertical;\n}\n\n.dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.section-title {\n  margin: 30px 0 20px;\n  color: #374151;\n  font-size: 1.5rem;\n}\n\n/* Recent transfers table specific widths */\n.transfers-table:nth-of-type(2) table th:nth-child(1) { width: 15%; } /* Sender */\n.transfers-table:nth-of-type(2) table th:nth-child(2) { width: 15%; } /* Date */\n.transfers-table:nth-of-type(2) table th:nth-child(3) { width: 12%; } /* Sent USD */\n.transfers-table:nth-of-type(2) table th:nth-child(4) { width: 12%; } /* Received USD */\n.transfers-table:nth-of-type(2) table th:nth-child(5) { width: 23%; } /* Notes */\n.transfers-table:nth-of-type(2) table th:nth-child(6) { width: 23%; } /* Receiver Notes */\n\n/* Notes cell specific styling for recent transfers */\n.transfers-table:nth-of-type(2) table td:nth-child(5),\n.transfers-table:nth-of-type(2) table td:nth-child(6) {\n  white-space: pre-wrap;\n  min-width: 150px;\n}\n\n/* Add this new style for amount mismatch highlighting */\n.amount-mismatch {\n  background-color: #FEF2F2;  /* Light red background */\n  color: #991B1B;  /* Darker red text for contrast */\n}\n\n.amount-mismatch td {\n  border-bottom-color: #FCA5A5;  /* Reddish border */\n}\n\n\n@media print {\n  .header button,\n  .btn {\n    display: none !important;\n  }\n\n  table {\n    width: 100% !important;\n    font-size: 10px !important;\n    table-layout: auto !important;\n  }\n\n  th:nth-child(7),\n  td:nth-child(7) {\n    display: none !important;\n  }\n\n  .amount-mismatch {\n    background-color: transparent !important;\n    border-left: 4px solid #DC2626 !important;\n  }\n\n  .receiver-view {\n    width: 100% !important;\n    padding: 0 !important;\n  }\n\n  .transfers-table {\n    overflow: visible !important;\n    page-break-inside: avoid;\n  }\n}\n</style>"],"names":["router","useRouter","callApi","error","useApi","user","ref","transfers","showReceiveDialog","selectedTransfer","receiveForm","fetchTransfers","result","calculateUSD","amount","rate","openReceiveDialog","transfer","receiveTransfer","fetchRecentTransfers","recentTransfers","onMounted","userStr","unreceiveTransfer"],"mappings":"ubAKA,MAAMA,EAASC,EAAS,EAClB,CAAE,QAAAC,EAAS,MAAAC,CAAK,EAAKC,EAAM,EAC3BC,EAAOC,EAAI,IAAI,EACfC,EAAYD,EAAI,CAAE,CAAA,EAClBE,EAAoBF,EAAI,EAAK,EAC7BG,EAAmBH,EAAI,IAAI,EAC3BI,EAAcJ,EAAI,CACtB,oBAAqB,GACrB,eAAgB,EAClB,CAAC,EAEKK,EAAiB,SAAY,CACjC,MAAMC,EAAS,MAAMV,EAAQ,CAC3B,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOP,OAAQ,CAAA,CACT,CAAA,EACGU,EAAO,UACTL,EAAU,MAAQK,EAAO,KAE7B,EAEMC,EAAe,CAACC,EAAQC,KACpBD,EAASC,GAAM,QAAQ,CAAC,EAG5BC,EAAqBC,GAAa,CACtCR,EAAiB,MAAQQ,EACzBP,EAAY,MAAQ,CAClB,oBAAqBG,EAAaI,EAAS,kBAAmBA,EAAS,IAAI,EAC3E,eAAgB,EACpB,EACET,EAAkB,MAAQ,EAC5B,EAEMU,EAAkB,SAAY,CAClC,GAAI,CAACR,EAAY,MAAM,oBAAqB,CAC1CP,EAAM,MAAQ,kCACd,MACJ,CAEE,MAAMS,EAAS,MAAMV,EAAQ,CAC3B,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQP,OAAQ,CACNQ,EAAY,MAAM,oBAClBA,EAAY,MAAM,gBAAkB,KACpCL,EAAK,MAAM,GACXI,EAAiB,MAAM,EAC7B,CACG,CAAA,EAEGG,EAAO,SACTJ,EAAkB,MAAQ,GAC1BC,EAAiB,MAAQ,KACzBE,EAAc,EACdQ,EAAsB,GAGtBhB,EAAM,MAAQS,EAAO,OAEzB,EAEMQ,EAAkBd,EAAI,CAAE,CAAA,EAExBa,EAAuB,SAAY,CACvC,MAAMP,EAAS,MAAMV,EAAQ,CAC3B,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQP,OAAQ,CAAA,CACT,CAAA,EACGU,EAAO,UACTQ,EAAgB,MAAQR,EAAO,KAEnC,EAEAS,EAAU,IAAM,CACd,MAAMC,EAAU,aAAa,QAAQ,MAAM,EACvCA,IACFjB,EAAK,MAAQ,KAAK,MAAMiB,CAAO,EAC/BX,EAAc,EACdQ,EAAoB,EAExB,CAAC,EAED,MAAMI,EAAoB,MAAON,GAAa,CAC5C,GAAI,CAAC,QAAQ,4DAA4D,EAAG,OAE5E,MAAML,EAAS,MAAMV,EAAQ,CAC3B,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQP,OAAQ,CAACe,EAAS,EAAE,CACrB,CAAA,EAEGL,EAAO,SACTD,EAAc,EACdQ,EAAoB,GAEpBhB,EAAM,MAAQS,EAAO,OAEzB"}