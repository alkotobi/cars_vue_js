{"version":3,"file":"UsersView.B7Spz-F7.js","sources":["../src/components/UsersCrud.vue","../src/views/UsersView.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst { callApi, error, loading } = useApi()\nconst users = ref([])\nconst roles = ref([])\nconst newUser = ref({ username: '', email: '', password: '', role_id: '' })\nconst editingUser = ref(null)\nconst editUserData = ref({ username: '', email: '', password: '', role_id: '' })\n\nconst fetchUsers = async () => {\n  const result = await callApi({\n    query: `\n      SELECT users.*, roles.role_name \n      FROM users \n      LEFT JOIN roles ON users.role_id = roles.id\n    `\n  })\n  if (result.success) {\n    users.value = result.data\n  }\n}\n\nconst fetchRoles = async () => {\n  const result = await callApi({\n    query: 'SELECT * FROM roles'\n  })\n  if (result.success) {\n    roles.value = result.data\n  }\n}\n\nconst addUser = async () => {\n  if (!newUser.value.username || !newUser.value.password || !newUser.value.email) return\n  \n  const result = await callApi({\n    query: 'INSERT INTO users (username, email, password, role_id) VALUES (?, ?, ?, ?)',\n    params: [newUser.value.username, newUser.value.email, newUser.value.password, newUser.value.role_id],\n    action: 'insert_user'  // Tell API to hash the password before inserting\n  })\n  if (result.success) {\n    fetchUsers()\n    newUser.value = { username: '', email: '', password: '', role_id: '' }\n  } else {\n    error.value = result.error\n    console.error(result.error)\n  }\n}\n\nconst startEditUser = (user) => {\n  editingUser.value = user.id\n  editUserData.value = { \n    username: user.username,\n    email: user.email, \n    password: '', // Don't populate password for security\n    role_id: user.role_id \n  }\n}\n\nconst updateUser = async (user) => {\n  let query = 'UPDATE users SET username = ?, email = ?, role_id = ?'\n  let params = [editUserData.value.username, editUserData.value.email, editUserData.value.role_id]\n  \n  if (editUserData.value.password) {\n    query += ', password = ?'\n    params.push(editUserData.value.password)\n  }\n  \n  query += ' WHERE id = ?'\n  params.push(user.id)\n\n  const result = await callApi({ \n    query, \n    params,\n    action: editUserData.value.password ? 'hash_password' : undefined \n  })\n  \n  if (result.success) {\n    fetchUsers()\n    cancelEdit()\n  }\n}\n\nconst cancelEdit = () => {\n  editingUser.value = null\n  editUserData.value = { username: '', password: '', role_id: '' }\n}\n\nconst deleteUser = async (user) => {\n  if (!confirm(`Are you sure you want to delete user \"${user.username}\"?`)) {\n    return\n  }\n\n  const result = await callApi({\n    query: 'DELETE FROM users WHERE id = ?',\n    params: [user.id]\n  })\n  if (result.success) {\n    fetchUsers()\n  }\n}\n\nonMounted(() => {\n  fetchUsers()\n  fetchRoles()\n})\n</script>\n\n<template>\n  <div class=\"users-container\">\n    <h2 class=\"title\">Users</h2>\n    <div class=\"content-container\">\n      <table class=\"users-table\">\n        <thead>\n          <tr>\n            <th>Username</th>\n            <th>Role</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"user in users\" :key=\"user.id\">\n            <template v-if=\"editingUser === user.id\">\n              <td>\n                <input v-model=\"editUserData.username\" placeholder=\"Username\" class=\"input-field\" />\n              </td>\n              <td>\n                <input v-model=\"editUserData.email\" placeholder=\"Email\" class=\"input-field\" />\n              </td>\n              <td>\n                <select v-model=\"editUserData.role_id\" class=\"input-field\">\n                  <option disabled value=\"\">Select Role</option>\n                  <option v-for=\"role in roles\" :key=\"role.id\" :value=\"role.id\">\n                    {{ role.role_name }}\n                  </option>\n                </select>\n              </td>\n              <td class=\"actions-cell\">\n                <input \n                  v-model=\"editUserData.password\" \n                  type=\"password\" \n                  placeholder=\"New Password (optional)\" \n                  class=\"input-field\"\n                />\n                <div class=\"button-group\">\n                  <button @click=\"updateUser(user)\" :disabled=\"loading\" class=\"btn save-btn\">Save</button>\n                  <button @click=\"cancelEdit\" class=\"btn cancel-btn\">Cancel</button>\n                </div>\n              </td>\n            </template>\n            <template v-else>\n              <td>{{ user.username }}</td>\n              <td>{{ user.email }}</td>\n              <td>{{ user.role_name || 'No Role' }}</td>\n              <td class=\"actions-cell\">\n                <div class=\"button-group\">\n                  <button @click=\"startEditUser(user)\" class=\"btn edit-btn\">Edit</button>\n                  <button @click=\"deleteUser(user)\" :disabled=\"loading\" class=\"btn delete-btn\">Delete</button>\n                </div>\n              </td>\n            </template>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"add-form\">\n        <h3>Add New User</h3>\n        <input v-model=\"newUser.username\" placeholder=\"Username\" class=\"input-field\" />\n        <input v-model=\"newUser.email\" type=\"email\" placeholder=\"Email\" class=\"input-field\" />\n        <input v-model=\"newUser.password\" type=\"password\" placeholder=\"Password\" class=\"input-field\" />\n        <select v-model=\"newUser.role_id\" class=\"input-field\">\n          <option disabled value=\"\">Select Role</option>\n          <option v-for=\"role in roles\" :key=\"role.id\" :value=\"role.id\">\n            {{ role.role_name }}\n          </option>\n        </select>\n        <button @click=\"addUser\" :disabled=\"loading\" class=\"btn add-btn\">Add User</button>\n      </div>\n      <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.users-container {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 24px;\n}\n\n.title {\n  color: #2c3e50;\n  font-size: 24px;\n  margin-bottom: 20px;\n  font-weight: 600;\n}\n\n.content-container {\n  border-radius: 6px;\n  border: 1px solid #eaeaea;\n  padding: 16px;\n}\n\n.users-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.users-table th,\n.users-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #eaeaea;\n}\n\n.users-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\n.actions-cell {\n  min-width: 200px;\n}\n\n.button-group {\n  display: flex;\n  gap: 8px;\n}\n\n.input-field {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  margin-bottom: 8px;\n  font-size: 14px;\n}\n\n.input-field:focus {\n  outline: none;\n  border-color: #3b82f6;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.edit-btn {\n  background: #3b82f6;\n  color: white;\n}\n\n.edit-btn:hover {\n  background: #2563eb;\n}\n\n.delete-btn {\n  background: #ef4444;\n  color: white;\n}\n\n.delete-btn:hover {\n  background: #dc2626;\n}\n\n.save-btn {\n  background: #10b981;\n  color: white;\n}\n\n.save-btn:hover {\n  background: #059669;\n}\n\n.cancel-btn {\n  background: #6b7280;\n  color: white;\n}\n\n.cancel-btn:hover {\n  background: #4b5563;\n}\n\n.add-form {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #eaeaea;\n}\n\n.add-form h3 {\n  margin-bottom: 16px;\n  color: #2c3e50;\n}\n\n.add-btn {\n  background: #3b82f6;\n  color: white;\n  width: 100%;\n  padding: 8px;\n}\n\n.add-btn:hover {\n  background: #2563eb;\n}\n\n.error-message {\n  color: #dc2626;\n  background: #fee2e2;\n  padding: 12px;\n  border-radius: 6px;\n  margin-top: 16px;\n  font-size: 14px;\n}\n\n@media (max-width: 768px) {\n  .users-container {\n    padding: 16px;\n  }\n\n  .actions-cell {\n    min-width: auto;\n  }\n\n  .button-group {\n    flex-direction: column;\n  }\n\n  .btn {\n    width: 100%;\n  }\n}\n</style>","<script setup>\nimport { useRouter } from 'vue-router'\nimport UsersCrud from '../components/UsersCrud.vue'\n\nconst router = useRouter()\nconst goToRoles = () => {\n  router.push('/roles')\n}\nconst goToDashboard = () => {\n  router.push('/')\n}\n</script>\n\n<template>\n  <div class=\"users-page\">\n    <div class=\"header-buttons\">\n      <button @click=\"goToDashboard\" class=\"dashboard-btn\">‚Üê Return to Dashboard</button>\n    </div>\n    <UsersCrud />\n    <button @click=\"goToRoles\" class=\"roles-btn\">Manage Roles</button>\n  </div>\n</template>\n\n<style scoped>\n.users-page {\n  padding: 20px;\n}\n\n.header-buttons {\n  margin-bottom: 20px;\n}\n\n.dashboard-btn {\n  padding: 10px 20px;\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1em;\n  transition: background-color 0.3s;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.dashboard-btn:hover {\n  background-color: #2563eb;\n}\n\n.roles-btn {\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1em;\n  transition: background-color 0.3s;\n}\n\n.roles-btn:hover {\n  background-color: #388e3c;\n}\n</style>"],"names":["callApi","error","loading","useApi","users","ref","roles","newUser","editingUser","editUserData","fetchUsers","result","fetchRoles","addUser","startEditUser","user","updateUser","query","params","cancelEdit","deleteUser","onMounted","router","useRouter","goToRoles","goToDashboard"],"mappings":"+gBAIA,KAAM,CAAE,QAAAA,EAAS,MAAAC,EAAO,QAAAC,CAAO,EAAKC,EAAM,EACpCC,EAAQC,EAAI,CAAE,CAAA,EACdC,EAAQD,EAAI,CAAE,CAAA,EACdE,EAAUF,EAAI,CAAE,SAAU,GAAI,MAAO,GAAI,SAAU,GAAI,QAAS,EAAI,CAAA,EACpEG,EAAcH,EAAI,IAAI,EACtBI,EAAeJ,EAAI,CAAE,SAAU,GAAI,MAAO,GAAI,SAAU,GAAI,QAAS,EAAI,CAAA,EAEzEK,EAAa,SAAY,CAC7B,MAAMC,EAAS,MAAMX,EAAQ,CAC3B,MAAO;AAAA;AAAA;AAAA;AAAA,KAKR,CAAA,EACGW,EAAO,UACTP,EAAM,MAAQO,EAAO,KAEzB,EAEMC,EAAa,SAAY,CAC7B,MAAMD,EAAS,MAAMX,EAAQ,CAC3B,MAAO,qBACR,CAAA,EACGW,EAAO,UACTL,EAAM,MAAQK,EAAO,KAEzB,EAEME,EAAU,SAAY,CAC1B,GAAI,CAACN,EAAQ,MAAM,UAAY,CAACA,EAAQ,MAAM,UAAY,CAACA,EAAQ,MAAM,MAAO,OAEhF,MAAMI,EAAS,MAAMX,EAAQ,CAC3B,MAAO,6EACP,OAAQ,CAACO,EAAQ,MAAM,SAAUA,EAAQ,MAAM,MAAOA,EAAQ,MAAM,SAAUA,EAAQ,MAAM,OAAO,EACnG,OAAQ,aACT,CAAA,EACGI,EAAO,SACTD,EAAU,EACVH,EAAQ,MAAQ,CAAE,SAAU,GAAI,MAAO,GAAI,SAAU,GAAI,QAAS,EAAE,IAEpEN,EAAM,MAAQU,EAAO,MACrB,QAAQ,MAAMA,EAAO,KAAK,EAE9B,EAEMG,EAAiBC,GAAS,CAC9BP,EAAY,MAAQO,EAAK,GACzBN,EAAa,MAAQ,CACnB,SAAUM,EAAK,SACf,MAAOA,EAAK,MACZ,SAAU,GACV,QAASA,EAAK,OAClB,CACA,EAEMC,EAAa,MAAOD,GAAS,CACjC,IAAIE,EAAQ,wDACRC,EAAS,CAACT,EAAa,MAAM,SAAUA,EAAa,MAAM,MAAOA,EAAa,MAAM,OAAO,EAE3FA,EAAa,MAAM,WACrBQ,GAAS,iBACTC,EAAO,KAAKT,EAAa,MAAM,QAAQ,GAGzCQ,GAAS,gBACTC,EAAO,KAAKH,EAAK,EAAE,GAEJ,MAAMf,EAAQ,CAC3B,MAAAiB,EACA,OAAAC,EACA,OAAQT,EAAa,MAAM,SAAW,gBAAkB,MACzD,CAAA,GAEU,UACTC,EAAU,EACVS,EAAU,EAEd,EAEMA,EAAa,IAAM,CACvBX,EAAY,MAAQ,KACpBC,EAAa,MAAQ,CAAE,SAAU,GAAI,SAAU,GAAI,QAAS,EAAE,CAChE,EAEMW,EAAa,MAAOL,GAAS,CACjC,GAAI,CAAC,QAAQ,yCAAyCA,EAAK,QAAQ,IAAI,EACrE,QAGa,MAAMf,EAAQ,CAC3B,MAAO,iCACP,OAAQ,CAACe,EAAK,EAAE,CACjB,CAAA,GACU,SACTL,EAAU,CAEd,EAEA,OAAAW,EAAU,IAAM,CACdX,EAAU,EACVE,EAAU,CACZ,CAAC,qiFCtGD,MAAMU,EAASC,EAAS,EAClBC,EAAY,IAAM,CACtBF,EAAO,KAAK,QAAQ,CACtB,EACMG,EAAgB,IAAM,CAC1BH,EAAO,KAAK,GAAG,CACjB"}