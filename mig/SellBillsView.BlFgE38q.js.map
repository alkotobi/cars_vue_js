{"version":3,"file":"SellBillsView.BlFgE38q.js","sources":["../src/components/sells/SellBillsTable.vue","../src/components/sells/SellBillForm.vue","../src/components/sells/SellBillCarsTable.vue","../src/components/sells/CarAssignmentForm.vue","../src/components/sells/UnassignedCarsTable.vue","../src/assets/logo.png","../src/components/sells/SellBillPrint.vue","../src/views/SellBillsView.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted, defineProps, defineEmits } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\nconst props = defineProps({\n  onEdit: Function,\n  onDelete: Function,\n  onSelect: Function\n})\n\nconst emit = defineEmits(['refresh', 'select-bill'])\n\nconst { callApi } = useApi()\nconst sellBills = ref([])\nconst loading = ref(true)\nconst error = ref(null)\nconst selectedBillId = ref(null)\n\nconst fetchSellBills = async () => {\n  loading.value = true\n  error.value = null\n  \n  try {\n    const result = await callApi({\n      query: `\n        SELECT \n          sb.id,\n          sb.id_broker,\n          sb.date_sell,\n          sb.notes,\n          c.name as broker_name\n        FROM sell_bill sb\n        LEFT JOIN clients c ON sb.id_broker = c.id AND c.is_broker = 1\n        ORDER BY sb.date_sell DESC\n      `,\n      params: []\n    })\n    \n    if (result.success) {\n      sellBills.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch sell bills'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\nconst handleEdit = (bill) => {\n  if (props.onEdit) {\n    props.onEdit(bill)\n  }\n}\n\nconst handleDelete = (id) => {\n  if (props.onDelete) {\n    props.onDelete(id)\n  }\n}\n\nconst selectBill = (bill) => {\n  selectedBillId.value = bill.id\n  \n  // Emit the selected bill ID to the parent component\n  emit('select-bill', bill.id)\n  \n  if (props.onSelect) {\n    props.onSelect(bill.id)\n  }\n}\n\n// Expose the fetchSellBills method to parent component\ndefineExpose({ fetchSellBills })\n\nonMounted(() => {\n  fetchSellBills()\n})\n</script>\n\n<template>\n  <div class=\"sell-bills-table-component\">\n    <h3>Sell Bills</h3>\n    <div v-if=\"loading\" class=\"loading\">Loading...</div>\n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\n    <div v-else-if=\"sellBills.length === 0\" class=\"no-data\">\n      No sell bills found\n    </div>\n    <table v-else class=\"sell-bills-table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Date</th>\n          <th>Broker</th>\n          <th>Notes</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr \n          v-for=\"bill in sellBills\" \n          :key=\"bill.id\" \n          @click=\"selectBill(bill)\"\n          :class=\"{ 'selected': selectedBillId === bill.id }\"\n        >\n          <td>{{ bill.id }}</td>\n          <td>{{ new Date(bill.date_sell).toLocaleDateString() }}</td>\n          <td>{{ bill.broker_name || 'N/A' }}</td>\n          <td>{{ bill.notes || 'N/A' }}</td>\n          <td>\n            <button @click.stop=\"handleEdit(bill)\" class=\"edit-btn\">Edit</button>\n            <button @click.stop=\"handleDelete(bill.id)\" class=\"delete-btn\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<style scoped>\n.sell-bills-table-component {\n  margin-bottom: 20px;\n}\n\n.sell-bills-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.sell-bills-table th,\n.sell-bills-table td {\n  padding: 10px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.sell-bills-table th {\n  background-color: #f2f2f2;\n  font-weight: bold;\n}\n\n.sell-bills-table tr:hover {\n  background-color: #f5f5f5;\n  cursor: pointer;\n}\n\n.sell-bills-table tr.selected {\n  background-color: #e3f2fd;\n}\n\n.loading, .error, .no-data {\n  padding: 20px;\n  text-align: center;\n}\n\n.error {\n  color: red;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 10px;\n  margin-right: 5px;\n  cursor: pointer;\n}\n\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n</style>","<script setup>\nimport { ref, onMounted, watch, defineProps, defineEmits } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\nconst props = defineProps({\n  mode: {\n    type: String,\n    default: 'add', // 'add' or 'edit'\n    validator: (value) => ['add', 'edit'].includes(value)\n  },\n  billData: {\n    type: Object,\n    default: () => ({\n      id: null,\n      id_broker: null,\n      date_sell: new Date().toISOString().split('T')[0],\n      notes: ''\n    })\n  }\n})\nconst user = ref(null);\n\nconst emit = defineEmits(['save', 'cancel'])\n\nconst { callApi } = useApi()\nconst brokers = ref([])\nconst loading = ref(false)\nconst error = ref(null)\n\nconst formData = ref({\n  id: null,\n  id_broker: null,\n  date_sell: new Date().toISOString().split('T')[0],\n  notes: ''\n})\n\n// Watch for changes in billData prop\nwatch(() => props.billData, (newData) => {\n  if (newData) {\n    formData.value = { ...newData }\n    // Ensure date is in the correct format for the date input\n    if (formData.value.date_sell) {\n      const date = new Date(formData.value.date_sell)\n      if (!isNaN(date)) {\n        formData.value.date_sell = date.toISOString().split('T')[0]\n      }\n    }\n  }\n}, { immediate: true })\n\nconst fetchBrokers = async () => {\n  try {\n    const result = await callApi({\n      query: `\n        SELECT id, name\n        FROM clients\n        WHERE is_broker = 1\n        ORDER BY name ASC\n      `,\n      params: []\n    })\n    \n    if (result.success) {\n      brokers.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch brokers'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\nconst saveBill = async () => {\n  loading.value = true\n  error.value = null\n  \n  try {\n    let result\n    \n    if (props.mode === 'add') {\n      result = await callApi({\n        query: `\n          INSERT INTO sell_bill (id_broker, date_sell, notes,id_user)\n          VALUES (?, ?, ?,?)\n        `,\n        params: [\n          formData.value.id_broker || null,\n          formData.value.date_sell,\n          formData.value.notes || '',\n          user.value.id\n        ]\n      })\n    } else {\n      result = await callApi({\n        query: `\n          UPDATE sell_bill\n          SET id_broker = ?, date_sell = ?, notes = ?\n          WHERE id = ?\n        `,\n        params: [\n          formData.value.id_broker || null,\n          formData.value.date_sell,\n          formData.value.notes || '',\n          formData.value.id\n        ]\n      })\n    }\n    \n    if (result.success) {\n      emit('save', result.data)\n    } else {\n      error.value = result.error || `Failed to ${props.mode} sell bill`\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchBrokers()\n  }\n  \n})\n</script>\n\n<template>\n  <div class=\"sell-bill-form\">\n    <h3>{{ mode === 'add' ? 'Add New' : 'Edit' }} Sell Bill</h3>\n    \n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n    \n    <form @submit.prevent=\"saveBill\">\n      <div class=\"form-group\">\n        <label for=\"broker\">Broker:</label>\n        <select id=\"broker\" v-model=\"formData.id_broker\">\n          <option value=\"\">Select Broker</option>\n          <option v-for=\"broker in brokers\" :key=\"broker.id\" :value=\"broker.id\">\n            {{ broker.name }}\n          </option>\n        </select>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"date\">Date:</label>\n        <input type=\"date\" id=\"date\" v-model=\"formData.date_sell\" required>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"notes\">Notes:</label>\n        <textarea id=\"notes\" v-model=\"formData.notes\"></textarea>\n      </div>\n      \n      <div class=\"form-actions\">\n        <button type=\"button\" @click=\"$emit('cancel')\" class=\"cancel-btn\">Cancel</button>\n        <button type=\"submit\" class=\"save-btn\" :disabled=\"loading\">\n          {{ loading ? 'Saving...' : (mode === 'add' ? 'Add' : 'Update') }}\n        </button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<style scoped>\n.sell-bill-form {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\ninput, select, textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ntextarea {\n  height: 100px;\n  resize: vertical;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 20px;\n}\n\nbutton {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.save-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.save-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.error {\n  color: red;\n  margin-bottom: 15px;\n  padding: 10px;\n  background-color: #ffebee;\n  border-radius: 4px;\n}\n</style>","<script setup>\nimport { ref, watch, defineProps, defineEmits } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\nconst props = defineProps({\n  sellBillId: {\n    type: Number,\n    default: null\n  }\n})\n\nconst emit = defineEmits(['refresh'])\n\nconst { callApi } = useApi()\nconst cars = ref([])\nconst loading = ref(false)\nconst error = ref(null)\n\n// Function to unassign a car from the sell bill\nconst unassignCar = async (carId) => {\n  if (!confirm('Are you sure you want to unassign this car from the sell bill?')) {\n    return\n  }\n  \n  loading.value = true\n  error.value = null\n  \n  try {\n    const result = await callApi({\n      query: `\n        UPDATE cars_stock \n        SET id_sell = NULL, \n            id_client = NULL, \n            id_port_discharge = NULL, \n            freight = NULL \n        WHERE id = ?\n      `,\n      params: [carId]\n    })\n    \n    if (result.success) {\n      // Refresh the cars list for this component\n      await fetchCarsByBillId(props.sellBillId)\n      \n      // Emit refresh event to parent to update other components\n      emit('refresh')\n    } else {\n      error.value = result.error || 'Failed to unassign car'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\nconst fetchCarsByBillId = async (billId) => {\n  if (!billId) {\n    cars.value = []\n    return\n  }\n  \n  loading.value = true\n  error.value = null\n  \n  try {\n    const result = await callApi({\n      query: `\n        SELECT \n          cs.id,\n          cs.vin,\n          cs.notes,\n          cs.date_sell,\n          cs.price_cell,\n          cs.freight,\n          cs.date_loding,\n          cs.date_send_documents,\n          c.name as client_name,\n          lp.loading_port,\n          dp.discharge_port,\n          bd.price_sell as buy_price,\n          cn.car_name,\n          clr.color\n        FROM cars_stock cs\n        LEFT JOIN clients c ON cs.id_client = c.id\n        LEFT JOIN loading_ports lp ON cs.id_port_loading = lp.id\n        LEFT JOIN discharge_ports dp ON cs.id_port_discharge = dp.id\n        LEFT JOIN buy_details bd ON cs.id_buy_details = bd.id\n        LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n        LEFT JOIN colors clr ON bd.id_color = clr.id\n        WHERE cs.id_sell = ?\n        ORDER BY cs.id DESC\n      `,\n      params: [billId]\n    })\n    \n    if (result.success) {\n      cars.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch cars'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\n// Watch for changes in the sellBillId prop\nwatch(() => props.sellBillId, (newId) => {\n  if (newId) {\n    fetchCarsByBillId(newId)\n  } else {\n    cars.value = []\n  }\n}, { immediate: true })\n\n// Calculate profit\nconst calculateProfit = (sellPrice, buyPrice, freight) => {\n  if (!sellPrice || !buyPrice) return 'N/A'\n  const sell = parseFloat(sellPrice)\n  const buy = parseFloat(buyPrice)\n  const freightCost = freight ? parseFloat(freight) : 0\n  return (sell - buy - freightCost).toFixed(2)\n}\n\n// Expose methods to parent component\ndefineExpose({\n  fetchCarsByBillId\n})\n</script>\n\n<template>\n  <div class=\"sell-bill-cars-table\">\n    <h3>Cars in Selected Bill</h3>\n    \n    <div v-if=\"!props.sellBillId\" class=\"no-selection\">\n      Please select a sell bill to view associated cars\n    </div>\n    \n    <div v-else-if=\"loading\" class=\"loading\">Loading cars...</div>\n    \n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\n    \n    <div v-else-if=\"cars.length === 0\" class=\"no-data\">\n      No cars found for this sell bill\n    </div>\n    \n    <table v-else class=\"cars-table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Car</th>\n          <th>Color</th>\n          <th>VIN</th>\n          <th>Client</th>\n          <th>Loading Port</th>\n          <th>Discharge Port</th>\n          <th>Buy Price</th>\n          <th>Sell Price</th>\n          <th>Freight</th>\n          <th>Profit</th>\n          <th>Notes</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"car in cars\" :key=\"car.id\">\n          <td>{{ car.id }}</td>\n          <td>{{ car.car_name || 'N/A' }}</td>\n          <td>{{ car.color || 'N/A' }}</td>\n          <td>{{ car.vin || 'N/A' }}</td>\n          <td>{{ car.client_name || 'N/A' }}</td>\n          <td>{{ car.loading_port || 'N/A' }}</td>\n          <td>{{ car.discharge_port || 'N/A' }}</td>\n          <td>${{ car.buy_price || 'N/A' }}</td>\n          <td>${{ car.price_cell || 'N/A' }}</td>\n          <td>${{ car.freight || '0.00' }}</td>\n          <td>${{ calculateProfit(car.price_cell, car.buy_price, car.freight) }}</td>\n          <td>{{ car.notes || 'N/A' }}</td>\n          <td>\n            <button @click=\"unassignCar(car.id)\" class=\"unassign-btn\">Unassign</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<style scoped>\n.sell-bill-cars-table {\n  margin-top: 30px;\n}\n\nh3 {\n  margin-bottom: 15px;\n  font-size: 1.2rem;\n  color: #333;\n}\n\n.no-selection, .loading, .error, .no-data {\n  padding: 20px;\n  text-align: center;\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  color: #666;\n}\n\n.error {\n  color: #ef4444;\n  background-color: #fee2e2;\n}\n\n.cars-table {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 0.9rem;\n}\n\n.cars-table th,\n.cars-table td {\n  padding: 10px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.cars-table th {\n  background-color: #f3f4f6;\n  font-weight: 600;\n}\n\n.cars-table tbody tr:hover {\n  background-color: #f9fafb;\n}\n\n.unassign-btn {\n  background-color: #ef4444;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 10px;\n  cursor: pointer;\n  font-size: 0.8rem;\n}\n\n.unassign-btn:hover {\n  background-color: #dc2626;\n}\n</style>","<script setup>\nimport { ref, onMounted, defineProps, defineEmits } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\nconst props = defineProps({\n  carId: {\n    type: Number,\n    default: null\n  },\n  sellBillId: {\n    type: Number,\n    default: null\n  },\n  visible: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['close', 'assign-success'])\n\nconst { callApi } = useApi()\nconst loading = ref(false)\nconst error = ref(null)\nconst clients = ref([])\nconst dischargePorts = ref([])\nconst carDetails = ref(null)\n\nconst formData = ref({\n  id_client: null,\n  id_port_discharge: null,\n  price_cell: null,\n  freight: null\n})\n\n// Fetch clients for dropdown\nconst fetchClients = async () => {\n  try {\n    const result = await callApi({\n      query: `\n        SELECT id, name\n        FROM clients\n        WHERE is_broker = 0\n        ORDER BY name ASC\n      `,\n      params: []\n    })\n    \n    if (result.success) {\n      clients.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch clients'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\n// Fetch discharge ports for dropdown\nconst fetchDischargePorts = async () => {\n  try {\n    const result = await callApi({\n      query: `\n        SELECT id, discharge_port\n        FROM discharge_ports\n        ORDER BY discharge_port ASC\n      `,\n      params: []\n    })\n    \n    if (result.success) {\n      dischargePorts.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch discharge ports'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\n// Fetch car details to show in the form\nconst fetchCarDetails = async () => {\n  if (!props.carId) return\n  \n  try {\n    const result = await callApi({\n      query: `\n        SELECT \n          cs.id,\n          cs.vin,\n          cn.car_name,\n          clr.color,\n          bd.price_sell as buy_price\n        FROM cars_stock cs\n        LEFT JOIN buy_details bd ON cs.id_buy_details = bd.id\n        LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n        LEFT JOIN colors clr ON bd.id_color = clr.id\n        WHERE cs.id = ?\n      `,\n      params: [props.carId]\n    })\n    \n    if (result.success && result.data.length > 0) {\n      carDetails.value = result.data[0]\n    } else {\n      error.value = result.error || 'Failed to fetch car details'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\n// Assign car with collected data\nconst assignCar = async () => {\n  if (!validateForm()) return\n  \n  loading.value = true\n  error.value = null\n  \n  try {\n    const result = await callApi({\n      query: `\n        UPDATE cars_stock \n        SET id_sell = ?,\n            id_client = ?,\n            id_port_discharge = ?,\n            price_cell = ?,\n            freight = ?\n        WHERE id = ?\n      `,\n      params: [\n        props.sellBillId,\n        formData.value.id_client,\n        formData.value.id_port_discharge,\n        formData.value.price_cell,\n        formData.value.freight || null,\n        props.carId\n      ]\n    })\n    \n    if (result.success) {\n      emit('assign-success')\n      resetForm()\n    } else {\n      error.value = result.error || 'Failed to assign car'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\n// Validate form before submission\nconst validateForm = () => {\n  if (!formData.value.id_client) {\n    error.value = 'Please select a client'\n    return false\n  }\n  \n  if (!formData.value.id_port_discharge) {\n    error.value = 'Please select a discharge port'\n    return false\n  }\n  \n  if (!formData.value.price_cell) {\n    error.value = 'Please enter a sell price'\n    return false\n  }\n  \n  return true\n}\n\n// Reset form after submission\nconst resetForm = () => {\n  formData.value = {\n    id_client: null,\n    id_port_discharge: null,\n    price_cell: null,\n    freight: null\n  }\n  error.value = null\n}\n\n// Calculate potential profit\nconst calculateProfit = () => {\n  if (!carDetails.value?.buy_price || !formData.value.price_cell) return 'N/A'\n  \n  const buyPrice = parseFloat(carDetails.value.buy_price)\n  const sellPrice = parseFloat(formData.value.price_cell)\n  const freightCost = formData.value.freight ? parseFloat(formData.value.freight) : 0\n  \n  return (sellPrice - buyPrice - freightCost).toFixed(2)\n}\n\nonMounted(() => {\n  fetchClients()\n  fetchDischargePorts()\n  if (props.carId) {\n    fetchCarDetails()\n  }\n})\n</script>\n\n<template>\n  <div v-if=\"visible\" class=\"car-assignment-form-overlay\">\n    <div class=\"car-assignment-form\">\n      <div class=\"form-header\">\n        <h3>Assign Car to Sell Bill</h3>\n        <button @click=\"$emit('close')\" class=\"close-btn\">&times;</button>\n      </div>\n      \n      <div v-if=\"error\" class=\"error\">{{ error }}</div>\n      \n      <div v-if=\"carDetails\" class=\"car-details\">\n        <div class=\"detail-item\">\n          <span class=\"label\">Car:</span>\n          <span class=\"value\">{{ carDetails.car_name }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">Color:</span>\n          <span class=\"value\">{{ carDetails.color }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">VIN:</span>\n          <span class=\"value\">{{ carDetails.vin }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">Buy Price:</span>\n          <span class=\"value\">${{ carDetails.buy_price }}</span>\n        </div>\n      </div>\n      \n      <form @submit.prevent=\"assignCar\">\n        <div class=\"form-group\">\n          <label for=\"client\">Client: <span class=\"required\">*</span></label>\n          <select id=\"client\" v-model=\"formData.id_client\" required>\n            <option value=\"\">Select Client</option>\n            <option v-for=\"client in clients\" :key=\"client.id\" :value=\"client.id\">\n              {{ client.name }}\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"discharge-port\">Discharge Port: <span class=\"required\">*</span></label>\n          <select id=\"discharge-port\" v-model=\"formData.id_port_discharge\" required>\n            <option value=\"\">Select Discharge Port</option>\n            <option v-for=\"port in dischargePorts\" :key=\"port.id\" :value=\"port.id\">\n              {{ port.discharge_port }}\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"sell-price\">Sell Price: <span class=\"required\">*</span></label>\n          <input \n            type=\"number\" \n            id=\"sell-price\" \n            v-model=\"formData.price_cell\" \n            step=\"0.01\" \n            min=\"0\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"freight\">Freight:</label>\n          <input \n            type=\"number\" \n            id=\"freight\" \n            v-model=\"formData.freight\" \n            step=\"0.01\" \n            min=\"0\"\n          >\n        </div>\n        \n        <div v-if=\"formData.price_cell && carDetails?.buy_price\" class=\"profit-calculation\">\n          <span class=\"label\">Estimated Profit:</span>\n          <span class=\"value profit\">${{ calculateProfit() }}</span>\n        </div>\n        \n        <div class=\"form-actions\">\n          <button type=\"button\" @click=\"$emit('close')\" class=\"cancel-btn\">Cancel</button>\n          <button type=\"submit\" class=\"assign-btn\" :disabled=\"loading\">\n            {{ loading ? 'Assigning...' : 'Assign Car' }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.car-assignment-form-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.car-assignment-form {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.form-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.form-header h3 {\n  margin: 0;\n  font-size: 1.2rem;\n  color: #333;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  color: #666;\n}\n\n.car-details {\n  background-color: #f9fafb;\n  border-radius: 4px;\n  padding: 15px;\n  margin-bottom: 20px;\n}\n\n.detail-item {\n  display: flex;\n  margin-bottom: 8px;\n}\n\n.detail-item:last-child {\n  margin-bottom: 0;\n}\n\n.label {\n  font-weight: 600;\n  width: 100px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 500;\n}\n\n.required {\n  color: #ef4444;\n}\n\nselect, input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.profit-calculation {\n  background-color: #ecfdf5;\n  padding: 10px;\n  border-radius: 4px;\n  margin: 15px 0;\n  display: flex;\n  align-items: center;\n}\n\n.profit {\n  color: #10b981;\n  font-weight: 600;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n}\n\n.assign-btn {\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n}\n\n.assign-btn:disabled {\n  background-color: #93c5fd;\n  cursor: not-allowed;\n}\n\n.error {\n  color: #ef4444;\n  background-color: #fee2e2;\n  padding: 10px;\n  border-radius: 4px;\n  margin-bottom: 15px;\n}\n</style>","<script setup>\nimport { ref, onMounted, defineEmits, computed } from 'vue'\nimport { useApi } from '../../composables/useApi'\nimport CarAssignmentForm from './CarAssignmentForm.vue'\n\nconst emit = defineEmits(['refresh', 'assign-car'])\n\nconst { callApi } = useApi()\nconst unassignedCars = ref([])\nconst allUnassignedCars = ref([]) // Store all unassigned cars before filtering\nconst loading = ref(true)\nconst error = ref(null)\nconst selectedSellBillId = ref(null)\nconst showAssignmentForm = ref(false)\nconst selectedCarId = ref(null)\n\n// Filter states\nconst filters = ref({\n  carName: '',\n  color: '',\n  vin: '',\n  loadingPort: ''\n})\n\n// Function to fetch all unassigned cars\nconst fetchUnassignedCars = async () => {\n  loading.value = true\n  error.value = null\n  \n  try {\n    const result = await callApi({\n      query: `\n        SELECT \n          cs.id,\n          cs.vin,\n          cs.notes,\n          cs.price_cell,\n          cs.freight,\n          cs.date_loding,\n          cs.path_documents,\n          lp.loading_port,\n          bd.price_sell as buy_price,\n          cn.car_name,\n          clr.color\n        FROM cars_stock cs\n        LEFT JOIN loading_ports lp ON cs.id_port_loading = lp.id\n        LEFT JOIN buy_details bd ON cs.id_buy_details = bd.id\n        LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n        LEFT JOIN colors clr ON bd.id_color = clr.id\n        WHERE cs.id_sell IS NULL\n        AND cs.hidden = 0\n        ORDER BY cs.id DESC\n      `,\n      params: []\n    })\n    \n    if (result.success) {\n      allUnassignedCars.value = result.data\n      applyFilters() // Apply filters to the fetched data\n    } else {\n      error.value = result.error || 'Failed to fetch unassigned cars'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\n// Apply filters to the cars list\nconst applyFilters = () => {\n  unassignedCars.value = allUnassignedCars.value.filter(car => {\n    const matchCarName = !filters.value.carName || \n      (car.car_name && car.car_name.toLowerCase().includes(filters.value.carName.toLowerCase()))\n    \n    const matchColor = !filters.value.color || \n      (car.color && car.color.toLowerCase().includes(filters.value.color.toLowerCase()))\n    \n    const matchVin = !filters.value.vin || \n      (car.vin && car.vin.toLowerCase().includes(filters.value.vin.toLowerCase()))\n    \n    const matchLoadingPort = !filters.value.loadingPort || \n      (car.loading_port && car.loading_port.toLowerCase().includes(filters.value.loadingPort.toLowerCase()))\n    \n    return matchCarName && matchColor && matchVin && matchLoadingPort\n  })\n}\n\n// Reset all filters\nconst resetFilters = () => {\n  filters.value = {\n    carName: '',\n    color: '',\n    vin: '',\n    loadingPort: ''\n  }\n  applyFilters()\n}\n\n// Watch for filter changes\nconst handleFilterChange = () => {\n  applyFilters()\n}\n\n// Open assignment form for a car\nconst openAssignmentForm = (carId) => {\n  if (!selectedSellBillId.value) {\n    alert('Please select a sell bill first')\n    return\n  }\n  \n  selectedCarId.value = carId\n  showAssignmentForm.value = true\n}\n\n// Handle successful assignment\nconst handleAssignSuccess = () => {\n  showAssignmentForm.value = false\n  fetchUnassignedCars()\n  emit('refresh')\n}\n\n// Set the selected sell bill ID\nconst setSellBillId = (billId) => {\n  selectedSellBillId.value = billId\n}\n\n// Calculate profit\nconst calculateProfit = (sellPrice, buyPrice, freight) => {\n  if (!sellPrice || !buyPrice) return 'N/A'\n  const sell = parseFloat(sellPrice)\n  const buy = parseFloat(buyPrice)\n  const freightCost = freight ? parseFloat(freight) : 0\n  return (sell - buy - freightCost).toFixed(2)\n}\n\n// Expose methods to parent component\ndefineExpose({\n  fetchUnassignedCars,\n  setSellBillId\n})\n\nonMounted(() => {\n  fetchUnassignedCars()\n})\n</script>\n\n<template>\n  <div class=\"unassigned-cars-table\">\n    <h3>Unassigned Cars</h3>\n    \n    <!-- Filters -->\n    <div class=\"filters\">\n      <div class=\"filter-row\">\n        <div class=\"filter-group\">\n          <label for=\"car-name-filter\">Car Name:</label>\n          <input \n            id=\"car-name-filter\" \n            v-model=\"filters.carName\" \n            @input=\"handleFilterChange\" \n            placeholder=\"Filter by car name\"\n          />\n        </div>\n        \n        <div class=\"filter-group\">\n          <label for=\"color-filter\">Color:</label>\n          <input \n            id=\"color-filter\" \n            v-model=\"filters.color\" \n            @input=\"handleFilterChange\" \n            placeholder=\"Filter by color\"\n          />\n        </div>\n        \n        <div class=\"filter-group\">\n          <label for=\"vin-filter\">VIN:</label>\n          <input \n            id=\"vin-filter\" \n            v-model=\"filters.vin\" \n            @input=\"handleFilterChange\" \n            placeholder=\"Filter by VIN\"\n          />\n        </div>\n        \n        <div class=\"filter-group\">\n          <label for=\"loading-port-filter\">Loading Port:</label>\n          <input \n            id=\"loading-port-filter\" \n            v-model=\"filters.loadingPort\" \n            @input=\"handleFilterChange\" \n            placeholder=\"Filter by loading port\"\n          />\n        </div>\n        \n        <button @click=\"resetFilters\" class=\"reset-btn\">Reset Filters</button>\n      </div>\n    </div>\n    \n    <div v-if=\"loading\" class=\"loading\">Loading cars...</div>\n    \n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\n    \n    <div v-else-if=\"unassignedCars.length === 0\" class=\"no-data\">\n      No unassigned cars found matching your filters\n    </div>\n    \n    <table v-else class=\"cars-table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Car</th>\n          <th>Color</th>\n          <th>VIN</th>\n          <th>Loading Port</th>\n          <th>Buy Price</th>\n          <th>Notes</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"car in unassignedCars\" :key=\"car.id\">\n          <td>{{ car.id }}</td>\n          <td>{{ car.car_name || 'N/A' }}</td>\n          <td>{{ car.color || 'N/A' }}</td>\n          <td>{{ car.vin || 'N/A' }}</td>\n          <td>{{ car.loading_port || 'N/A' }}</td>\n          <td>${{ car.buy_price || 'N/A' }}</td>\n          <td>{{ car.notes || 'N/A' }}</td>\n          <td>\n            <button \n              @click=\"openAssignmentForm(car.id)\" \n              class=\"assign-btn\"\n              :disabled=\"!selectedSellBillId\"\n            >\n              Assign to Bill\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    \n    <!-- Car Assignment Form -->\n    <CarAssignmentForm\n      :visible=\"showAssignmentForm\"\n      :carId=\"selectedCarId\"\n      :sellBillId=\"selectedSellBillId\"\n      @close=\"showAssignmentForm = false\"\n      @assign-success=\"handleAssignSuccess\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.unassigned-cars-table {\n  margin-top: 30px;\n}\n\nh3 {\n  margin-bottom: 15px;\n  font-size: 1.2rem;\n  color: #333;\n}\n\n.filters {\n  margin-bottom: 20px;\n  padding: 15px;\n  background-color: #f9fafb;\n  border-radius: 6px;\n  border: 1px solid #e5e7eb;\n}\n\n.filter-row {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  align-items: flex-end;\n}\n\n.filter-group {\n  flex: 1;\n  min-width: 200px;\n}\n\n.filter-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: #4b5563;\n}\n\n.filter-group input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.reset-btn {\n  background-color: #6b7280;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  height: 38px;\n}\n\n.reset-btn:hover {\n  background-color: #4b5563;\n}\n\n.loading, .error, .no-data {\n  padding: 20px;\n  text-align: center;\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  color: #666;\n}\n\n.error {\n  color: #ef4444;\n  background-color: #fee2e2;\n}\n\n.cars-table {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 0.9rem;\n}\n\n.cars-table th,\n.cars-table td {\n  padding: 10px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.cars-table th {\n  background-color: #f3f4f6;\n  font-weight: 600;\n}\n\n.cars-table tbody tr:hover {\n  background-color: #f9fafb;\n}\n\n.assign-btn {\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 10px;\n  cursor: pointer;\n  font-size: 0.8rem;\n}\n\n.assign-btn:hover:not(:disabled) {\n  background-color: #2563eb;\n}\n\n.assign-btn:disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n}\n</style>","export default \"__VITE_ASSET__DacSPZ0B__\"","<script setup>\nimport { ref, onMounted, watch, defineProps } from 'vue'\nimport { useApi } from '../../composables/useApi'\nimport logo from '../../assets/logo.png' // Import the logo\n\nconst props = defineProps({\n  billId: {\n    type: Number,\n    required: true\n  },\n  visible: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['close'])\n\nconst { callApi } = useApi()\nconst loading = ref(true)\nconst error = ref(null)\nconst billData = ref(null)\nconst billCars = ref([])\nconst companyInfo = ref({\n  name: 'GROUP MERHAB LIMITED',\n  address: 'GUANGZHOU, CHINA',\n  phone: '+86 123 456 7890',\n  email: 'merhab@merhab.com',\n  logo: logo // Use the imported logo\n})\n\n// Fetch bill data and associated cars\nconst fetchBillData = async () => {\n  if (!props.billId) return\n  \n  loading.value = true\n  error.value = null\n  \n  try {\n    // Fetch bill details - removing the non-existent columns\n    const billResult = await callApi({\n      query: `\n        SELECT \n          sb.id,\n          sb.date_sell,\n          sb.notes,\n          c.name as broker_name,\n          c.address as broker_address\n        FROM sell_bill sb\n        LEFT JOIN clients c ON sb.id_broker = c.id\n        WHERE sb.id = ?\n      `,\n      params: [props.billId]\n    })\n    \n    if (!billResult.success) {\n      error.value = billResult.error || 'Failed to fetch bill data'\n      return\n    }\n    \n    if (billResult.data.length === 0) {\n      error.value = 'Bill not found'\n      return\n    }\n    \n    billData.value = billResult.data[0]\n    \n    // Fetch cars associated with this bill\n    const carsResult = await callApi({\n      query: `\n        SELECT \n          cs.id,\n          cs.vin,\n          cs.notes,\n          cs.price_cell,\n          cs.freight,\n          c.name as client_name,\n          lp.loading_port,\n          dp.discharge_port,\n          bd.price_sell as buy_price,\n          cn.car_name,\n          clr.color\n        FROM cars_stock cs\n        LEFT JOIN clients c ON cs.id_client = c.id\n        LEFT JOIN loading_ports lp ON cs.id_port_loading = lp.id\n        LEFT JOIN discharge_ports dp ON cs.id_port_discharge = dp.id\n        LEFT JOIN buy_details bd ON cs.id_buy_details = bd.id\n        LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n        LEFT JOIN colors clr ON bd.id_color = clr.id\n        WHERE cs.id_sell = ?\n        ORDER BY cs.id\n      `,\n      params: [props.billId]\n    })\n    \n    if (!carsResult.success) {\n      error.value = carsResult.error || 'Failed to fetch cars data'\n      return\n    }\n    \n    billCars.value = carsResult.data\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\n// Calculate totals\nconst calculateTotals = () => {\n  let totalSellPrice = 0\n  let totalFreight = 0\n  \n  billCars.value.forEach(car => {\n    if (car.price_cell) totalSellPrice += parseFloat(car.price_cell)\n    if (car.freight) totalFreight += parseFloat(car.freight)\n  })\n  \n  return {\n    totalSellPrice: totalSellPrice.toFixed(2),\n    totalFreight: totalFreight.toFixed(2),\n    grandTotal: (totalSellPrice + totalFreight).toFixed(2)\n  }\n}\n\n// Format date for display\nconst formatDate = (dateString) => {\n  if (!dateString) return 'N/A'\n  const date = new Date(dateString)\n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  })\n}\n\n// Print the bill\nconst printBill = () => {\n  window.print()\n}\n\n// Close the print view\nconst closePrintView = () => {\n  emit('close')\n}\n\n// Watch for changes in billId or visibility\nwatch(() => [props.billId, props.visible], ([newBillId, newVisible]) => {\n  if (newVisible && newBillId) {\n    fetchBillData()\n  }\n}, { immediate: true })\n\n// Add new refs for document selection\nconst showDocumentDialog = ref(false)\nconst selectedDocType = ref('invoice') // Default value\nconst selectedCurrency = ref('usd') // Default value\n\n// Document type options\nconst documentTypes = [\n  { value: 'proforma', label: 'Proforma Invoice' },\n  { value: 'invoice', label: 'Invoice' },\n  { value: 'contract', label: 'Sell Contract' }\n]\n\nconst currencies = [\n  { value: 'usd', label: 'USD' },\n  { value: 'dza', label: 'DZA' }\n]\n\n// Handle print button click\nconst handlePrintClick = () => {\n  showDocumentDialog.value = true\n}\n\n// Handle print confirmation\nconst confirmPrint = () => {\n  showDocumentDialog.value = false\n  // Add logic to customize the print based on selectedDocType.value and selectedCurrency.value\n  window.print()\n}\n</script>\n\n<template>\n  <div v-if=\"visible\" class=\"print-overlay\">\n    <div class=\"print-container\">\n      <div class=\"print-controls no-print\">\n        <button @click=\"printBill\" class=\"print-btn\">Print</button>\n        <button @click=\"closePrintView\" class=\"close-btn\">Close</button>\n      </div>\n      \n      <div v-if=\"loading\" class=\"loading\">Loading bill data...</div>\n      \n      <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\n      \n      <div v-else-if=\"billData\" class=\"bill-document\">\n        <!-- Header -->\n        <div class=\"bill-header\">\n          <div class=\"company-info\">\n            <img :src=\"companyInfo.logo\" alt=\"Company Logo\" class=\"company-logo\" />\n            <div class=\"company-details\">\n              <h2>{{ companyInfo.name }}</h2>\n              <p>{{ companyInfo.address }}</p>\n              <p>{{ companyInfo.phone }} | {{ companyInfo.email }}</p>\n            </div>\n          </div>\n          \n          <div class=\"bill-info\">\n            <h1>SELL BILL</h1>\n            <p><strong>Bill #:</strong> {{ billData.id }}</p>\n            <p><strong>Date:</strong> {{ formatDate(billData.date_sell) }}</p>\n          </div>\n        </div>\n        \n        <!-- Broker Info -->\n        <div class=\"broker-info\">\n          <h3>Broker Information</h3>\n          <p><strong>Name:</strong> {{ billData.broker_name || 'N/A' }}</p>\n          <p v-if=\"billData.broker_address\"><strong>Address:</strong> {{ billData.broker_address }}</p>\n          <!-- Remove or conditionally render phone and email fields -->\n        </div>\n        \n        <!-- Cars Table -->\n        <div class=\"cars-section\">\n          <h3>Cars</h3>\n          <table class=\"cars-table\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Car</th>\n                <th>Color</th>\n                <th>VIN</th>\n                <th>Client</th>\n                <th>Loading Port</th>\n                <th>Discharge Port</th>\n                <th>Sell Price</th>\n                <th>Freight</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(car, index) in billCars\" :key=\"car.id\">\n                <td>{{ index + 1 }}</td>\n                <td>{{ car.car_name || 'N/A' }}</td>\n                <td>{{ car.color || 'N/A' }}</td>\n                <td>{{ car.vin || 'N/A' }}</td>\n                <td>{{ car.client_name || 'N/A' }}</td>\n                <td>{{ car.loading_port || 'N/A' }}</td>\n                <td>{{ car.discharge_port || 'N/A' }}</td>\n                <td>${{ car.price_cell || '0.00' }}</td>\n                <td>${{ car.freight || '0.00' }}</td>\n              </tr>\n            </tbody>\n            <tfoot>\n              <tr>\n                <td colspan=\"7\" class=\"total-label\">Totals:</td>\n                <td>${{ calculateTotals().totalSellPrice }}</td>\n                <td>${{ calculateTotals().totalFreight }}</td>\n              </tr>\n              <tr>\n                <td colspan=\"7\" class=\"grand-total-label\">Grand Total:</td>\n                <td colspan=\"2\" class=\"grand-total-value\">${{ calculateTotals().grandTotal }}</td>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n        \n        <!-- Notes -->\n        <div v-if=\"billData.notes\" class=\"notes-section\">\n          <h3>Notes</h3>\n          <p>{{ billData.notes }}</p>\n        </div>\n        \n        <!-- Footer -->\n        <div class=\"bill-footer\">\n          <div class=\"signatures\">\n            <div class=\"signature-box\">\n              <p>Authorized Signature</p>\n              <div class=\"signature-line\"></div>\n            </div>\n            <div class=\"signature-box\">\n              <p>Client Signature</p>\n              <div class=\"signature-line\"></div>\n            </div>\n          </div>\n          <p class=\"thank-you\">Thank you for your business!</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Add the document selection dialog -->\n  <div v-if=\"showDocumentDialog\" class=\"document-dialog\">\n    <div class=\"dialog-content\">\n      <h3>Select Document Type</h3>\n      \n      <div class=\"form-group\">\n        <label>Document Type:</label>\n        <select v-model=\"selectedDocType\">\n          <option v-for=\"type in documentTypes\" :key=\"type.value\" :value=\"type.value\">\n            {{ type.label }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"form-group\">\n        <label>Currency:</label>\n        <select v-model=\"selectedCurrency\">\n          <option v-for=\"currency in currencies\" :key=\"currency.value\" :value=\"currency.value\">\n            {{ currency.label }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"dialog-actions\">\n        <button @click=\"confirmPrint\">Print</button>\n        <button @click=\"showDocumentDialog = false\">Cancel</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Replace the existing print button with this -->\n  <button @click=\"handlePrintClick\" class=\"print-button\">\n    Print Document\n  </button>\n\n  <!-- Add styles for different document types -->\n  <div :class=\"['print-content', selectedDocType]\">\n    <!-- ... existing template content ... -->\n  </div>\n</template>\n\n<style scoped>\n/* Print-specific styles */\n@media print {\n  .no-print {\n    display: none !important;\n  }\n  \n  body {\n    margin: 0;\n    padding: 0;\n  }\n  \n  .print-overlay {\n    position: static;\n    background: none;\n    padding: 0;\n    overflow: visible;\n  }\n  \n  .print-container {\n    box-shadow: none;\n    margin: 0;\n    padding: 0;\n    max-height: none;\n    overflow: visible;\n  }\n  \n  .bill-document {\n    padding: 0;\n  }\n}\n\n/* Regular styles */\n.print-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  overflow: auto;\n  padding: 20px;\n}\n\n.print-container {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  width: 100%;\n  max-width: 1000px;\n  max-height: 90vh;\n  overflow: auto;\n  position: relative;\n}\n\n.print-controls {\n  position: sticky;\n  top: 0;\n  display: flex;\n  justify-content: flex-end;\n  padding: 10px;\n  background-color: #f3f4f6;\n  border-bottom: 1px solid #e5e7eb;\n  z-index: 10;\n}\n\n.print-btn, .close-btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  margin-left: 10px;\n}\n\n.print-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n\n.close-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.loading, .error {\n  padding: 40px;\n  text-align: center;\n  font-size: 1.1rem;\n}\n\n.error {\n  color: #ef4444;\n}\n\n.bill-document {\n  padding: 40px;\n}\n\n.bill-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30px;\n}\n\n.company-info {\n  display: flex;\n  align-items: center;\n}\n\n.company-logo {\n  max-width: 100px;\n  max-height: 100px;\n  margin-right: 20px;\n}\n\n.company-details h2 {\n  margin: 0 0 5px 0;\n  color: #1f2937;\n}\n\n.company-details p {\n  margin: 0 0 5px 0;\n  color: #4b5563;\n}\n\n.bill-info {\n  text-align: right;\n}\n\n.bill-info h1 {\n  color: #1f2937;\n  margin: 0 0 10px 0;\n}\n\n.broker-info {\n  margin-bottom: 30px;\n  padding: 15px;\n  background-color: #f9fafb;\n  border-radius: 6px;\n}\n\n.broker-info h3 {\n  margin-top: 0;\n  color: #1f2937;\n}\n\n.broker-info p {\n  margin: 5px 0;\n}\n\n.cars-section {\n  margin-bottom: 30px;\n}\n\n.cars-section h3 {\n  color: #1f2937;\n}\n\n.cars-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.cars-table th, .cars-table td {\n  padding: 10px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.cars-table th {\n  background-color: #f3f4f6;\n  font-weight: 600;\n}\n\n.cars-table tfoot td {\n  font-weight: 600;\n}\n\n.total-label, .grand-total-label {\n  text-align: right;\n}\n\n.grand-total-label, .grand-total-value {\n  font-size: 1.1rem;\n  background-color: #f3f4f6;\n}\n\n.notes-section {\n  margin-bottom: 30px;\n  padding: 15px;\n  background-color: #f9fafb;\n  border-radius: 6px;\n}\n\n.notes-section h3 {\n  margin-top: 0;\n  color: #1f2937;\n}\n\n.bill-footer {\n  margin-top: 50px;\n}\n\n.signatures {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30px;\n}\n\n.signature-box {\n  width: 45%;\n}\n\n.signature-line {\n  margin-top: 50px;\n  border-top: 1px solid #9ca3af;\n}\n\n.thank-you {\n  text-align: center;\n  font-size: 1.1rem;\n  color: #4b5563;\n  margin-top: 30px;\n}\n\n.document-dialog {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.dialog-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 300px;\n}\n\n.form-group {\n  margin: 15px 0;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-group select {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-actions {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.dialog-actions button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.dialog-actions button:first-child {\n  background: #4CAF50;\n  color: white;\n}\n\n.dialog-actions button:last-child {\n  background: #f44336;\n  color: white;\n}\n</style>\n","<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useApi } from '../composables/useApi'\nimport SellBillsTable from '../components/sells/SellBillsTable.vue'\nimport SellBillForm from '../components/sells/SellBillForm.vue'\nimport SellBillCarsTable from '../components/sells/SellBillCarsTable.vue'\nimport UnassignedCarsTable from '../components/sells/UnassignedCarsTable.vue'\nimport SellBillPrint from '../components/sells/SellBillPrint.vue'\n\nconst { callApi } = useApi()\nconst showAddDialog = ref(false)\nconst showEditDialog = ref(false)\nconst selectedBillId = ref(null)\nconst editingBill = ref(null)\nconst sellBillsTableRef = ref(null)\nconst unassignedCarsTableRef = ref(null)\nconst sellBillCarsTableRef = ref(null)\n\n// Add user and isAdmin\nconst user = ref(null)\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n  }\n  // Remove the duplicate declarations of userStr\n})\n\nconst handleSelectBill = (billId) => {\n  selectedBillId.value = billId\n  \n  // Update the unassigned cars table with the selected bill ID\n  if (unassignedCarsTableRef.value) {\n    unassignedCarsTableRef.value.setSellBillId(billId)\n  }\n}\n\nconst openAddDialog = () => {\n  editingBill.value = {\n    id_broker: null,\n    date_sell: new Date().toISOString().split('T')[0],\n    notes: ''\n  }\n  showAddDialog.value = true\n}\n\nconst handleEditBill = (bill) => {\n  editingBill.value = { ...bill }\n  showEditDialog.value = true\n}\n\nconst handleDeleteBill = async (id) => {\n  if (!isAdmin.value) {\n    alert('Only admins can delete sell bills.')\n    return\n  }\n  if (!confirm('Are you sure you want to delete this sell bill?')) {\n    return\n  }\n  \n  try {\n    const result = await callApi({\n      query: 'DELETE FROM sell_bill WHERE id = ?',\n      params: [id]\n    })\n    \n    if (result.success) {\n      // Refresh the table\n      if (sellBillsTableRef.value) {\n        sellBillsTableRef.value.fetchSellBills()\n      }\n    } else {\n      console.error('Failed to delete sell bill:', result.error)\n      alert('Failed to delete sell bill: ' + result.error)\n    }\n  } catch (err) {\n    console.error('Error deleting sell bill:', err)\n    alert('Error deleting sell bill: ' + err.message)\n  }\n}\n\nconst handleSave = () => {\n  showAddDialog.value = false\n  showEditDialog.value = false\n  \n  // Refresh the table\n  if (sellBillsTableRef.value) {\n    sellBillsTableRef.value.fetchSellBills()\n  }\n}\n\nconst handleCarsTableRefresh = async () => {\n  // Refresh the main sell bills table\n  if (sellBillsTableRef.value) {\n    await sellBillsTableRef.value.fetchSellBills()\n  }\n  \n  // Refresh the unassigned cars table\n  if (unassignedCarsTableRef.value) {\n    await unassignedCarsTableRef.value.fetchUnassignedCars()\n  }\n  \n  // If a bill is selected, refresh the cars for that bill\n  if (selectedBillId.value && sellBillCarsTableRef.value) {\n    await sellBillCarsTableRef.value.fetchCarsByBillId(selectedBillId.value)\n  }\n}\n\nconst showPrintDialog = ref(false)\n\nconst handlePrintBill = () => {\n  if (!selectedBillId.value) {\n    alert('Please select a sell bill to print')\n    return\n  }\n  \n  showPrintDialog.value = true\n}\n</script>\n\n<template>\n  <div class=\"sell-bills-view\">\n    <div class=\"header\">\n      <h2>Sell Bills Management</h2>\n      <div class=\"header-actions\">\n        <button @click=\"handlePrintBill\" class=\"print-btn\" :disabled=\"!selectedBillId\">Print Bill</button>\n        <button @click=\"openAddDialog\" class=\"add-btn\">Add Sell Bill</button>\n      </div>\n    </div>\n    \n    <div class=\"content\">\n      <SellBillsTable \n        ref=\"sellBillsTableRef\"\n        :onEdit=\"handleEditBill\"\n        :onDelete=\"handleDeleteBill\"\n        :onSelect=\"handleSelectBill\"\n        @select-bill=\"handleSelectBill\"\n        :isAdmin=\"isAdmin\" \n      />\n      \n      <!-- Update to add ref for SellBillCarsTable -->\n      <SellBillCarsTable \n        ref=\"sellBillCarsTableRef\"\n        :sellBillId=\"selectedBillId\" \n        @refresh=\"handleCarsTableRefresh\"\n      />\n      \n      <!-- Unassigned cars that can be added to the bill -->\n      <UnassignedCarsTable \n        ref=\"unassignedCarsTableRef\"\n        @refresh=\"handleCarsTableRefresh\"\n      />\n    </div>\n    \n    <!-- Add Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <SellBillForm\n          mode=\"add\"\n          :billData=\"editingBill\"\n          @save=\"handleSave\"\n          @cancel=\"showAddDialog = false\"\n        />\n      </div>\n    </div>\n    \n    <!-- Edit Dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <SellBillForm\n          mode=\"edit\"\n          :billData=\"editingBill\"\n          @save=\"handleSave\"\n          @cancel=\"showEditDialog = false\"\n        />\n      </div>\n    </div>\n    \n    <!-- Print Dialog -->\n    <SellBillPrint\n      :billId=\"selectedBillId\"\n      :visible=\"showPrintDialog\"\n      @close=\"showPrintDialog = false\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.sell-bills-view {\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-btn {\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n}\n\n.header-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.print-btn {\n  background-color: #6366f1;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n}\n\n.print-btn:disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n}\n\n.content {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.dialog {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  width: 90%;\n  max-width: 600px;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n</style>"],"names":["props","__props","emit","__emit","callApi","useApi","sellBills","ref","loading","error","selectedBillId","fetchSellBills","result","err","handleEdit","bill","handleDelete","id","selectBill","__expose","onMounted","user","brokers","formData","watch","newData","date","fetchBrokers","saveBill","userStr","cars","unassignCar","carId","fetchCarsByBillId","billId","newId","calculateProfit","sellPrice","buyPrice","freight","sell","buy","freightCost","clients","dischargePorts","carDetails","fetchClients","fetchDischargePorts","fetchCarDetails","assignCar","validateForm","resetForm","_a","unassignedCars","allUnassignedCars","selectedSellBillId","showAssignmentForm","selectedCarId","filters","fetchUnassignedCars","applyFilters","car","matchCarName","matchColor","matchVin","matchLoadingPort","resetFilters","handleFilterChange","openAssignmentForm","handleAssignSuccess","logo","billData","billCars","companyInfo","fetchBillData","billResult","carsResult","calculateTotals","totalSellPrice","totalFreight","formatDate","dateString","printBill","closePrintView","newBillId","newVisible","showDocumentDialog","selectedDocType","selectedCurrency","documentTypes","currencies","handlePrintClick","confirmPrint","showAddDialog","showEditDialog","editingBill","sellBillsTableRef","unassignedCarsTableRef","sellBillCarsTableRef","isAdmin","computed","handleSelectBill","openAddDialog","handleEditBill","handleDeleteBill","handleSave","handleCarsTableRefresh","showPrintDialog","handlePrintBill"],"mappings":"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"}