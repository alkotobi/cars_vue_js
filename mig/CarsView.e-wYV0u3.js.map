{"version":3,"file":"CarsView.e-wYV0u3.js","sources":["../src/views/ClientsView.vue","../src/views/BrokersView.vue","../src/views/SuppliersView.vue","../src/views/CarModelsView.vue","../src/views/ColorsView.vue","../src/views/DischargePortsView.vue","../src/views/LoadingPortsView.vue","../src/components/buy/BuyBillsTable.vue","../src/components/buy/BuyDetailsTable.vue","../src/views/BuyView.vue","../src/views/SellView.vue","../src/views/CarsView.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst clients = ref([])\nconst { callApi, uploadFile, getFileUrl, error } = useApi()\nconst showAddDialog = ref(false)\nconst showEditDialog = ref(false)\nconst editingClient = ref(null)\nconst user = ref(null)\nconst validationError = ref('')\nconst selectedFile = ref(null)\nconst editSelectedFile = ref(null)\n\n// Check if user is admin by getting role from localStorage\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\n// Add helper function to check if file is an image\nconst isImageFile = (path) => {\n  if (!path) return false\n  const extension = path.split('.').pop().toLowerCase()\n  return ['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(extension)\n}\n\nconst validateEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\nconst newClient = ref({\n  name: '',\n  address: '',\n  email: '',\n  mobiles: '',\n  id_no: ''\n})\n\nconst fetchClients = async () => {\n  const result = await callApi({\n    query: `\n      SELECT * FROM clients where is_broker = 0\n      ORDER BY name ASC\n    `,\n    params: []\n  })\n  if (result.success) {\n    clients.value = result.data\n  }\n}\n\nconst handleFileChange = (event, isEdit = false) => {\n  const file = event.target.files[0]\n  if (isEdit) {\n    editSelectedFile.value = file\n  } else {\n    selectedFile.value = file\n  }\n}\n\nconst addClient = async () => {\n  if (!validateEmail(newClient.value.email)) {\n    validationError.value = 'Please enter a valid email address'\n    return\n  }\n\n  try {\n    // First insert the client to get the ID\n  const result = await callApi({\n    query: `\n      INSERT INTO clients (name, address, email, mobiles, id_no, is_broker)\n      VALUES (?, ?, ?, ?, ?, 0)\n    `,\n    params: [\n      newClient.value.name,\n      newClient.value.address,\n      newClient.value.email,\n      newClient.value.mobiles,\n      newClient.value.id_no,\n    ]\n  })\n\n  if (result.success) {\n      const clientId = result.insertId\n\n      // If there's a file selected, upload it using the new uploadFile method\n      if (selectedFile.value) {\n        try {\n          const filename = `${clientId}.${selectedFile.value.name.split('.').pop()}`\n          const uploadResult = await uploadFile(\n            selectedFile.value,\n            'ids',\n            filename\n          )\n          \n          if (uploadResult.success) {\n            // Use the relative path returned from uploadFile\n            await callApi({\n              query: 'UPDATE clients SET id_copy_path = ? WHERE id = ?',\n              params: [uploadResult.relativePath, clientId]\n            })\n          }\n        } catch (err) {\n          console.error('Error uploading file:', err)\n          error.value = 'Client created but failed to upload ID document'\n        }\n      }\n\n    showAddDialog.value = false\n    validationError.value = ''\n      selectedFile.value = null\n    newClient.value = {\n      name: '',\n      address: '',\n      email: '',\n      mobiles: '',\n      id_no: ''\n    }\n    await fetchClients()\n    } else {\n    error.value = result.error\n    console.error('Error adding client:', result.error)\n    }\n  } catch (err) {\n    error.value = err.message\n    console.error('Error in add client process:', err)\n  }\n}\n\nconst editClient = (client) => {\n  editingClient.value = { ...client }\n  editSelectedFile.value = null\n  showEditDialog.value = true\n}\n\nconst updateClient = async () => {\n  if (!validateEmail(editingClient.value.email)) {\n    validationError.value = 'Please enter a valid email address'\n    return\n  }\n\n  try {\n    // Update client basic info\n  const result = await callApi({\n    query: `\n      UPDATE clients \n      SET name = ?, address = ?, email = ?, mobiles = ?, id_no = ?, is_broker = 0\n      WHERE id = ?\n    `,\n    params: [\n      editingClient.value.name,\n      editingClient.value.address,\n      editingClient.value.email,\n      editingClient.value.mobiles,\n      editingClient.value.id_no,\n      editingClient.value.id\n    ]\n  })\n\n  if (result.success) {\n      // If there's a new file selected, upload it using the new uploadFile method\n      if (editSelectedFile.value) {\n        try {\n          const filename = `${editingClient.value.id}.${editSelectedFile.value.name.split('.').pop()}`\n          const uploadResult = await uploadFile(\n            editSelectedFile.value,\n            'ids',\n            filename\n          )\n          \n          if (uploadResult.success) {\n            // Use the relative path returned from uploadFile\n            await callApi({\n              query: 'UPDATE clients SET id_copy_path = ? WHERE id = ?',\n              params: [uploadResult.relativePath, editingClient.value.id]\n            })\n          }\n        } catch (err) {\n          console.error('Error uploading file:', err)\n          error.value = 'Client updated but failed to upload new ID document'\n        }\n      }\n\n    showEditDialog.value = false\n    editingClient.value = null\n      editSelectedFile.value = null\n    validationError.value = ''\n    await fetchClients()\n    } else {\n    error.value = result.error\n    console.error('Error updating client:', result.error)\n    }\n  } catch (err) {\n    error.value = err.message\n    console.error('Error in update client process:', err)\n  }\n}\n\nconst deleteClient = async (client) => {\n  if (confirm('Are you sure you want to delete this client?')) {\n    const result = await callApi({\n      query: 'DELETE FROM clients WHERE id = ?',\n      params: [client.id]\n    })\n    if (result.success) {\n      await fetchClients()\n    }\n  }\n}\n\nconst handleImageClick = (path) => {\n  if (path) {\n    window.open(getFileUrl(path), '_blank')\n  }\n}\n\nonMounted(() => {\n    const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchClients()\n}\n})\n</script>\n\n<template>\n  <div class=\"clients-view\">\n    <div class=\"header\">\n      <h2>Clients Management</h2>\n      <button @click=\"showAddDialog = true\" class=\"add-btn\">Add Client</button>\n    </div>\n    <div class=\"content\">\n      <table class=\"clients-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Address</th>\n            <th>Email</th>\n            <th>Mobile</th>\n            <th>ID No</th>\n            <th>ID Document</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"client in clients\" :key=\"client.id\">\n            <td>{{ client.name }}</td>\n            <td>{{ client.address }}</td>\n            <td>{{ client.email }}</td>\n            <td>{{ client.mobiles }}</td>\n            <td>{{ client.id_no }}</td>\n            <td class=\"id-document-cell\">\n              <div v-if=\"client.id_copy_path && isImageFile(client.id_copy_path)\" \n                   class=\"image-preview\"\n                   @click=\"handleImageClick(client.id_copy_path)\">\n                <img \n                  :src=\"getFileUrl(client.id_copy_path)\" \n                  :alt=\"'ID for ' + client.name\"\n                />\n              </div>\n              <a v-else-if=\"client.id_copy_path\" \n                 :href=\"getFileUrl(client.id_copy_path)\" \n                 target=\"_blank\" \n                 class=\"document-link\">\n                View Document\n              </a>\n              <span v-else>No ID</span>\n            </td>\n            <td>\n              <button @click=\"editClient(client)\" class=\"btn edit-btn\">Edit</button>\n              <button \n                v-if=\"isAdmin\"\n                @click=\"deleteClient(client)\" \n                class=\"btn delete-btn\"\n              >Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Add Client Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Client</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newClient.name\" \n            placeholder=\"Name\" \n            class=\"input-field\"\n          />\n          <input \n            v-model=\"newClient.address\" \n            placeholder=\"Address\" \n            class=\"input-field\"\n          />\n          <input \n            v-model=\"newClient.email\" \n            placeholder=\"Email\" \n            class=\"input-field\"\n            :class=\"{ 'error': validationError && newClient.email }\"\n          />\n          <input \n            v-model=\"newClient.mobiles\" \n            placeholder=\"Mobile\" \n            class=\"input-field\"\n          />\n          <input \n            v-model=\"newClient.id_no\" \n            placeholder=\"ID No\" \n            class=\"input-field\"\n          />\n          <div class=\"file-upload\">\n            <label for=\"id-document\">ID Document:</label>\n            <input \n              type=\"file\" \n              id=\"id-document\" \n              @change=\"handleFileChange($event)\"\n              accept=\"image/*,.pdf\"\n              class=\"file-input\"\n          />\n          </div>\n          <div v-if=\"validationError\" class=\"error-message\">{{ validationError }}</div>\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"addClient\" class=\"btn save-btn\" :disabled=\"!isAdmin\">Add</button>\n          <button @click=\"showAddDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Client Dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Client</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingClient.name\" \n            placeholder=\"Name\" \n            class=\"input-field\"\n            :readonly=\"!isAdmin\" \n          />\n          <input \n            v-model=\"editingClient.address\" \n            placeholder=\"Address\" \n            class=\"input-field\"\n          />\n          <input \n            v-model=\"editingClient.email\" \n            placeholder=\"Email\" \n            class=\"input-field\"\n            :class=\"{ 'error': validationError && editingClient.email }\"\n          />\n          <input \n            v-model=\"editingClient.mobiles\" \n            placeholder=\"Mobile\" \n            class=\"input-field\"\n          />\n          <input \n            v-model=\"editingClient.id_no\" \n            placeholder=\"ID No\" \n            class=\"input-field\"\n          />\n          <div class=\"file-upload\">\n            <label for=\"edit-id-document\">ID Document:</label>\n            <div v-if=\"editingClient.id_copy_path\" class=\"current-file\">\n              Current: <a :href=\"editingClient.id_copy_path\" target=\"_blank\">View ID</a>\n            </div>\n            <input \n              type=\"file\" \n              id=\"edit-id-document\" \n              @change=\"handleFileChange($event, true)\"\n              accept=\"image/*,.pdf\"\n              class=\"file-input\"\n          />\n          </div>\n          <div v-if=\"validationError\" class=\"error-message\">{{ validationError }}</div>\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"updateClient\" class=\"btn save-btn\" :disabled=\"!isAdmin\">Save</button>\n          <button @click=\"showEditDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.clients-view {\n  padding: 20px;\n  width: 1000px;\n}\n\n.content {\n  margin-top: 20px;\n}\n\n.clients-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.clients-table th,\n.clients-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.clients-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.clients-table tbody tr:hover {\n  background-color: #f5f5f5;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n}\n\n.save-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 400px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 20px;\n}\n\n.input-field {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n\n.error {\n  border-color: #ef4444;\n}\n\n.error-message {\n  color: #ef4444;\n  font-size: 0.875rem;\n  margin-top: 4px;\n}\n\n.file-upload {\n  margin-top: 8px;\n}\n\n.file-upload label {\n  display: block;\n  margin-bottom: 4px;\n  font-weight: 500;\n}\n\n.file-input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n}\n\n.current-file {\n  margin-bottom: 8px;\n  color: #4b5563;\n}\n\n.current-file a {\n  color: #3b82f6;\n  text-decoration: none;\n}\n\n.current-file a:hover {\n  text-decoration: underline;\n}\n\n.input-field[readonly] {\n  background-color: #f3f4f6;\n  cursor: not-allowed;\n}\n\n.id-document-cell {\n  width: 120px;\n  text-align: center;\n}\n\n.image-preview {\n  width: 100px;\n  height: 60px;\n  margin: 0 auto;\n  cursor: pointer;\n  overflow: hidden;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n.image-preview img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.2s ease;\n}\n\n.image-preview:hover img {\n  transform: scale(1.1);\n}\n\n.document-link {\n  color: #3b82f6;\n  text-decoration: none;\n  font-size: 0.9em;\n  display: inline-block;\n  padding: 4px 8px;\n}\n\n.document-link:hover {\n  text-decoration: underline;\n}\n</style>","<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst clients = ref([])\nconst { callApi, error } = useApi()\nconst showAddDialog = ref(false)\nconst showEditDialog = ref(false)\nconst editingClient = ref(null)\nconst user = ref(null)\nconst validationError = ref('')\n\n// Check if user is admin by getting role from localStorage\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\nconst validateEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\nconst newClient = ref({\n  name: '',\n  address: '',\n  email: '',\n  mobiles: '',\n  id_no: ''\n})\n\nconst fetchClients = async () => {\n  const result = await callApi({\n    query: `\n      SELECT * FROM clients where is_broker = 1\n      ORDER BY name ASC\n    `,\n    params: []\n  })\n  if (result.success) {\n    clients.value = result.data\n  }\n}\n\nconst addClient = async () => {\n  if (!validateEmail(newClient.value.email)) {\n    validationError.value = 'Please enter a valid email address'\n    return\n  }\n\n  const result = await callApi({\n    query: `\n      INSERT INTO clients (name, address, email, mobiles, id_no, is_broker)\n      VALUES (?, ?, ?, ?, ?, 1)\n    `,\n    params: [\n      newClient.value.name,\n      newClient.value.address,\n      newClient.value.email,\n      newClient.value.mobiles,\n      newClient.value.id_no,\n    ]\n  })\n  if (result.success) {\n    showAddDialog.value = false\n    validationError.value = ''\n    newClient.value = {\n      name: '',\n      address: '',\n      email: '',\n      mobiles: '',\n      id_no: ''\n    }\n    await fetchClients()\n  }\n  else {\n    error.value = result.error\n    console.error('Error adding client:', result.error)\n  }\n}\n\nconst editClient = (client) => {\n  editingClient.value = { ...client }\n  showEditDialog.value = true\n}\n\nconst updateClient = async () => {\n  if (!validateEmail(editingClient.value.email)) {\n    validationError.value = 'Please enter a valid email address'\n    return\n  }\n\n  const result = await callApi({\n    query: `\n      UPDATE clients \n      SET name = ?, address = ?, email = ?, mobiles = ?, id_no = ?, is_broker = 1\n      WHERE id = ?\n    `,\n    params: [\n      editingClient.value.name,\n      editingClient.value.address,\n      editingClient.value.email,\n      editingClient.value.mobiles,\n      editingClient.value.id_no,\n      editingClient.value.id\n    ]\n  })\n  if (result.success) {\n    showEditDialog.value = false\n    editingClient.value = null\n    validationError.value = ''\n    await fetchClients()\n  }\n  else {\n    error.value = result.error\n    console.error('Error updating client:', result.error)\n  }\n}\n\nconst deleteClient = async (client) => {\n  if (confirm('Are you sure you want to delete this client?')) {\n    const result = await callApi({\n      query: 'DELETE FROM clients WHERE id = ?',\n      params: [client.id]\n    })\n    if (result.success) {\n      await fetchClients()\n    }\n  }\n}\n\nonMounted(() => {\n    const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchClients()\n}\n}\n)\n</script>\n\n<template>\n  <div class=\"clients-view\">\n    <div class=\"header\">\n      <h2>Brokers Management</h2>\n      <button @click=\"showAddDialog = true\" class=\"add-btn\">Add Client</button>\n    </div>\n    <div class=\"content\">\n      <table class=\"clients-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Address</th>\n            <th>Email</th>\n            <th>Mobile</th>\n            <th>ID No</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"client in clients\" :key=\"client.id\">\n            <td>{{ client.name }}</td>\n            <td>{{ client.address }}</td>\n            <td>{{ client.email }}</td>\n            <td>{{ client.mobiles }}</td>\n            <td>{{ client.id_no }}</td>\n            <td>\n              <button @click=\"editClient(client)\" class=\"btn edit-btn\">Edit</button>\n              <button \n                v-if=\"isAdmin\"\n                @click=\"deleteClient(client)\" \n                class=\"btn delete-btn\"\n              >Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Add Client Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Client</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newClient.name\" \n            placeholder=\"Name\" \n            class=\"input-field\"\n         \n          />\n          <input \n            v-model=\"newClient.address\" \n            placeholder=\"Address\" \n            class=\"input-field\"\n            \n          />\n          <input \n            v-model=\"newClient.email\" \n            placeholder=\"Email\" \n            class=\"input-field\"\n            :class=\"{ 'error': validationError && newClient.email }\"\n           \n          />\n          <input \n            v-model=\"newClient.mobiles\" \n            placeholder=\"Mobile\" \n            class=\"input-field\"\n            \n          />\n          <input \n            v-model=\"newClient.id_no\" \n            placeholder=\"ID No\" \n            class=\"input-field\"\n            \n          />\n          <div v-if=\"validationError\" class=\"error-message\">{{ validationError }}</div>\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"addClient\" class=\"btn save-btn\" :disabled=\"!isAdmin\">Add</button>\n          <button @click=\"showAddDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Client Dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Client</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingClient.name\" \n            placeholder=\"Name\" \n            class=\"input-field\"\n            :readonly=\"!isAdmin\" \n          />\n          <input \n            v-model=\"editingClient.address\" \n            placeholder=\"Address\" \n            class=\"input-field\"\n           \n          />\n          <input \n            v-model=\"editingClient.email\" \n            placeholder=\"Email\" \n            class=\"input-field\"\n            :class=\"{ 'error': validationError && editingClient.email }\"\n           \n          />\n          <input \n            v-model=\"editingClient.mobiles\" \n            placeholder=\"Mobile\" \n            class=\"input-field\"\n          \n          />\n          <input \n            v-model=\"editingClient.id_no\" \n            placeholder=\"ID No\" \n            class=\"input-field\"\n           \n          />\n          <div v-if=\"validationError\" class=\"error-message\">{{ validationError }}</div>\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"updateClient\" class=\"btn save-btn\" :disabled=\"!isAdmin\">Save</button>\n          <button @click=\"showEditDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.clients-view {\n  padding: 20px;\n  width: 1000px;\n}\n\n.content {\n  margin-top: 20px;\n}\n\n.clients-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.clients-table th,\n.clients-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.clients-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.clients-table tbody tr:hover {\n  background-color: #f5f5f5;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n}\n\n.save-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.edit-input {\n  width: 100%;\n  padding: 4px 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 400px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 20px;\n}\n\n.input-field {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n\n.error {\n  border-color: #ef4444;\n}\n\n.error-message {\n  color: #ef4444;\n  font-size: 0.875rem;\n  margin-top: 4px;\n}\n\n.checkbox-field {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.checkbox-field input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n}\n\n.edit-input.checkbox {\n  width: auto;\n}\n\n.input-field[readonly] {\n  background-color: #f3f4f6;\n  cursor: not-allowed;\n}\n</style>","<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst suppliers = ref([])\nconst { callApi, error } = useApi()\nconst showAddDialog = ref(false)\nconst showEditDialog = ref(false)\nconst editingSupplier = ref(null)\nconst user = ref(null)\n\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\nconst newSupplier = ref({\n  name: '',\n  contact_info: '',\n  notes: ''\n})\n\nconst fetchSuppliers = async () => {\n  const result = await callApi({\n    query: `\n      SELECT * FROM suppliers\n      ORDER BY name ASC\n    `,\n    params: []\n  })\n  if (result.success) {\n    suppliers.value = result.data\n  }\n}\n\nconst addSupplier = async () => {\n  const result = await callApi({\n    query: `\n      INSERT INTO suppliers (name, contact_info, notes)\n      VALUES (?, ?, ?)\n    `,\n    params: [\n      newSupplier.value.name,\n      newSupplier.value.contact_info,\n      newSupplier.value.notes\n    ]\n  })\n  if (result.success) {\n    showAddDialog.value = false\n    newSupplier.value = {\n      name: '',\n      contact_info: '',\n      notes: ''\n    }\n    await fetchSuppliers()\n  }\n  else {\n    error.value = result.error\n    console.error('Error adding supplier:', result.error)\n  }\n}\n\nconst editSupplier = (supplier) => {\n  editingSupplier.value = { ...supplier }\n  showEditDialog.value = true\n}\n\nconst updateSupplier = async () => {\n  const result = await callApi({\n    query: `\n      UPDATE suppliers \n      SET name = ?, contact_info = ?, notes = ?\n      WHERE id = ?\n    `,\n    params: [\n      editingSupplier.value.name,\n      editingSupplier.value.contact_info,\n      editingSupplier.value.notes,\n      editingSupplier.value.id\n    ]\n  })\n  if (result.success) {\n    showEditDialog.value = false\n    editingSupplier.value = null\n    await fetchSuppliers()\n  }\n  else {\n    error.value = result.error\n    console.error('Error updating supplier:', result.error)\n  }\n}\n\nconst deleteSupplier = async (supplier) => {\n  if (confirm('Are you sure you want to delete this supplier?')) {\n    const result = await callApi({\n      query: 'DELETE FROM suppliers WHERE id = ?',\n      params: [supplier.id]\n    })\n    if (result.success) {\n      await fetchSuppliers()\n    }\n  }\n}\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchSuppliers()\n  }\n\n})\n</script>\n\n<template>\n  <div class=\"suppliers-view\">\n    <div class=\"header\">\n      <h2>Suppliers Management</h2>\n      <button @click=\"showAddDialog = true\" class=\"add-btn\">Add Supplier</button>\n    </div>\n    <div class=\"content\">\n      <table class=\"suppliers-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Contact Info</th>\n            <th>Notes</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"supplier in suppliers\" :key=\"supplier.id\">\n            <td>{{ supplier.name }}</td>\n            <td>{{ supplier.contact_info }}</td>\n            <td>{{ supplier.notes }}</td>\n            <td>\n              <button @click=\"editSupplier(supplier)\" class=\"btn edit-btn\">Edit</button>\n              <button \n                v-if=\"isAdmin\"\n                @click=\"deleteSupplier(supplier)\" \n                class=\"btn delete-btn\"\n              >Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Add Supplier Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Supplier</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newSupplier.name\" \n            placeholder=\"Name\" \n            class=\"input-field\"\n          />\n          <textarea \n            v-model=\"newSupplier.contact_info\" \n            placeholder=\"Contact Information\" \n            class=\"input-field textarea\"\n          ></textarea>\n          <textarea \n            v-model=\"newSupplier.notes\" \n            placeholder=\"Notes\" \n            class=\"input-field textarea\"\n          ></textarea>\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"addSupplier\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showAddDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Supplier Dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Supplier</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingSupplier.name\" \n            placeholder=\"Name\" \n            class=\"input-field\"\n          />\n          <textarea \n            v-model=\"editingSupplier.contact_info\" \n            placeholder=\"Contact Information\" \n            class=\"input-field textarea\"\n          ></textarea>\n          <textarea \n            v-model=\"editingSupplier.notes\" \n            placeholder=\"Notes\" \n            class=\"input-field textarea\"\n          ></textarea>\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"updateSupplier\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showEditDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.suppliers-view {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.suppliers-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.suppliers-table th,\n.suppliers-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.suppliers-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.suppliers-table tbody tr:hover {\n  background-color: #f5f5f5;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n}\n\n.save-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 400px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 20px;\n}\n\n.input-field {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n\n.error {\n  border-color: #ef4444;\n}\n\n.error-message {\n  color: #ef4444;\n  font-size: 0.875rem;\n  margin-top: 4px;\n}\n\n.textarea {\n  min-height: 100px;\n  resize: vertical;\n}\n</style>","<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst { callApi, error } = useApi()\nconst showAddBrandDialog = ref(false)\nconst showEditBrandDialog = ref(false)\nconst showAddCarNameDialog = ref(false)\nconst showEditCarNameDialog = ref(false)\nconst brands = ref([])\nconst carNames = ref([])\nconst editingBrand = ref(null)\nconst editingCarName = ref(null)\nconst user = ref(null)\n\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\nconst newBrand = ref({\n  brand: ''\n})\n\nconst newCarName = ref({\n  car_name: '',\n  notes: '',\n  is_big_car: false,\n  id_brand: null\n})\n\nconst fetchBrands = async () => {\n  const result = await callApi({\n    query: 'SELECT * FROM brands ORDER BY brand ASC',\n    params: []\n  })\n  if (result.success) {\n    brands.value = result.data\n  }\n}\n\nconst fetchCarNames = async () => {\n  const result = await callApi({\n    query: `\n      SELECT cn.*, b.brand \n      FROM cars_names cn\n      LEFT JOIN brands b ON cn.id_brand = b.id \n      ORDER BY cn.car_name ASC\n    `,\n    params: []\n  })\n  if (result.success) {\n    carNames.value = result.data\n  }\n}\n\nconst addBrand = async () => {\n  const result = await callApi({\n    query: 'INSERT INTO brands (brand) VALUES (?)',\n    params: [newBrand.value.brand]\n  })\n  if (result.success) {\n    showAddBrandDialog.value = false\n    newBrand.value = { brand: '' }\n    await fetchBrands()\n  }else{\n    console.log(result.error)\n  }\n}\n\nconst addCarName = async () => {\n  const result = await callApi({\n    query: 'INSERT INTO cars_names (car_name, notes, is_big_car, id_brand) VALUES (?, ?, ?, ?)',\n    params: [\n      newCarName.value.car_name,\n      newCarName.value.notes,\n      newCarName.value.is_big_car ? 1 : 0,\n      newCarName.value.id_brand\n    ]\n  })\n  if (result.success) {\n    showAddCarNameDialog.value = false\n    newCarName.value = { car_name: '', notes: '', is_big_car: false, id_brand: null }\n    await fetchCarNames()\n  }\n  else{\n    console.log(result.error)\n  }\n}\n\nconst editBrand = (brand) => {\n  editingBrand.value = { ...brand }\n  showEditBrandDialog.value = true\n}\n\nconst editCarName = (carName) => {\n  editingCarName.value = { ...carName }\n  showEditCarNameDialog.value = true\n}\n\nconst updateBrand = async () => {\n  const result = await callApi({\n    query: 'UPDATE brands SET brand = ? WHERE id = ?',\n    params: [editingBrand.value.brand, editingBrand.value.id]\n  })\n  if (result.success) {\n    showEditBrandDialog.value = false\n    editingBrand.value = null\n    await fetchBrands()\n  }\n  else{\n    console.log(result.error)\n  }\n}\n\nconst updateCarName = async () => {\n  const result = await callApi({\n    query: 'UPDATE cars_names SET car_name = ?, notes = ?, is_big_car = ?, id_brand = ? WHERE id = ?',\n    params: [\n      editingCarName.value.car_name,\n      editingCarName.value.notes,\n      editingCarName.value.is_big_car ? 1 : 0,\n      editingCarName.value.id_brand,\n      editingCarName.value.id\n    ]\n  })\n  if (result.success) {\n    showEditCarNameDialog.value = false\n    editingCarName.value = null\n    await fetchCarNames()\n  }\n  else{\n    console.log(result.error)\n  }\n}\n\nconst deleteBrand = async (brand) => {\n  if (confirm('Are you sure you want to delete this brand?')) {\n    const result = await callApi({\n      query: 'DELETE FROM brands WHERE id = ?',\n      params: [brand.id]\n    })\n    if (result.success) {\n      await fetchBrands()\n    }\n  }\n}\n\nconst deleteCarName = async (carName) => {\n  if (confirm('Are you sure you want to delete this car name?')) {\n    const result = await callApi({\n      query: 'DELETE FROM cars_names WHERE id = ?',\n      params: [carName.id]\n    })\n    if (result.success) {\n      await fetchCarNames()\n    }\n  }\n}\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchBrands()\n    fetchCarNames()\n  }\n})\n</script>\n\n<template>\n  <div class=\"models-view\">\n    <div class=\"section\">\n      <div class=\"header\">\n        <h2>Brands Management</h2>\n        <button @click=\"showAddBrandDialog = true\" class=\"add-btn\">Add Brand</button>\n      </div>\n      <table class=\"data-table\">\n        <thead>\n          <tr>\n            <th>Brand</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"brand in brands\" :key=\"brand.id\">\n            <td>{{ brand.brand }}</td>\n            <td>\n              <button @click=\"editBrand(brand)\" class=\"btn edit-btn\">Edit</button>\n              <button \n                v-if=\"isAdmin\"\n                @click=\"deleteBrand(brand)\" \n                class=\"btn delete-btn\"\n              >Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"section\">\n      <div class=\"header\">\n        <h2>Car Names Management</h2>\n        <button @click=\"showAddCarNameDialog = true\" class=\"add-btn\">Add Car Name</button>\n      </div>\n      <table class=\"data-table\">\n        <thead>\n          <tr>\n            <th>Car Name</th>\n            <th>Brand</th>\n            <th>Notes</th>\n            <th>Big Car</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"carName in carNames\" :key=\"carName.id\">\n            <td>{{ carName.car_name }}</td>\n            <td>{{ carName.brand }}</td>\n            <td>{{ carName.notes }}</td>\n            <td>{{ carName.is_big_car ? 'Yes' : 'No' }}</td>\n            <td>\n              <button @click=\"editCarName(carName)\" class=\"btn edit-btn\">Edit</button>\n              <button \n                v-if=\"isAdmin\"\n                @click=\"deleteCarName(carName)\" \n                class=\"btn delete-btn\"\n              >Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Add Brand Dialog -->\n    <div v-if=\"showAddBrandDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Brand</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newBrand.brand\" \n            placeholder=\"Brand Name\" \n            class=\"input-field\"\n          />\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"addBrand\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showAddBrandDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Brand Dialog -->\n    <div v-if=\"showEditBrandDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Brand</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingBrand.brand\" \n            placeholder=\"Brand Name\" \n            class=\"input-field\"\n          />\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"updateBrand\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showEditBrandDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Add Car Name Dialog -->\n    <div v-if=\"showAddCarNameDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Car Name</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newCarName.car_name\" \n            placeholder=\"Car Name\"\n          >\n        </div>\n        <div class=\"form-group\">\n          <select v-model=\"newCarName.id_brand\">\n            <option value=\"\">Select Brand</option>\n            <option v-for=\"brand in brands\" :key=\"brand.id\" :value=\"brand.id\">\n              {{ brand.brand }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newCarName.notes\" \n            placeholder=\"Notes\"\n          >\n        </div>\n        <div class=\"form-group\">\n          <label>\n            <input \n              type=\"checkbox\" \n              v-model=\"newCarName.is_big_car\"\n            > Big Car\n          </label>\n        </div>\n        <div class=\"dialog-buttons\">\n          <button @click=\"addCarName\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showAddCarNameDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Car Name Dialog -->\n    <div v-if=\"showEditCarNameDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Car Name</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingCarName.car_name\" \n            placeholder=\"Car Name\"\n          >\n        </div>\n        <div class=\"form-group\">\n          <select v-model=\"editingCarName.id_brand\">\n            <option value=\"\">Select Brand</option>\n            <option v-for=\"brand in brands\" :key=\"brand.id\" :value=\"brand.id\">\n              {{ brand.brand }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingCarName.notes\" \n            placeholder=\"Notes\"\n          >\n        </div>\n        <div class=\"form-group\">\n          <label>\n            <input \n              type=\"checkbox\" \n              v-model=\"editingCarName.is_big_car\"\n            > Big Car\n          </label>\n        </div>\n        <div class=\"dialog-buttons\">\n          <button @click=\"updateCarName\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showEditCarNameDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.models-view {\n  padding: 20px;\n}\n\n.section {\n  margin-bottom: 40px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.data-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.data-table th,\n.data-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.data-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.data-table tbody tr:hover {\n  background-color: #f5f5f5;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n}\n\n.save-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 400px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 20px;\n}\n\n.input-field {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.textarea {\n  min-height: 100px;\n  resize: vertical;\n}\n\n.dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n\n.checkbox-field {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.checkbox-field input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n}\n\n.checkbox-field label {\n  cursor: pointer;\n}\n</style>","<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst colors = ref([])\nconst { callApi, error } = useApi()\nconst showAddDialog = ref(false)\nconst showEditDialog = ref(false)\nconst editingColor = ref(null)\nconst user = ref(null)\n\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\nconst newColor = ref({\n  color: ''\n})\n\nconst fetchColors = async () => {\n  const result = await callApi({\n    query: 'SELECT * FROM colors ORDER BY color ASC',\n    params: []\n  })\n  if (result.success) {\n    colors.value = result.data\n  }\n}\n\nconst addColor = async () => {\n  const result = await callApi({\n    query: 'INSERT INTO colors (color) VALUES (?)',\n    params: [newColor.value.color]\n  })\n  if (result.success) {\n    showAddDialog.value = false\n    newColor.value = { color: '' }\n    await fetchColors()\n  }\n}\n\nconst editColor = (color) => {\n  editingColor.value = { ...color }\n  showEditDialog.value = true\n}\n\nconst updateColor = async () => {\n  const result = await callApi({\n    query: 'UPDATE colors SET color = ? WHERE id = ?',\n    params: [editingColor.value.color, editingColor.value.id]\n  })\n  if (result.success) {\n    showEditDialog.value = false\n    editingColor.value = null\n    await fetchColors()\n  }\n}\n\nconst deleteColor = async (color) => {\n  if (confirm('Are you sure you want to delete this color?')) {\n    const result = await callApi({\n      query: 'DELETE FROM colors WHERE id = ?',\n      params: [color.id]\n    })\n    if (result.success) {\n      await fetchColors()\n    }\n  }\n}\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchColors()\n  }\n})\n</script>\n\n<template>\n  <div class=\"colors-view\">\n    <div class=\"header\">\n      <h2>Colors Management</h2>\n      <button @click=\"showAddDialog = true\" class=\"add-btn\">Add Color</button>\n    </div>\n    <div class=\"content\">\n      <table class=\"colors-table\">\n        <thead>\n          <tr>\n            <th>Color</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"color in colors\" :key=\"color.id\">\n            <td>{{ color.color }}</td>\n            <td>\n              <button @click=\"editColor(color)\" class=\"btn edit-btn\">Edit</button>\n              <button \n                v-if=\"isAdmin\"\n                @click=\"deleteColor(color)\" \n                class=\"btn delete-btn\"\n              >Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Add Color Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Color</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newColor.color\" \n            placeholder=\"Color Name\" \n            class=\"input-field\"\n          />\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"addColor\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showAddDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Color Dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Color</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingColor.color\" \n            placeholder=\"Color Name\" \n            class=\"input-field\"\n          />\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"updateColor\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showEditDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.colors-view {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.colors-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.colors-table th,\n.colors-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.colors-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.colors-table tbody tr:hover {\n  background-color: #f5f5f5;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n}\n\n.save-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 400px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 20px;\n}\n\n.input-field {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n</style>","<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst dischargePorts = ref([])\nconst { callApi, error } = useApi()\nconst showAddDialog = ref(false)\nconst showEditDialog = ref(false)\nconst editingPort = ref(null)\nconst user = ref(null)\n\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\nconst newPort = ref({\n  discharge_port: ''\n})\n\nconst fetchPorts = async () => {\n  const result = await callApi({\n    query: 'SELECT * FROM discharge_ports ORDER BY discharge_port ASC',\n    params: []\n  })\n  if (result.success) {\n    dischargePorts.value = result.data\n  }\n}\n\nconst addPort = async () => {\n  const result = await callApi({\n    query: 'INSERT INTO discharge_ports (discharge_port) VALUES (?)',\n    params: [newPort.value.discharge_port]\n  })\n  if (result.success) {\n    showAddDialog.value = false\n    newPort.value = { discharge_port: '' }\n    await fetchPorts()\n  }\n}\n\nconst editPort = (port) => {\n  editingPort.value = { ...port }\n  showEditDialog.value = true\n}\n\nconst updatePort = async () => {\n  const result = await callApi({\n    query: 'UPDATE discharge_ports SET discharge_port = ? WHERE id = ?',\n    params: [editingPort.value.discharge_port, editingPort.value.id]\n  })\n  if (result.success) {\n    showEditDialog.value = false\n    editingPort.value = null\n    await fetchPorts()\n  }\n}\n\nconst deletePort = async (port) => {\n  if (confirm('Are you sure you want to delete this discharge port?')) {\n    const result = await callApi({\n      query: 'DELETE FROM discharge_ports WHERE id = ?',\n      params: [port.id]\n    })\n    if (result.success) {\n      await fetchPorts()\n    }\n  }\n}\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchPorts()\n  }\n})\n</script>\n\n<template>\n  <div class=\"ports-view\">\n    <div class=\"header\">\n      <h2>Discharge Ports Management</h2>\n      <button @click=\"showAddDialog = true\" class=\"add-btn\">Add Discharge Port</button>\n    </div>\n    <div class=\"content\">\n      <table class=\"ports-table\">\n        <thead>\n          <tr>\n            <th>Discharge Port</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"port in dischargePorts\" :key=\"port.id\">\n            <td>{{ port.discharge_port }}</td>\n            <td>\n              <button @click=\"editPort(port)\" class=\"btn edit-btn\">Edit</button>\n              <button \n                v-if=\"isAdmin\"\n                @click=\"deletePort(port)\" \n                class=\"btn delete-btn\"\n              >Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Add Port Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Discharge Port</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newPort.discharge_port\" \n            placeholder=\"Discharge Port Name\" \n            class=\"input-field\"\n          />\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"addPort\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showAddDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Port Dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Discharge Port</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingPort.discharge_port\" \n            placeholder=\"Discharge Port Name\" \n            class=\"input-field\"\n          />\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"updatePort\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showEditDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ports-view {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.ports-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.ports-table th,\n.ports-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.ports-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.ports-table tbody tr:hover {\n  background-color: #f5f5f5;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n}\n\n.save-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 400px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 20px;\n}\n\n.input-field {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n</style>","<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst loadingPorts = ref([])\nconst { callApi, error } = useApi()\nconst showAddDialog = ref(false)\nconst showEditDialog = ref(false)\nconst editingPort = ref(null)\nconst user = ref(null)\n\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\nconst newPort = ref({\n  loading_port: ''\n})\n\nconst fetchPorts = async () => {\n  const result = await callApi({\n    query: 'SELECT * FROM loading_ports ORDER BY loading_port ASC',\n    params: []\n  })\n  if (result.success) {\n    loadingPorts.value = result.data\n  }\n}\n\nconst addPort = async () => {\n  const result = await callApi({\n    query: 'INSERT INTO loading_ports (loading_port) VALUES (?)',\n    params: [newPort.value.loading_port]\n  })\n  if (result.success) {\n    showAddDialog.value = false\n    newPort.value = { loading_port: '' }\n    await fetchPorts()\n  }\n}\n\nconst editPort = (port) => {\n  editingPort.value = { ...port }\n  showEditDialog.value = true\n}\n\nconst updatePort = async () => {\n  const result = await callApi({\n    query: 'UPDATE loading_ports SET loading_port = ? WHERE id = ?',\n    params: [editingPort.value.loading_port, editingPort.value.id]\n  })\n  if (result.success) {\n    showEditDialog.value = false\n    editingPort.value = null\n    await fetchPorts()\n  }\n}\n\nconst deletePort = async (port) => {\n  if (confirm('Are you sure you want to delete this loading port?')) {\n    const result = await callApi({\n      query: 'DELETE FROM loading_ports WHERE id = ?',\n      params: [port.id]\n    })\n    if (result.success) {\n      await fetchPorts()\n    }\n  }\n}\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchPorts()\n  }\n})\n</script>\n\n<template>\n  <div class=\"ports-view\">\n    <div class=\"header\">\n      <h2>Loading Ports Management</h2>\n      <button @click=\"showAddDialog = true\" class=\"add-btn\">Add Loading Port</button>\n    </div>\n    <div class=\"content\">\n      <table class=\"ports-table\">\n        <thead>\n          <tr>\n            <th>Loading Port</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"port in loadingPorts\" :key=\"port.id\">\n            <td>{{ port.loading_port }}</td>\n            <td>\n              <button @click=\"editPort(port)\" class=\"btn edit-btn\">Edit</button>\n              <button \n                v-if=\"isAdmin\"\n                @click=\"deletePort(port)\" \n                class=\"btn delete-btn\"\n              >Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Add Port Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Loading Port</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"newPort.loading_port\" \n            placeholder=\"Loading Port Name\" \n            class=\"input-field\"\n          />\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"addPort\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showAddDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Port Dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Loading Port</h3>\n        <div class=\"form-group\">\n          <input \n            v-model=\"editingPort.loading_port\" \n            placeholder=\"Loading Port Name\" \n            class=\"input-field\"\n          />\n        </div>\n        <div class=\"dialog-actions\">\n          <button @click=\"updatePort\" class=\"btn save-btn\">Save</button>\n          <button @click=\"showEditDialog = false\" class=\"btn cancel-btn\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ports-view {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.ports-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.ports-table th,\n.ports-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.ports-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.ports-table tbody tr:hover {\n  background-color: #f5f5f5;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n}\n\n.save-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #6b7280;\n  color: white;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 400px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 20px;\n}\n\n.input-field {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n</style>","<script setup>\nimport { defineProps, defineEmits } from 'vue'\nimport { ref, computed } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\nconst props = defineProps({\n  buyBills: {\n    type: Array,\n    required: true\n  },\n  selectedBill: {\n    type: Object,\n    default: null\n  }\n})\n\nconst emit = defineEmits(['select-bill'])\n\nconst formatDate = (dateStr) => {\n  if (!dateStr) return 'N/A'\n  return new Date(dateStr).toLocaleDateString()\n}\n\nconst formatNumber = (value) => {\n  const num = Number(value)\n  return !isNaN(num) ? num.toFixed(2) : 'N/A'\n}\n</script>\n\n<template>\n  <div class=\"master-section\">\n    <!-- Toolbar -->\n    <div class=\"toolbar\" v-if=\"selectedBill\">\n      <div class=\"bill-info\">\n        <div class=\"bill-id\">\n          Purchase #{{ selectedBill.id }}\n        </div>\n        <div class=\"bill-details\">\n          <div class=\"detail-item\">\n            <span class=\"label\">Supplier:</span>\n            <span class=\"value\">{{ selectedBill.supplier_name }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">Amount:</span>\n            <span class=\"value\">{{ formatNumber(selectedBill.amount) }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">Paid:</span>\n            <span class=\"value\">{{ formatNumber(selectedBill.payed) }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">Balance:</span>\n            <span class=\"value\">{{ formatNumber(selectedBill.amount - selectedBill.payed) }}</span>\n          </div>\n          <div class=\"detail-item\">\n            <span class=\"label\">Status:</span>\n            <span class=\"value\" :class=\"selectedBill.is_stock_updated ? 'status-updated' : 'status-pending'\">\n              {{ selectedBill.is_stock_updated ? 'Updated' : 'Pending' }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"toolbar-actions\">\n        <slot name=\"actions\" :bill=\"selectedBill\"></slot>\n      </div>\n    </div>\n\n    <!-- Table -->\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Date</th>\n          <th>Supplier</th>\n          <th>Amount</th>\n          <th>Paid</th>\n          <th>Balance</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr \n          v-for=\"bill in buyBills\" \n          :key=\"bill.id\"\n          :class=\"{ 'selected': selectedBill?.id === bill.id }\"\n          @click=\"$emit('select-bill', bill)\"\n        >\n          <td>{{ bill.id }}</td>\n          <td>{{ formatDate(bill.date_buy) }}</td>\n          <td>{{ bill.supplier_name }}</td>\n          <td>{{ formatNumber(bill.amount) }}</td>\n          <td>{{ formatNumber(bill.payed) }}</td>\n          <td>{{ formatNumber(bill.amount - bill.payed) }}</td>\n          <td>\n            <span :class=\"bill.is_stock_updated ? 'status-updated' : 'status-pending'\">\n              {{ bill.is_stock_updated ? 'Updated' : 'Pending' }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<style scoped>\n.master-section {\n  width: 100%;\n}\n\n.toolbar {\n  background-color: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.bill-info {\n  flex: 1;\n}\n\n.bill-id {\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1e293b;\n  margin-bottom: 8px;\n}\n\n.bill-details {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n}\n\n.detail-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.label {\n  color: #64748b;\n  font-size: 0.875rem;\n}\n\n.value {\n  font-weight: 500;\n  color: #1e293b;\n}\n\n.toolbar-actions {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.data-table {\n  width: 100%;\n  border-collapse: collapse;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.data-table th,\n.data-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.data-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n  color: #374151;\n}\n\n.data-table tbody tr {\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.data-table tbody tr:hover {\n  background-color: #f3f4f6;\n}\n\n.data-table tbody tr.selected {\n  background-color: #e5e7eb;\n}\n\n.data-table td {\n  color: #4b5563;\n}\n\n.status-updated {\n  color: #059669;\n  font-weight: 500;\n}\n\n.status-pending {\n  color: #d97706;\n  font-weight: 500;\n}\n\n/* Responsive styles */\n@media (max-width: 1024px) {\n  .toolbar {\n    flex-direction: column;\n    gap: 16px;\n  }\n\n  .toolbar-actions {\n    width: 100%;\n    justify-content: flex-start;\n  }\n\n  .bill-details {\n    flex-direction: column;\n    gap: 8px;\n  }\n}\n</style>","<script setup>\nimport { defineProps, defineEmits, ref, computed } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\nconst { callApi, error, loading } = useApi()\n\nconst props = defineProps({\n  buyDetails: {\n    type: Array,\n    required: true\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['add-detail', 'delete-detail', 'update-detail'])\n\nconst showEditDialog = ref(false)\nconst editingDetail = ref(null)\n\n// Compute if stock is updated from the first detail\nconst isStockUpdated = computed(() => {\n  return props.buyDetails[0]?.is_stock_updated === 1\n})\n\nconst confirmDelete = (detailId, isStockUpdated) => {\n  if (isStockUpdated) {\n    alert('Cannot delete details - Stock has already been updated')\n    return\n  }\n  if (confirm('Are you sure you want to delete this detail?')) {\n    emit('delete-detail', detailId)\n  }\n}\n\nconst openEditDialog = (detail) => {\n  editingDetail.value = { ...detail }\n  showEditDialog.value = true\n}\n\nconst handleEditSubmit = () => {\n  emit('update-detail', editingDetail.value)\n  showEditDialog.value = false\n  editingDetail.value = null\n}\n\nconst showStockAlert = async () => {\n  if (!props.buyDetails.length) {\n    alert('No details to process')\n    return\n  }\n\n  if (confirm('Are you sure you want to update the stock? This action cannot be undone.')) {\n    // Process each detail\n    for (const detail of props.buyDetails) {\n      // Create stock entries based on quantity\n      for (let i = 0; i < detail.QTY; i++) {\n        const result = await callApi({\n          query: `\n            INSERT INTO cars_stock \n            (id_buy_details,price_cell)\n            VALUES (?,?)\n          `,\n          params: [detail.id,detail.price_sell]\n        })\n        \n        if (!result.success) {\n          alert('Error creating stock entry')\n          console.error('Error creating stock entry:', result.error)\n          return\n        }\n      }\n    }\n\n    // Update the is_stock_updated flag in buy_bill\n    const result = await callApi({\n      query: 'UPDATE buy_bill SET is_stock_updated = 1 WHERE id = ?',\n      params: [props.buyDetails[0].id_buy_bill]\n    })\n\n    if (result.success) {\n      alert('Stock has been successfully updated')\n      emit('update-detail', props.buyDetails[0]) // Trigger refresh of parent component\n    } else {\n      console.error('Error updating is_stock_updated flag:', result.error)\n      alert('Error updating stock')\n    }\n  }\n}\n</script>\n\n<template>\n  <div class=\"detail-section\">\n    <div class=\"detail-header\">\n      <h3>Purchase Details</h3>\n      <div class=\"button-group\">\n        <button \n          @click=\"showStockAlert\" \n          class=\"stock-btn\"\n          :class=\"{ 'disabled': isStockUpdated }\"\n          :disabled=\"isStockUpdated\"\n          :title=\"isStockUpdated ? 'Stock has already been updated' : 'Update stock'\"\n        >\n          Update Stock\n        </button>\n        <button \n          @click=\"$emit('add-detail')\" \n          class=\"add-btn\"\n          :class=\"{ 'disabled': isStockUpdated }\"\n          :disabled=\"isStockUpdated\"\n          :title=\"isStockUpdated ? 'Cannot add details - Stock has been updated' : 'Add new detail'\"\n        >\n          Add Detail\n        </button>\n      </div>\n    </div>\n    <table class=\"data-table\">\n      <thead>\n        <tr>\n          <th>Car</th>\n          <th>Color</th>\n          <th>Quantity</th>\n          <th>Amount</th>\n          <th>Year</th>\n          <th>Month</th>\n          <th>Price Sell</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"detail in buyDetails\" :key=\"detail.id\">\n          <td>{{ detail.car_name }}</td>\n          <td>{{ detail.color }}</td>\n          <td>{{ detail.QTY }}</td>\n          <td>{{ detail.amount }}</td>\n          <td>{{ detail.year }}</td>\n          <td>{{ detail.month }}</td>\n          <td>{{ detail.price_sell }}</td>\n          <td class=\"actions\">\n            <button \n              @click=\"openEditDialog(detail)\"\n              class=\"edit-btn\"\n              :class=\"{ 'disabled': detail.is_stock_updated }\"\n              :disabled=\"detail.is_stock_updated\"\n              :title=\"detail.is_stock_updated ? 'Cannot edit - Stock has been updated' : 'Edit this detail'\"\n            >\n              Edit\n            </button>\n            <button \n              @click=\"confirmDelete(detail.id, detail.is_stock_updated)\"\n              class=\"delete-btn\"\n              :class=\"{ 'disabled': detail.is_stock_updated }\"\n              :disabled=\"detail.is_stock_updated\"\n              :title=\"detail.is_stock_updated ? 'Cannot delete - Stock has been updated' : 'Delete this detail'\"\n            >\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <!-- Edit Dialog -->\n<div v-if=\"showEditDialog && editingDetail\" class=\"dialog-overlay\">\n  <div class=\"dialog\">\n    <h3>Edit Purchase Detail</h3>\n    <form @submit.prevent=\"handleEditSubmit\">\n      <div class=\"form-group\">\n        <label for=\"edit-qty\">Quantity</label>\n        <input \n          type=\"number\" \n          id=\"edit-qty\"\n          v-model=\"editingDetail.QTY\" \n          min=\"1\" \n          required\n        >\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"edit-amount\">Amount</label>\n        <input \n          type=\"number\" \n          id=\"edit-amount\"\n          v-model=\"editingDetail.amount\" \n          step=\"0.01\" \n          required\n        >\n      </div>\n      \n      <div class=\"form-row\">\n        <div class=\"form-group half\">\n          <label for=\"edit-year\">Year</label>\n          <input \n            type=\"number\" \n            id=\"edit-year\"\n            v-model=\"editingDetail.year\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group half\">\n          <label for=\"edit-month\">Month</label>\n          <input \n            type=\"number\" \n            id=\"edit-month\"\n            v-model=\"editingDetail.month\" \n            min=\"1\" \n            max=\"12\" \n            required\n          >\n        </div>\n      </div>\n      \n      <!-- Add price_sell field -->\n      <div class=\"form-group\">\n        <label for=\"edit-price-sell\">Price Sell</label>\n        <input \n          type=\"number\" \n          id=\"edit-price-sell\"\n          v-model=\"editingDetail.price_sell\"\n          step=\"0.01\" \n          required\n        >\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"edit-notes\">Notes</label>\n        <textarea \n          id=\"edit-notes\"\n          v-model=\"editingDetail.notes\" \n          rows=\"3\"\n        ></textarea>\n      </div>\n      \n      <div class=\"dialog-buttons\">\n        <button \n          type=\"button\" \n          @click=\"showEditDialog = false\" \n          class=\"cancel-btn\"\n        >\n          Cancel\n        </button>\n        <button type=\"submit\" class=\"submit-btn\">\n          Save Changes\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n</template>\n\n<style scoped>\n.detail-section {\n  width: 100%;\n  border-top: 1px solid #e5e7eb;\n  padding-top: 20px;\n}\n\n.data-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.data-table th,\n.data-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.data-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.detail-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.add-btn:hover {\n  background-color: #059669;\n}\n\n.delete-btn {\n  padding: 4px 8px;\n  background-color: #ef4444;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.delete-btn:hover {\n  background-color: #dc2626;\n}\n\n.delete-btn.disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.delete-btn.disabled:hover {\n  background-color: #9ca3af;\n}\n\n.actions-cell {\n  display: flex;\n  gap: 8px;\n}\n\n.edit-btn {\n  padding: 4px 8px;\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.edit-btn:hover {\n  background-color: #2563eb;\n}\n\n.edit-btn.disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.dialog {\n  background: white;\n  padding: 24px;\n  border-radius: 8px;\n  min-width: 400px;\n  max-width: 90%;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.form-group {\n  margin-bottom: 16px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n}\n\n.form-row {\n  display: flex;\n  gap: 16px;\n}\n\n.form-group.half {\n  flex: 1;\n}\n\n.dialog-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 24px;\n}\n\n.cancel-btn {\n  padding: 8px 16px;\n  background-color: #9ca3af;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.submit-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn:hover {\n  background-color: #6b7280;\n}\n\n.submit-btn:hover {\n  background-color: #059669;\n}\n\n.button-group {\n  display: flex;\n  gap: 12px;\n}\n\n.stock-btn {\n  padding: 8px 16px;\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.stock-btn:hover {\n  background-color: #2563eb;\n}\n\n.stock-btn.disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.stock-btn.disabled:hover {\n  background-color: #9ca3af;\n}\n\n.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\nbutton.disabled {\n  background-color: #ccc;\n  pointer-events: none;\n}\n\n</style>","<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useApi } from '../composables/useApi'\nimport BuyBillsTable from '../components/buy/BuyBillsTable.vue'\nimport BuyDetailsTable from '../components/buy/BuyDetailsTable.vue'\nimport { useRouter } from 'vue-router'\n\n// API and base setup\nconst { callApi, error } = useApi()\nconst router = useRouter()\n\n// State management\nconst buyBills = ref([])\nconst selectedBill = ref(null)\nconst buyDetails = ref([])\nconst suppliers = ref([])\nconst cars = ref([])\nconst colors = ref([])\n\n// Dialog controls\nconst showAddDialog = ref(false)\nconst showAddDetailDialog = ref(false)\n\n// User info\nconst user = ref(JSON.parse(localStorage.getItem('user')))\nconst isAdmin = computed(() => user.value?.role_id === 1)\n\n// Toolbar action methods\nconst canUpdateStock = (bill) => {\n  return bill.amount > 0 && !bill.is_stock_updated\n}\n\nconst handleUpdateStock = async (bill) => {\n  if (!confirm('Are you sure you want to update the stock? This action cannot be undone.')) {\n    return\n  }\n\n  try {\n    const result = await callApi({\n      query: `\n        UPDATE buy_bill \n        SET is_stock_updated = 1 \n        WHERE id = ?\n      `,\n      params: [bill.id]\n    })\n\n    if (result.success) {\n      await fetchBuyBills()\n    } else {\n      alert('Failed to update stock')\n    }\n  } catch (err) {\n    console.error('Error updating stock:', err)\n    alert('Failed to update stock')\n  }\n}\n\nconst handleDeleteBill = async (bill) => {\n  if (!confirm('Are you sure you want to delete this purchase and all its details? This action cannot be undone.')) {\n    return\n  }\n\n  try {\n    // First check if the bill can be deleted\n    if (bill.is_stock_updated) {\n      alert('Cannot delete a purchase that has already been updated in stock')\n      return\n    }\n\n    // Start with deleting related records\n    // 1. Delete payments\n    const deletePayments = await callApi({\n      query: `DELETE FROM buy_payments WHERE id_buy_bill = ?`,\n      params: [bill.id]\n    })\n\n    if (!deletePayments.success) {\n      throw new Error('Failed to delete related payments')\n    }\n\n    // 2. Delete details\n    const deleteDetails = await callApi({\n      query: `DELETE FROM buy_details WHERE id_buy_bill = ?`,\n      params: [bill.id]\n    })\n\n    if (!deleteDetails.success) {\n      throw new Error('Failed to delete purchase details')\n    }\n\n    // 3. Finally delete the bill\n    const deleteBill = await callApi({\n      query: `DELETE FROM buy_bill WHERE id = ? AND is_stock_updated = 0`,\n      params: [bill.id]\n    })\n\n    if (deleteBill.success) {\n      if (selectedBill.value?.id === bill.id) {\n        selectedBill.value = null\n        buyDetails.value = [] // Clear details\n      }\n      await fetchBuyBills()\n    } else {\n      throw new Error('Failed to delete purchase')\n    }\n  } catch (err) {\n    console.error('Error deleting purchase:', err)\n    alert(err.message || 'Failed to delete purchase')\n  }\n}\n\n// Form models\nconst newPurchase = ref({\n  id_supplier: null,\n  date_buy: new Date().toISOString().slice(0, 16),\n  amount: 0,\n  payed: 0,\n  pi_path: ''\n})\n\nconst newDetail = ref({\n  id_car_name: null,\n  id_color: null,\n  amount: 0,\n  notes: '',\n  QTY: 1,\n  year: new Date().getFullYear(),\n  month: new Date().getMonth() + 1,\n  is_used_car: false,\n  id_buy_bill: null\n})\n\n// Data fetching functions\nconst fetchSuppliers = async () => {\n  const result = await callApi({\n    query: 'SELECT * FROM suppliers ORDER BY name ASC',\n    params: []\n  })\n  if (result.success) {\n    suppliers.value = result.data\n  }\n}\n\nconst addPurchase = async () => {\n  const result = await callApi({\n    query: `\n      INSERT INTO buy_bill (id_supplier, date_buy, payed, pi_path)\n      VALUES (?, ?, ?, ?)\n    `,\n    params: [\n      newPurchase.value.id_supplier,\n      newPurchase.value.date_buy,\n      newPurchase.value.payed,\n      newPurchase.value.pi_path\n    ]\n  })\n  \n  if (result.success) {\n    showAddDialog.value = false\n    await fetchBuyBills()\n    // Reset form\n    newPurchase.value = {\n      id_supplier: null,\n      date_buy: new Date().toISOString().slice(0, 16),\n      payed: 0,\n      pi_path: ''\n    }\n  }\n  else {\n    console.error('Error adding purchase:', result.error)\n  }\n}\n\nconst fetchBuyBills = async () => {\n  const result = await callApi({\n    query: `\n      SELECT \n        bb.*,\n        s.name as supplier_name,\n        COALESCE((\n          SELECT SUM(amount * QTY)\n          FROM buy_details\n          WHERE id_buy_bill = bb.id\n        ), 0) as calculated_amount\n      FROM buy_bill bb \n      LEFT JOIN suppliers s ON bb.id_supplier = s.id \n      ORDER BY bb.date_buy DESC\n    `,\n    params: []\n  })\n  if (result.success) {\n    buyBills.value = result.data.map(bill => ({\n      ...bill,\n      amount: Number(bill.calculated_amount),\n      payed: Number(bill.payed)\n    }))\n  }\n}\n\nconst fetchBuyDetails = async (billId) => {\n  const result = await callApi({\n    query: `\n      SELECT bd.*, cn.car_name, c.color, bb.is_stock_updated\n      FROM buy_details bd\n      LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n      LEFT JOIN colors c ON bd.id_color = c.id\n      LEFT JOIN buy_bill bb ON bd.id_buy_bill = bb.id\n      WHERE bd.id_buy_bill = ?\n    `,\n    params: [billId]\n  })\n  if (result.success) {\n    buyDetails.value = result.data\n  }\n  else{\n    console.error('Error fetching details:', result.error);\n  }\n}\n\nconst selectBill = (bill) => {\n  selectedBill.value = bill\n  fetchBuyDetails(bill.id)\n}\n\nconst fetchCars = async () => {\n  const result = await callApi({\n    query: 'SELECT * FROM cars_names ORDER BY car_name ASC',\n    params: []\n  })\n  if (result.success) {\n    cars.value = result.data\n  }\n}\n\nconst fetchColors = async () => {\n  const result = await callApi({\n    query: 'SELECT * FROM colors ORDER BY color ASC',\n    params: []\n  })\n  if (result.success) {\n    colors.value = result.data\n  }\n}\n\nconst updateBillAmount = async (billId) => {\n  const result = await callApi({\n    query: `\n      UPDATE buy_bill \n      SET amount = (\n        SELECT COALESCE(SUM(amount * QTY), 0)\n        FROM buy_details\n        WHERE id_buy_bill = ?\n      )\n      WHERE id = ?\n    `,\n    params: [billId, billId]\n  })\n  \n  if (!result.success) {\n    console.error('Error updating bill amount:', result.error)\n  }\n}\n\nconst addDetail = async () => {\n  const result = await callApi({\n    query: `\n      INSERT INTO buy_details \n      (id_car_name, id_color, amount, notes, QTY, year, month, is_used_car, id_buy_bill, price_sell)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `,\n    params: [\n      newDetail.value.id_car_name,\n      newDetail.value.id_color,\n      newDetail.value.amount,\n      newDetail.value.notes,\n      newDetail.value.QTY,\n      newDetail.value.year,\n      newDetail.value.month,\n      newDetail.value.is_used_car ? 1 : 0,\n      selectedBill.value.id,\n      newDetail.value.price_sell\n    ]\n  })\n  \n  if (result.success) {\n    await updateBillAmount(selectedBill.value.id) // Update bill amount\n    showAddDetailDialog.value = false\n    await fetchBuyDetails(selectedBill.value.id)\n    await fetchBuyBills() // Refresh bills to show updated amount\n    // Reset form\n    newDetail.value = {\n      id_car_name: null,\n      id_color: null,\n      amount: 0,\n      notes: '',\n      QTY: 1,\n      year: new Date().getFullYear(),\n      month: new Date().getMonth() + 1,\n      is_used_car: false,\n      id_buy_bill: null\n    }\n  }\n  else {\n    console.error('Error adding detail:', result.error)\n  }\n}\n\n// Lifecycle hooks\nonMounted(() => {\n  fetchBuyBills()\n  fetchSuppliers()\n  fetchCars()\n  fetchColors()\n})\n\nconst handleDeleteDetail = async (detailId) => {\n  const result = await callApi({\n    query: 'DELETE FROM buy_details WHERE id = ?',\n    params: [detailId]\n  })\n  \n  if (result.success) {\n    await updateBillAmount(selectedBill.value.id) // Update bill amount\n    await fetchBuyDetails(selectedBill.value.id)\n    await fetchBuyBills() // Refresh bills to show updated amount\n  } else {\n    alert('Failed to delete detail. Please try again.')\n    console.error('Error deleting detail:', result.error)\n  }\n}\n\nconst handleUpdateDetail = async (updatedDetail) => {\n  const result = await callApi({\n    query: `\n      UPDATE buy_details \n      SET QTY = ?, amount = ?, year = ?, month = ?, notes = ?, price_sell = ?\n      WHERE id = ?\n    `,\n    params: [\n      updatedDetail.QTY,\n      updatedDetail.amount,\n      updatedDetail.year,\n      updatedDetail.month,\n      updatedDetail.notes,\n      updatedDetail.price_sell,\n      updatedDetail.id\n    ]\n  })\n  \n  if (result.success) {\n    await updateBillAmount(selectedBill.value.id) // Update bill amount\n    await fetchBuyDetails(selectedBill.value.id)\n    await fetchBuyBills() // Refresh bills to show updated amount\n  } else {\n    alert('Failed to update detail. Please try again.')\n    console.error('Error updating detail:', result.error)\n  }\n}\n\n// Replace handlePaymentClick with new method to open in new tab\nconst openPayments = (bill) => {\n  window.open(`/buy-payments/${bill.id}`, '_blank')\n}\n</script>\n\n<template>\n  <div class=\"buy-view\">\n    <div class=\"header\">\n      <h2>Buy Management</h2>\n      <button @click=\"showAddDialog = true\" class=\"add-btn\">Add New Purchase</button>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"master-detail-vertical\">\n        <BuyBillsTable \n          :buyBills=\"buyBills\"\n          :selectedBill=\"selectedBill\"\n          @select-bill=\"selectBill\"\n        >\n          <!-- Toolbar actions -->\n          <template #actions=\"{ bill }\">\n            <button \n              @click.stop=\"openPayments(bill)\"\n              class=\"payment-btn\"\n              :disabled=\"bill.is_stock_updated\"\n            >\n              Payments\n            </button>\n            <button \n              v-if=\"false\"\n              @click.stop=\"handleUpdateStock(bill)\"\n              class=\"action-btn update-btn\"\n              :disabled=\"!canUpdateStock(bill)\"\n            >\n              Update Stock\n            </button>\n            <button \n              v-if=\"isAdmin\"\n              @click.stop=\"handleDeleteBill(bill)\"\n              class=\"action-btn delete-btn\"\n              :disabled=\"bill.is_stock_updated\"\n            >\n              Delete\n            </button>\n          </template>\n        </BuyBillsTable>\n\n        <BuyDetailsTable \n          v-if=\"selectedBill\"\n          :buyDetails=\"buyDetails\"\n          :isAdmin=\"isAdmin\"\n          @add-detail=\"showAddDetailDialog = true\"\n          @delete-detail=\"handleDeleteDetail\"\n          @update-detail=\"handleUpdateDetail\"\n        />\n      </div>\n    </div>\n\n    <!-- Dialogs -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Purchase</h3>\n        <form @submit.prevent=\"addPurchase\">\n          <div class=\"form-group\">\n            <label>Supplier</label>\n            <select v-model=\"newPurchase.id_supplier\" required>\n              <option value=\"\">Select Supplier</option>\n              <option v-for=\"supplier in suppliers\" \n                      :key=\"supplier.id\" \n                      :value=\"supplier.id\">\n                {{ supplier.name }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"form-group\">\n            <label>Date</label>\n            <input type=\"datetime-local\" \n                   v-model=\"newPurchase.date_buy\" \n                   required>\n          </div>\n          \n          <div class=\"form-group\">\n            <label>Paid Amount</label>\n            <input type=\"number\" \n                   v-model=\"newPurchase.payed\" \n                   step=\"0.01\" \n                   required>\n          </div>\n          \n          <div class=\"form-group\">\n            <label>PI Path</label>\n            <input type=\"text\" \n                   v-model=\"newPurchase.pi_path\">\n          </div>\n          \n          <div class=\"dialog-buttons\">\n            <button type=\"button\" \n                    @click=\"showAddDialog = false\" \n                    class=\"cancel-btn\">\n              Cancel\n            </button>\n            <button type=\"submit\" class=\"submit-btn\">\n              Add Purchase\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n    <div v-if=\"showAddDetailDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add Purchase Detail</h3>\n        <form @submit.prevent=\"addDetail\">\n          <div class=\"form-group\">\n            <label>Car</label>\n            <select v-model=\"newDetail.id_car_name\" required>\n              <option value=\"\">Select Car</option>\n              <option v-for=\"car in cars\" \n                      :key=\"car.id\" \n                      :value=\"car.id\">\n                {{ car.car_name }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"form-group\">\n            <label>Color</label>\n            <select v-model=\"newDetail.id_color\" required>\n              <option value=\"\">Select Color</option>\n              <option v-for=\"color in colors\" \n                      :key=\"color.id\" \n                      :value=\"color.id\">\n                {{ color.color }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"form-group\">\n            <label>Quantity</label>\n            <input type=\"number\" \n                   v-model=\"newDetail.QTY\" \n                   min=\"1\" \n                   required>\n          </div>\n          \n          <div class=\"form-group\">\n            <label>Amount</label>\n            <input type=\"number\" \n                   v-model=\"newDetail.amount\" \n                   step=\"0.01\" \n                   required>\n          </div>\n          \n          <div class=\"form-row\">\n            <div class=\"form-group half\">\n              <label>Year</label>\n              <input type=\"number\" \n                     v-model=\"newDetail.year\" \n                     required>\n            </div>\n            \n            <div class=\"form-group half\">\n              <label>Month</label>\n              <input type=\"number\" \n                     v-model=\"newDetail.month\" \n                     min=\"1\" \n                     max=\"12\" \n                     required>\n            </div>\n          </div>\n          \n          <div class=\"form-group\">\n            <label>Price Sell</label>\n            <input type=\"number\" \n                   v-model=\"newDetail.price_sell\"\n                   step=\"0.01\"\n                   required>\n          </div>\n          \n          <div class=\"form-group\">\n            <label>Notes</label>\n            <textarea v-model=\"newDetail.notes\" rows=\"3\"></textarea>\n          </div>\n          \n          <div class=\"form-group checkbox\">\n            <label>\n              <input type=\"checkbox\" v-model=\"newDetail.is_used_car\">\n              Used Car\n            </label>\n          </div>\n          \n          <div class=\"dialog-buttons\">\n            <button type=\"button\" \n                    @click=\"showAddDetailDialog = false\" \n                    class=\"cancel-btn\">\n              Cancel\n            </button>\n            <button type=\"submit\" class=\"submit-btn\">\n              Add Detail\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.buy-view {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.content {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n}\n\n.master-detail-vertical {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.master-section {\n  width: 100%;\n}\n\n.detail-section {\n  width: 100%;\n  border-top: 1px solid #e5e7eb;\n  padding-top: 20px;\n}\n\n.data-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.data-table th,\n.data-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.data-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.data-table tbody tr {\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.data-table tbody tr:hover {\n  background-color: #f3f4f6;\n}\n\n.data-table tbody tr.selected {\n  background-color: #e5e7eb;\n}\n\n.empty-detail {\n  text-align: center;\n  color: #6b7280;\n  padding: 40px;\n}\n\n.add-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.add-btn:hover {\n  background-color: #059669;\n}\n\nh3 {\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: #374151;\n}\n\n.selected-id {\n  background-color: #f0fdf4;\n  color: #047857;\n  padding: 8px 16px;\n  border-radius: 4px;\n  margin-bottom: 16px;\n  border: 1px solid #10b981;\n  font-weight: 500;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.dialog {\n  background-color: white;\n  padding: 24px;\n  border-radius: 8px;\n  width: 100%;\n  max-width: 500px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.form-group {\n  margin-bottom: 16px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #374151;\n}\n\n.form-group input,\n.form-group select {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.form-group input:focus,\n.form-group select:focus {\n  outline: none;\n  border-color: #10b981;\n  ring: 2px #10b981;\n}\n\n.dialog-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 24px;\n}\n\n.cancel-btn {\n  padding: 8px 16px;\n  background-color: #e5e7eb;\n  color: #374151;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn:hover {\n  background-color: #d1d5db;\n}\n\n.submit-btn {\n  padding: 8px 16px;\n  background-color: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.submit-btn:hover {\n  background-color: #059669;\n}\n\n.detail-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.form-row {\n  display: flex;\n  gap: 16px;\n}\n\n.form-group.half {\n  flex: 1;\n}\n\n.form-group textarea {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 14px;\n  resize: vertical;\n}\n\n.form-group.checkbox {\n  display: flex;\n  align-items: center;\n}\n\n.form-group.checkbox input {\n  width: auto;\n  margin-right: 8px;\n}\n\n.form-group.checkbox label {\n  display: flex;\n  align-items: center;\n  margin: 0;\n}\n\n.payment-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 0.875rem;\n  font-weight: 500;\n  transition: background-color 0.2s;\n}\n\n.payment-btn:hover:not(:disabled) {\n  background-color: #2563eb;\n}\n\n.payment-btn:before {\n  content: \"💰\";\n  font-size: 1rem;\n}\n\n.payment-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.action-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 0.875rem;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.action-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.update-btn {\n  background-color: #059669;\n}\n\n.update-btn:hover:not(:disabled) {\n  background-color: #047857;\n}\n\n.update-btn:before {\n  content: \"📦\";\n  font-size: 1rem;\n}\n\n.delete-btn {\n  background-color: #dc2626;\n}\n\n.delete-btn:hover:not(:disabled) {\n  background-color: #b91c1c;\n}\n\n.delete-btn:before {\n  content: \"🗑\";\n  font-size: 1rem;\n}\n</style>","<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport { useApi } from '../composables/useApi'\n\nconst { callApi } = useApi()\nconst sellBills = ref([])\nconst carsStock = ref([])\nconst availableCars = ref([])\nconst loading = ref(true)\nconst stockLoading = ref(false)\nconst availableCarsLoading = ref(false)\nconst error = ref(null)\nconst selectedBillId = ref(null)\nconst showAddDialog = ref(false)\n// Add new refs for the assignment dialog\nconst showAssignDialog = ref(false)\nconst carToAssign = ref(null)\nconst loadingPorts = ref([])\nconst dischargePorts = ref([])\nconst clients = ref([])\n\n// Add new refs for edit dialog\nconst showEditDialog = ref(false)\nconst editingSellBill = ref({\n  id: null,\n  id_broker: null,\n  date_sell: '',\n  notes: ''\n})\n\n// Add new refs for car edit dialog\nconst showCarEditDialog = ref(false)\nconst editingCar = ref(null)\n\nconst newSellBill = ref({\n  id_broker: null,\n  date_sell: new Date().toISOString().split('T')[0], // Today's date in YYYY-MM-DD format\n  notes: ''\n})\n\n// Add ref for brokers list\nconst brokers = ref([])\n\nconst fetchSellBills = async () => {\n  loading.value = true\n  error.value = null\n  \n  try {\n    const result = await callApi({\n      query: `\n        SELECT \n          sb.id,\n          sb.date_sell,\n          sb.notes,\n          c.name as broker_name,\n          c.mobiles as broker_mobile\n        FROM sell_bill sb\n        LEFT JOIN clients c ON sb.id_broker = c.id AND c.is_broker = 1\n        ORDER BY sb.date_sell DESC\n      `,\n      params: []\n    })\n    \n    if (result.success) {\n      sellBills.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch sell bills'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\nconst fetchBrokers = async () => {\n  try {\n    const result = await callApi({\n      query: `\n        SELECT id, name, mobiles\n        FROM clients\n        WHERE is_broker = 1\n        ORDER BY name ASC\n      `,\n      params: []\n    })\n    \n    if (result.success) {\n      brokers.value = result.data\n    }\n  } catch (err) {\n    console.error('Error fetching brokers:', err)\n  }\n}\n\nconst selectBill = async (bill) => {\n  selectedBillId.value = bill.id\n  await fetchCarStock(bill.id)\n}\n\nconst fetchCarStock = async (sellBillId) => {\n  stockLoading.value = true\n  \n  try {\n    const result = await callApi({\n      query: `\n        SELECT \n          cs.id,\n          cs.vin,\n          cs.price_cell,\n          cs.date_loding,\n          cs.date_sell,\n          cs.notes,\n          cs.freight,\n          cs.path_documents,\n          cs.sell_pi_path,\n          cs.buy_pi_path,\n          c.name as client_name,\n          cn.car_name,\n          clr.color,\n          lp.loading_port,\n          dp.discharge_port,\n          bd.price_sell as buy_price\n        FROM cars_stock cs\n        LEFT JOIN clients c ON cs.id_client = c.id\n        LEFT JOIN buy_details bd ON cs.id_buy_details = bd.id\n        LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n        LEFT JOIN colors clr ON bd.id_color = clr.id\n        LEFT JOIN loading_ports lp ON cs.id_port_loading = lp.id\n        LEFT JOIN discharge_ports dp ON cs.id_port_discharge = dp.id\n        WHERE cs.id_sell = ? AND cs.hidden = 0\n        ORDER BY cs.id DESC\n      `,\n      params: [sellBillId]\n    })\n    \n    if (result.success) {\n      carsStock.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch cars stock'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    stockLoading.value = false\n  }\n}\n\nconst fetchAvailableCars = async () => {\n  availableCarsLoading.value = true\n  \n  try {\n    const result = await callApi({\n      query: `\n        SELECT \n          cs.id,\n          cs.vin,\n          cs.price_cell,\n          cs.date_loding,\n          cs.notes,\n          cs.freight,\n          c.name as client_name,\n          cn.car_name,\n          clr.color,\n          lp.loading_port,\n          dp.discharge_port,\n          bd.price_sell as buy_price\n        FROM cars_stock cs\n        LEFT JOIN clients c ON cs.id_client = c.id\n        LEFT JOIN buy_details bd ON cs.id_buy_details = bd.id\n        LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n        LEFT JOIN colors clr ON bd.id_color = clr.id\n        LEFT JOIN loading_ports lp ON cs.id_port_loading = lp.id\n        LEFT JOIN discharge_ports dp ON cs.id_port_discharge = dp.id\n        WHERE cs.id_sell IS NULL AND cs.hidden = 0\n        ORDER BY cs.id DESC\n      `,\n      params: []\n    })\n    \n    if (result.success) {\n      availableCars.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch available cars'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    availableCarsLoading.value = false\n  }\n}\n\nconst addSellBill = async () => {\n  try {\n    const result = await callApi({\n      query: `\n        INSERT INTO sell_bill (id_broker, date_sell, notes)\n        VALUES (?, ?, ?)\n      `,\n      params: [\n        newSellBill.value.id_broker,\n        newSellBill.value.date_sell,\n        newSellBill.value.notes\n      ]\n    })\n    \n    if (result.success) {\n      showAddDialog.value = false\n      // Reset form\n      newSellBill.value = {\n        id_broker: null,\n        date_sell: new Date().toISOString().split('T')[0],\n        notes: ''\n      }\n      // Refresh the list\n      await fetchSellBills()\n    } else {\n      error.value = result.error || 'Failed to add sell bill'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\n// Add function to fetch loading ports\nconst fetchLoadingPorts = async () => {\n  try {\n    const result = await callApi({\n      query: 'SELECT * FROM loading_ports ORDER BY loading_port ASC',\n      params: []\n    })\n    \n    if (result.success) {\n      loadingPorts.value = result.data\n    }\n  } catch (err) {\n    console.error('Error fetching loading ports:', err)\n  }\n}\n\n// Add function to fetch discharge ports\nconst fetchDischargePorts = async () => {\n  try {\n    const result = await callApi({\n      query: 'SELECT * FROM discharge_ports ORDER BY discharge_port ASC',\n      params: []\n    })\n    \n    if (result.success) {\n      dischargePorts.value = result.data\n    }\n  } catch (err) {\n    console.error('Error fetching discharge ports:', err)\n  }\n}\n\n// Add function to fetch clients\nconst fetchClients = async () => {\n  try {\n    const result = await callApi({\n      query: 'SELECT * FROM clients WHERE is_broker = 0 ORDER BY name ASC',\n      params: []\n    })\n    \n    if (result.success) {\n      clients.value = result.data\n    }\n  } catch (err) {\n    console.error('Error fetching clients:', err)\n  }\n}\n\n// Modify the assignCarToBill function to show dialog first\nconst openAssignDialog = (car) => {\n  carToAssign.value = { ...car }\n  showAssignDialog.value = true\n}\n\nconst assignCarToBill = async () => {\n  if (!selectedBillId.value) {\n    alert('Please select a bill first')\n    return\n  }\n  \n  // Validate required fields\n  if (!carToAssign.value.id_client) {\n    alert('Client name is required')\n    return\n  }\n  \n  if (!carToAssign.value.id_port_discharge) {\n    alert('Discharge port is required')\n    return\n  }\n  \n  if (!carToAssign.value.price_cell) {\n    alert('Selling price is required')\n    return\n  }\n  \n  try {\n    const result = await callApi({\n      query: `\n        UPDATE cars_stock \n        SET id_sell = ?,\n            id_client = ?,\n            vin = ?,\n            id_port_loading = ?,\n            id_port_discharge = ?,\n            price_cell = ?\n        WHERE id = ?\n      `,\n      params: [\n        selectedBillId.value, \n        carToAssign.value.id_client,\n        carToAssign.value.vin,\n        carToAssign.value.id_port_loading,\n        carToAssign.value.id_port_discharge,\n        carToAssign.value.price_cell,\n        carToAssign.value.id\n      ]\n    })\n    \n    if (result.success) {\n      showAssignDialog.value = false\n      // Refresh both car lists\n      await fetchCarStock(selectedBillId.value)\n      await fetchAvailableCars()\n    } else {\n      error.value = result.error || 'Failed to assign car to bill'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\n// Add this new function to unassign a car from a bill\nconst unassignCar = async (carId) => {\n  try {\n    const result = await callApi({\n      query: `\n        UPDATE cars_stock \n        SET id_client = NULL,\n            id_port_discharge = NULL,\n            id_sell = NULL\n        WHERE id = ?\n      `,\n      params: [carId]\n    })\n    \n    if (result.success) {\n      // Refresh both car lists\n      await fetchCarStock(selectedBillId.value)\n      await fetchAvailableCars()\n    } else {\n      error.value = result.error || 'Failed to unassign car'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\n// Add new function to open edit dialog\nconst openEditDialog = (bill, event) => {\n  // Stop the click event from propagating to the row\n  event.stopPropagation()\n  \n  // Set the editing bill data\n  editingSellBill.value = {\n    id: bill.id,\n    id_broker: bill.id_broker,\n    date_sell: bill.date_sell.split('T')[0], // Format date for input\n    notes: bill.notes || ''\n  }\n  \n  showEditDialog.value = true\n}\n\n// Add new function to update sell bill\nconst updateSellBill = async () => {\n  try {\n    const result = await callApi({\n      query: `\n        UPDATE sell_bill \n        SET id_broker = ?, \n            date_sell = ?, \n            notes = ?\n        WHERE id = ?\n      `,\n      params: [\n        editingSellBill.value.id_broker,\n        editingSellBill.value.date_sell,\n        editingSellBill.value.notes,\n        editingSellBill.value.id\n      ]\n    })\n    \n    if (result.success) {\n      showEditDialog.value = false\n      // Refresh the list\n      await fetchSellBills()\n      \n      // If the edited bill was selected, refresh its data\n      if (selectedBillId.value === editingSellBill.value.id) {\n        await fetchCarStock(selectedBillId.value)\n      }\n    } else {\n      error.value = result.error || 'Failed to update sell bill'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\n// Add new function to delete sell bill\nconst deleteSellBill = async (billId, event) => {\n  // Stop the click event from propagating to the row\n  event.stopPropagation()\n  \n  // Confirm deletion\n  if (!confirm('Are you sure you want to delete this sell bill? This will also unassign all cars from this bill.')) {\n    return\n  }\n  \n  try {\n    // First, unassign all cars from this bill\n    const unassignResult = await callApi({\n      query: `\n        UPDATE cars_stock \n        SET id_sell = NULL \n        WHERE id_sell = ?\n      `,\n      params: [billId]\n    })\n    \n    if (!unassignResult.success) {\n      error.value = unassignResult.error || 'Failed to unassign cars from bill'\n      return\n    }\n    \n    // Then delete the bill\n    const deleteResult = await callApi({\n      query: `\n        DELETE FROM sell_bill \n        WHERE id = ?\n      `,\n      params: [billId]\n    })\n    \n    if (deleteResult.success) {\n      // If the deleted bill was selected, clear selection\n      if (selectedBillId.value === billId) {\n        selectedBillId.value = null\n        carsStock.value = []\n      }\n      \n      // Refresh the lists\n      await fetchSellBills()\n      await fetchAvailableCars()\n    } else {\n      error.value = deleteResult.error || 'Failed to delete sell bill'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n\nonMounted(async () => {\n  await fetchSellBills()\n  await fetchBrokers()\n  await fetchAvailableCars()\n  await fetchLoadingPorts()\n  await fetchDischargePorts()\n  await fetchClients()\n})\n\n// Add function to edit car\nconst editCar = (car) => {\n  editingCar.value = { ...car }\n  showCarEditDialog.value = true\n}\n\n// Add function to update car\nconst updateCar = async () => {\n  if (!editingCar.value) return\n  \n  try {\n    const result = await callApi({\n      query: `\n        UPDATE cars_stock \n        SET id_client = ?,\n            vin = ?,\n            id_port_loading = ?,\n            id_port_discharge = ?,\n            price_cell = ?,\n            notes = ?\n        WHERE id = ?\n      `,\n      params: [\n        editingCar.value.id_client,\n        editingCar.value.vin,\n        editingCar.value.id_port_loading,\n        editingCar.value.id_port_discharge,\n        editingCar.value.price_cell,\n        editingCar.value.notes,\n        editingCar.value.id\n      ]\n    })\n    \n    if (result.success) {\n      showCarEditDialog.value = false\n      await fetchCarStock(selectedBillId.value)\n    } else {\n      error.value = result.error || 'Failed to update car'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  }\n}\n</script>\n\n<template>\n  <div class=\"sell-view\">\n    <div class=\"header\">\n      <h2>Sell Bills Management</h2>\n      <button class=\"add-btn\" @click=\"showAddDialog = true\">\n        Add New Sell Bill\n      </button>\n    </div>\n    \n    <div v-if=\"selectedBillId\" class=\"selected-bill\">\n      Selected Bill ID: <span class=\"bill-id\">{{ selectedBillId }}</span>\n    </div>\n    \n    <div class=\"content\">\n      <div v-if=\"loading\" class=\"loading\">Loading...</div>\n      \n      <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\n      \n      <div v-else class=\"tables-container\">\n        <!-- Sell Bills Table -->\n        <div class=\"sell-bills-table\">\n          <h3>Sell Bills</h3>\n          <table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Broker</th>\n                <th>Notes</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr \n                v-for=\"bill in sellBills\" \n                :key=\"bill.id\" \n                @click=\"selectBill(bill)\"\n                :class=\"{ 'selected': selectedBillId === bill.id }\"\n              >\n                <td>{{ bill.id }}</td>\n                <td>{{ new Date(bill.date_sell).toLocaleDateString() }}</td>\n                <td>{{ bill.broker_name || 'N/A' }}</td>\n                <td>{{ bill.notes || 'N/A' }}</td>\n                <td>\n                  <button @click=\"openEditDialog(bill, $event)\" class=\"btn edit-btn\">Edit</button>\n                  <button class=\"btn delete-btn\" @click=\"deleteSellBill(bill.id, $event)\">Delete</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        \n        <!-- Car Stock Table for Selected Bill -->\n        <div class=\"car-stock-table\" v-if=\"selectedBillId\">\n          <h3>Cars in Selected Bill</h3>\n          <div v-if=\"stockLoading\" class=\"loading\">Loading cars...</div>\n          <div v-else-if=\"carsStock.length === 0\" class=\"no-data\">\n            No cars found for this sell bill\n          </div>\n          <table v-else>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Car</th>\n                <th>Color</th>\n                <th>VIN</th>\n                <th>Client</th>\n                <th>Loading Port</th>\n                <th>Discharge Port</th>\n                <th>Buy Price</th>\n                <th>Sell Price</th>\n                <th>Profit</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"car in carsStock\" :key=\"car.id\">\n                <td>{{ car.id }}</td>\n                <td>{{ car.car_name || 'N/A' }}</td>\n                <td>{{ car.color || 'N/A' }}</td>\n                <td>{{ car.vin || 'N/A' }}</td>\n                <td>{{ car.client_name || 'N/A' }}</td>\n                <td>{{ car.loading_port || 'N/A' }}</td>\n                <td>{{ car.discharge_port || 'N/A' }}</td>\n                <td>${{ car.buy_price || 0 }}</td>\n                <td>${{ car.price_cell || 0 }}</td>\n                <td>${{ (car.price_cell - car.buy_price) || 0 }}</td>\n                <td>\n                  <button @click=\"editCar(car)\" class=\"edit-btn\">Edit</button>\n                  <button @click=\"unassignCar(car.id)\" class=\"unassign-btn\">Unassign</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        \n        <!-- Available Cars Table -->\n        <div class=\"available-cars-table\" v-if=\"selectedBillId\">\n          <h3>Available Cars</h3>\n          <div v-if=\"availableCarsLoading\" class=\"loading\">Loading...</div>\n          <div v-else-if=\"availableCars.length === 0\" class=\"no-data\">No available cars</div>\n          <table v-else>\n            <thead>\n              <tr>\n                <th>Car</th>\n                <th>Color</th>\n                <th>VIN</th>\n                <th>Buy Price</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"car in availableCars\" :key=\"car.id\">\n                <td>{{ car.car_name || 'N/A' }}</td>\n                <td>{{ car.color || 'N/A' }}</td>\n                <td>{{ car.vin || 'N/A' }}</td>\n                <td>${{ car.buy_price || 0 }}</td>\n                <td>${{ car.price_cell || 0 }}</td>\n                <td>${{ (car.price_cell - car.buy_price) || 0 }}</td>\n                <td>\n                  <button @click=\"openAssignDialog(car)\" class=\"assign-btn\">Assign to Bill</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Add Assignment Dialog -->\n    <div class=\"dialog-overlay\" v-if=\"showAssignDialog\">\n      <div class=\"dialog\">\n        <h2>Assign Car to Bill</h2>\n        <div class=\"form-group\">\n          <label for=\"client\">Client: <span class=\"required\">*</span></label>\n          <select id=\"client\" v-model=\"carToAssign.id_client\" required>\n            <option value=\"\">Select Client</option>\n            <option v-for=\"client in clients\" :key=\"client.id\" :value=\"client.id\">{{ client.name }}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"vin\">VIN:</label>\n          <input type=\"text\" id=\"vin\" v-model=\"carToAssign.vin\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"loading-port\">Loading Port:</label>\n          <select id=\"loading-port\" v-model=\"carToAssign.id_port_loading\">\n            <option value=\"\">Select Loading Port</option>\n            <option v-for=\"port in loadingPorts\" :key=\"port.id\" :value=\"port.id\">{{ port.loading_port }}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"discharge-port\">Discharge Port: <span class=\"required\">*</span></label>\n          <select id=\"discharge-port\" v-model=\"carToAssign.id_port_discharge\" required>\n            <option value=\"\">Select Discharge Port</option>\n            <option v-for=\"port in dischargePorts\" :key=\"port.id\" :value=\"port.id\">{{ port.discharge_port }}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"sell-price\">Sell Price: <span class=\"required\">*</span></label>\n          <input type=\"number\" id=\"sell-price\" v-model=\"carToAssign.price_cell\" required>\n        </div>\n        <div class=\"dialog-buttons\">\n          <button @click=\"assignCarToBill\" class=\"primary\">Assign</button>\n          <button @click=\"showAssignDialog = false\">Cancel</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Add Sell Bill Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Sell Bill</h3>\n        \n        <div class=\"form-group\">\n          <label for=\"broker\">Broker:</label>\n          <select id=\"broker\" v-model=\"newSellBill.id_broker\">\n            <option value=\"\">Select Broker</option>\n            <option v-for=\"broker in brokers\" :key=\"broker.id\" :value=\"broker.id\">\n              {{ broker.name }}\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"date\">Date:</label>\n          <input type=\"date\" id=\"date\" v-model=\"newSellBill.date_sell\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"notes\">Notes:</label>\n          <textarea id=\"notes\" v-model=\"newSellBill.notes\"></textarea>\n        </div>\n        \n        <div class=\"dialog-buttons\">\n          <button @click=\"showAddDialog = false\">Cancel</button>\n          <button @click=\"addSellBill\" class=\"primary\">Add</button>\n        </div>\n      </div>\n    </div>\n    <!-- Car Edit Dialog -->\n    <div v-if=\"showCarEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Car Details</h3>\n        <div class=\"form-group\">\n          <label for=\"edit-car-client\">Client:</label>\n          <select id=\"edit-car-client\" v-model=\"editingCar.id_client\">\n            <option value=\"\">Select Client</option>\n            <option v-for=\"client in clients\" :key=\"client.id\" :value=\"client.id\">\n              {{ client.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"edit-car-vin\">VIN:</label>\n          <input type=\"text\" id=\"edit-car-vin\" v-model=\"editingCar.vin\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"edit-car-loading-port\">Loading Port:</label>\n          <select id=\"edit-car-loading-port\" v-model=\"editingCar.id_port_loading\">\n            <option value=\"\">Select Loading Port</option>\n            <option v-for=\"port in loadingPorts\" :key=\"port.id\" :value=\"port.id\">\n              {{ port.loading_port }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"edit-car-discharge-port\">Discharge Port:</label>\n          <select id=\"edit-car-discharge-port\" v-model=\"editingCar.id_port_discharge\">\n            <option value=\"\">Select Discharge Port</option>\n            <option v-for=\"port in dischargePorts\" :key=\"port.id\" :value=\"port.id\">\n              {{ port.discharge_port }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"edit-car-price\">Selling Price:</label>\n          <input type=\"number\" id=\"edit-car-price\" v-model=\"editingCar.price_cell\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"edit-car-notes\">Notes:</label>\n          <textarea id=\"edit-car-notes\" v-model=\"editingCar.notes\"></textarea>\n        </div>\n        <div class=\"dialog-buttons\">\n          <button @click=\"updateCar\" class=\"primary\">Update</button>\n          <button @click=\"showCarEditDialog = false\">Cancel</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Assign Car Dialog -->\n    <div class=\"dialog-overlay\" v-if=\"showAssignDialog\">\n      <div class=\"dialog\">\n        <h2>Assign Car to Bill</h2>\n        <div class=\"form-group\">\n          <label for=\"client\">Client: <span class=\"required\">*</span></label>\n          <select id=\"client\" v-model=\"carToAssign.id_client\" required>\n            <option value=\"\">Select Client</option>\n            <option v-for=\"client in clients\" :key=\"client.id\" :value=\"client.id\">{{ client.name }}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"vin\">VIN:</label>\n          <input type=\"text\" id=\"vin\" v-model=\"carToAssign.vin\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"loading-port\">Loading Port:</label>\n          <select id=\"loading-port\" v-model=\"carToAssign.id_port_loading\">\n            <option value=\"\">Select Loading Port</option>\n            <option v-for=\"port in loadingPorts\" :key=\"port.id\" :value=\"port.id\">{{ port.loading_port }}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"discharge-port\">Discharge Port: <span class=\"required\">*</span></label>\n          <select id=\"discharge-port\" v-model=\"carToAssign.id_port_discharge\" required>\n            <option value=\"\">Select Discharge Port</option>\n            <option v-for=\"port in dischargePorts\" :key=\"port.id\" :value=\"port.id\">{{ port.discharge_port }}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"sell-price\">Sell Price: <span class=\"required\">*</span></label>\n          <input type=\"number\" id=\"sell-price\" v-model=\"carToAssign.price_cell\" required>\n        </div>\n        <div class=\"dialog-buttons\">\n          <button @click=\"assignCarToBill\" class=\"primary\">Assign</button>\n          <button @click=\"showAssignDialog = false\">Cancel</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Add Sell Bill Dialog -->\n    <div v-if=\"showAddDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Add New Sell Bill</h3>\n        \n        <div class=\"form-group\">\n          <label for=\"broker\">Broker:</label>\n          <select id=\"broker\" v-model=\"newSellBill.id_broker\">\n            <option value=\"\">Select Broker</option>\n            <option v-for=\"broker in brokers\" :key=\"broker.id\" :value=\"broker.id\">\n              {{ broker.name }}\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"date\">Date:</label>\n          <input type=\"date\" id=\"date\" v-model=\"newSellBill.date_sell\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"notes\">Notes:</label>\n          <textarea id=\"notes\" v-model=\"newSellBill.notes\"></textarea>\n        </div>\n        \n        <div class=\"dialog-buttons\">\n          <button @click=\"showAddDialog = false\">Cancel</button>\n          <button @click=\"addSellBill\" class=\"primary\">Add</button>\n        </div>\n      </div>\n    </div>\n    <!-- Replace this edit dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <h3>Edit Sell Bill</h3>\n        \n        <div class=\"form-group\">\n          <label for=\"edit-broker\">Broker:</label>\n          <select id=\"edit-broker\" v-model=\"editingSellBill.id_broker\">\n            <option value=\"\">Select Broker</option>\n            <option v-for=\"broker in brokers\" :key=\"broker.id\" :value=\"broker.id\">\n              {{ broker.name }}\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"edit-date\">Date:</label>\n          <input type=\"date\" id=\"edit-date\" v-model=\"editingSellBill.date_sell\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"edit-notes\">Notes:</label>\n          <textarea id=\"edit-notes\" v-model=\"editingSellBill.notes\"></textarea>\n        </div>\n        \n        <div class=\"dialog-buttons\">\n          <button @click=\"showEditDialog = false\">Cancel</button>\n          <button @click=\"updateSellBill\" class=\"primary\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.sell-view {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  padding: 10px 15px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.selected-bill {\n  margin-bottom: 15px;\n  padding: 10px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.bill-id {\n  font-weight: bold;\n  color: #007bff;\n}\n\n.tables-container {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\n\nth, td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\n\nth {\n  background-color: #f2f2f2;\n}\n\ntr:hover {\n  background-color: #f5f5f5;\n}\n\ntr.selected {\n  background-color: #e0f7fa;\n}\n\n.view-btn {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.no-selection, .no-data {\n  padding: 20px;\n  text-align: center;\n  color: #6c757d;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.loading, .error {\n  padding: 20px;\n  text-align: center;\n}\n\n.error {\n  color: #dc3545;\n  margin-left: 3px;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  width: 500px;\n  max-width: 90%;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-group input,\n.form-group select,\n.form-group textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.dialog-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.dialog-buttons button {\n  padding: 8px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.dialog-buttons button.primary {\n  background-color: #4CAF50;\n  color: white;\n}\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n}\n.btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 8px;\n}\n.delete-btn {\n  background-color: #ef4444;\n  color: white;\n}\n\n.available-cars-table {\n  margin-top: 30px;\n}\n\n.assign-btn {\n  background-color: #ff9800;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.assign-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.assign-btn:hover {\n  background-color: #f57c00;\n}\n\n.unassign-btn {\n  background-color: #680707;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.unassign-btn:hover {\n  background-color: #f50303;\n}\n\n\n</style>","<script setup>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport CarsStock from './CarsStock.vue'\nimport ClientsView from './ClientsView.vue'\nimport BrokersView from './BrokersView.vue'\nimport SuppliersView from './SuppliersView.vue'\nimport CarModelsView from './CarModelsView.vue'\nimport ColorsView from './ColorsView.vue'\nimport DischargePortsView from './DischargePortsView.vue'\nimport LoadingPortsView from './LoadingPortsView.vue'\nimport BuyView from './BuyView.vue'\nimport SellView from './SellView.vue'\nimport SellBillsView from './SellBillsView.vue'\nimport WarehousesView from './WarehousesView.vue'  // Add this import\n\nconst router = useRouter()\nconst activeView = ref(null)\n\nconst navigateTo = (view) => {\n  activeView.value = view\n}\n\nconst returnToDashboard = () => {\n  router.push('/')\n}\n</script>\n\n<template>\n  <div class=\"cars-view\">\n    <div class=\"sidebar\">\n      <div class=\"sidebar-top\">\n        <button \n          @click=\"returnToDashboard\"\n          class=\"sidebar-btn return-btn\"\n        >\n          Return to Dashboard\n        </button>\n        <button \n          @click=\"navigateTo('buy')\"\n          :class=\"{ active: activeView === 'buy' }\"\n          class=\"sidebar-btn buy-btn\"\n        >\n          Purchases\n        </button>\n        <button v-if=\"false\"\n          @click=\"navigateTo('sell')\"\n          :class=\"{ active: activeView === 'sell' }\"\n          class=\"sidebar-btn sell-btn\"\n        >\n          Sell\n        </button>\n        <button \n          @click=\"navigateTo('sell-bills')\"\n          :class=\"{ active: activeView === 'sell-bills' }\"\n          class=\"sidebar-btn sell-bills-btn\"\n        >\n          Sells\n        </button>\n        <button \n          @click=\"navigateTo('stock')\"\n          :class=\"{ active: activeView === 'stock' }\"\n          class=\"sidebar-btn stock-btn\"\n        >\n          Cars Stock\n        </button>\n      </div>\n\n      <div class=\"sidebar-bottom\">\n        <div class=\"sidebar-section-title\">Settings</div>\n        <button \n          @click=\"navigateTo('models')\"\n          :class=\"{ active: activeView === 'models' }\"\n          class=\"sidebar-btn\"\n        >\n          Car Models\n        </button>\n        <button \n          @click=\"navigateTo('colors')\"\n          :class=\"{ active: activeView === 'colors' }\"\n          class=\"sidebar-btn\"\n        >\n          Colors\n        </button>\n        <button \n          @click=\"navigateTo('discharge-ports')\"\n          :class=\"{ active: activeView === 'discharge-ports' }\"\n          class=\"sidebar-btn\"\n        >\n          Discharge Ports\n        </button>\n        <button \n          @click=\"navigateTo('loading-ports')\"\n          :class=\"{ active: activeView === 'loading-ports' }\"\n          class=\"sidebar-btn\"\n        >\n          Loading Ports\n        </button>\n        <button \n          @click=\"navigateTo('clients')\"\n          :class=\"{ active: activeView === 'clients' }\"\n          class=\"sidebar-btn\"\n        >\n          Clients\n        </button>\n        <button \n          @click=\"navigateTo('brokers')\"\n          :class=\"{ active: activeView === 'brokers' }\"\n          class=\"sidebar-btn\"\n        >\n          Brokers\n        </button>\n        <button \n          @click=\"navigateTo('suppliers')\"\n          :class=\"{ active: activeView === 'suppliers' }\"\n          class=\"sidebar-btn\"\n        >\n          Suppliers\n        </button>\n        <!-- Add Warehouses button at the bottom of the sidebar -->\n        <button \n          @click=\"navigateTo('warehouses')\"\n          :class=\"{ active: activeView === 'warehouses' }\"\n          class=\"sidebar-btn\"\n        >\n          Warehouses\n        </button>\n      </div>\n    </div>\n    <div class=\"main-content\">\n      <h1>Cars Management</h1>\n      <div class=\"content\">\n        <div v-if=\"!activeView\" class=\"empty-state\">\n          Please select an option from the sidebar\n        </div>\n        <BuyView v-if=\"activeView === 'buy'\" />\n        <SellView v-if=\"activeView === 'sell'\" />\n        <SellBillsView v-if=\"activeView === 'sell-bills'\" />\n        <CarsStock v-if=\"activeView === 'stock'\" />\n        <CarModelsView v-if=\"activeView === 'models'\" />\n        <ColorsView v-if=\"activeView === 'colors'\" />\n        <DischargePortsView v-if=\"activeView === 'discharge-ports'\" />\n        <LoadingPortsView v-if=\"activeView === 'loading-ports'\" />\n        <ClientsView v-if=\"activeView === 'clients'\" />\n        <BrokersView v-if=\"activeView === 'brokers'\" />\n        <SuppliersView v-if=\"activeView === 'suppliers'\" />\n        <!-- Add conditional rendering for Warehouses view -->\n        <WarehousesView v-if=\"activeView === 'warehouses'\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.cars-view {\n  display: flex;\n  min-height: 100vh;\n}\n\n.sidebar {\n  width: 200px;\n  background-color: #2c3e50;\n  padding: 20px;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n}\n\n.sidebar-top {\n  border-bottom: 2px solid #34495e;\n  padding-bottom: 20px;\n}\n\n.sidebar-bottom {\n  flex: 1;\n}\n\n.sidebar-section-title {\n  font-size: 0.9em;\n  text-transform: uppercase;\n  color: #94a3b8;\n  margin-bottom: 10px;\n  padding-left: 10px;\n}\n\n.sidebar-btn {\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0;\n  background: none;\n  border: none;\n  color: white;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  transition: background-color 0.3s;\n}\n\n.buy-btn {\n  background-color: #10b981;\n}\n\n.buy-btn:hover {\n  background-color: #059669;\n}\n\n.buy-btn.active {\n  background-color: #047857;\n}\n\n.stock-btn {\n  background-color: #3b82f6;\n}\n\n.stock-btn:hover {\n  background-color: #2563eb;\n}\n\n.stock-btn.active {\n  background-color: #1d4ed8;\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px;\n}\n\n.sidebar-btn:hover {\n  background-color: #34495e;\n}\n\n.sidebar-btn.active {\n  background-color: #3498db;\n}\n\n.content {\n  margin-top: 20px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  margin: 0;\n  color: #2c3e50;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-top: 0;\n}\n.empty-state {\n  text-align: center;\n  color: #666;\n  padding: 40px;\n  font-size: 1.2em;\n}\n\n.return-btn {\n  margin-bottom: 20px;\n  background-color: #64748b;\n}\n\n.return-btn:hover {\n  background-color: #475569;\n}\n\n.buy-btn {\n  background-color: #10b981;\n  margin-bottom: 20px;\n}\n\n.buy-btn:hover {\n  background-color: #059669;\n}\n\n.buy-btn.active {\n  background-color: #047857;\n}\n\n.sell-btn {\n  background-color: #ef4444;\n  margin-bottom: 20px;\n}\n\n.sell-btn:hover {\n  background-color: #dc2626;\n}\n\n.sell-btn.active {\n  background-color: #b91c1c;\n}\n\n.sell-bills-btn {\n  background-color: #f59e0b;\n}\n\n.sell-bills-btn:hover {\n  background-color: #d97706;\n}\n\n.sell-bills-btn.active {\n  background-color: #b45309;\n}\n\n/* Add styling for the warehouses button */\n.warehouses-btn {\n  background-color: #10b981;\n  margin-top: 10px;\n}\n\n.warehouses-btn:hover {\n  background-color: #059669;\n}\n\n.warehouses-btn.active {\n  background-color: #047857;\n}\n</style>"],"names":["clients","ref","callApi","uploadFile","getFileUrl","error","useApi","showAddDialog","showEditDialog","editingClient","user","validationError","selectedFile","editSelectedFile","isAdmin","computed","_a","isImageFile","path","extension","validateEmail","email","newClient","fetchClients","result","handleFileChange","event","isEdit","file","addClient","clientId","filename","uploadResult","err","editClient","client","updateClient","deleteClient","handleImageClick","onMounted","userStr","suppliers","editingSupplier","newSupplier","fetchSuppliers","addSupplier","editSupplier","supplier","updateSupplier","deleteSupplier","showAddBrandDialog","showEditBrandDialog","showAddCarNameDialog","showEditCarNameDialog","brands","carNames","editingBrand","editingCarName","newBrand","newCarName","fetchBrands","fetchCarNames","addBrand","addCarName","editBrand","brand","editCarName","carName","updateBrand","updateCarName","deleteBrand","deleteCarName","colors","editingColor","newColor","fetchColors","addColor","editColor","color","updateColor","deleteColor","dischargePorts","editingPort","newPort","fetchPorts","addPort","editPort","port","updatePort","deletePort","loadingPorts","formatDate","dateStr","formatNumber","value","num","props","__props","emit","__emit","editingDetail","isStockUpdated","confirmDelete","detailId","openEditDialog","detail","handleEditSubmit","showStockAlert","i","useRouter","buyBills","selectedBill","buyDetails","cars","showAddDetailDialog","canUpdateStock","bill","handleUpdateStock","fetchBuyBills","handleDeleteBill","newPurchase","newDetail","addPurchase","fetchBuyDetails","billId","selectBill","fetchCars","updateBillAmount","addDetail","handleDeleteDetail","handleUpdateDetail","updatedDetail","openPayments","sellBills","carsStock","availableCars","loading","stockLoading","availableCarsLoading","selectedBillId","showAssignDialog","carToAssign","editingSellBill","showCarEditDialog","editingCar","newSellBill","brokers","fetchSellBills","fetchBrokers","fetchCarStock","sellBillId","fetchAvailableCars","addSellBill","fetchLoadingPorts","fetchDischargePorts","openAssignDialog","car","assignCarToBill","unassignCar","carId","updateSellBill","deleteSellBill","unassignResult","deleteResult","editCar","updateCar","router","activeView","navigateTo","view","returnToDashboard"],"mappings":"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"}