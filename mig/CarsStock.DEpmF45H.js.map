{"version":3,"file":"CarsStock.DEpmF45H.js","sources":["../src/components/car-stock/CarStockTable.vue","../src/components/car-stock/CarStockForm.vue","../src/components/car-stock/CarStockFilter.vue","../src/views/CarsStock.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted, defineProps, defineEmits,computed } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\n\nconst isDropdownOpen = ref({});\nconst props = defineProps({\n  cars: Array,\n  onEdit: {\n    type: Function,\n    default: () => {}\n  },\n  filters: {\n    type: Object,\n    default: () => ({\n      basic: '',\n      advanced: null\n    })\n  }\n})\n\nconst user = ref(null)\nconst can_edit_cars_prop = computed(() => {\n  if (!user.value) return false\n  if (user.value.role_id === 1) return true\n  return user.value.permissions?.some(p => p.permission_name === 'can_edit_cars_prop')\n})\n\n\nconst emit = defineEmits(['refresh'])\n\nconst { callApi } = useApi()\nconst cars = ref([])\nconst loading = ref(true)\nconst error = ref(null)\n\nconst fetchCarsStock = async () => {\n  loading.value = true\n  error.value = null\n  \n  try {\n    // Build the base query\n    let query = `\n      SELECT \n        cs.id,\n        cs.vin,\n        cs.price_cell,\n        cs.date_loding,\n        cs.date_sell,\n        cs.notes,\n        cs.freight,\n        cs.path_documents,\n        cs.sell_pi_path,\n        cs.buy_pi_path,\n        cs.id_client,\n        cs.id_port_loading,\n        cs.id_port_discharge,\n        cs.id_buy_details,\n        cs.date_send_documents,\n        cs.id_sell_pi,\n        cs.id_sell,\n        cs.export_lisence_ref,\n        cs.id_warehouse,\n        cs.in_wharhouse_date,\n        cs.date_get_documents_from_supp,\n        cs.date_get_keys_from_supp,\n        c.name as client_name,\n        cn.car_name,\n        clr.color,\n        lp.loading_port,\n        dp.discharge_port,\n        bd.price_sell as buy_price,\n        w.warhouse_name as warehouse_name\n      FROM cars_stock cs\n      LEFT JOIN clients c ON cs.id_client = c.id\n      LEFT JOIN buy_details bd ON cs.id_buy_details = bd.id\n      LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n      LEFT JOIN colors clr ON bd.id_color = clr.id\n      LEFT JOIN loading_ports lp ON cs.id_port_loading = lp.id\n      LEFT JOIN discharge_ports dp ON cs.id_port_discharge = dp.id\n      LEFT JOIN warehouses w ON cs.id_warehouse = w.id\n      WHERE cs.hidden = 0\n    `\n    \n    const params = []\n    \n    // Apply filters if they exist\n    if (props.filters) {\n      // Basic filter (search across multiple fields)\n      if (props.filters.basic && props.filters.basic.trim() !== '') {\n        const searchTerm = `%${props.filters.basic.trim()}%`\n        query += `\n          AND (\n            cs.id LIKE ? OR\n            cn.car_name LIKE ? OR\n            clr.color LIKE ? OR\n            cs.vin LIKE ? OR\n            lp.loading_port LIKE ? OR\n            dp.discharge_port LIKE ? OR\n            c.name LIKE ? OR\n            w.warhouse_name LIKE ?\n          )\n        `\n        // Add the search parameter 8 times (once for each field)\n        for (let i = 0; i < 8; i++) {\n          params.push(searchTerm)\n        }\n      }\n      \n      // Advanced filters\n      if (props.filters.advanced) {\n        const adv = props.filters.advanced\n        \n        // ID filter\n        if (adv.id && adv.id.trim() !== '') {\n          query += ` AND cs.id = ?`\n          params.push(adv.id.trim())\n        }\n        \n        // Car name filter\n        if (adv.car_name && adv.car_name.trim() !== '') {\n          query += ` AND cn.car_name = ?`\n          params.push(adv.car_name.trim())\n        }\n        \n        // Color filter\n        if (adv.color && adv.color.trim() !== '') {\n          query += ` AND clr.color = ?`\n          params.push(adv.color.trim())\n        }\n        \n        // VIN filter\n        if (adv.vin && adv.vin.trim() !== '') {\n          query += ` AND cs.vin LIKE ?`\n          params.push(`%${adv.vin.trim()}%`)\n        }\n        \n        // Loading port filter\n        if (adv.loading_port && adv.loading_port.trim() !== '') {\n          query += ` AND lp.loading_port = ?`\n          params.push(adv.loading_port.trim())\n        }\n        \n        // Discharge port filter\n        if (adv.discharge_port && adv.discharge_port.trim() !== '') {\n          query += ` AND dp.discharge_port = ?`\n          params.push(adv.discharge_port.trim())\n        }\n        \n        // Freight range filter\n        if (adv.freight_min && adv.freight_min.trim() !== '') {\n          query += ` AND cs.freight >= ?`\n          params.push(parseFloat(adv.freight_min.trim()))\n        }\n        if (adv.freight_max && adv.freight_max.trim() !== '') {\n          query += ` AND cs.freight <= ?`\n          params.push(parseFloat(adv.freight_max.trim()))\n        }\n        \n        // Price range filter\n        if (adv.price_min && adv.price_min.trim() !== '') {\n          query += ` AND cs.price_cell >= ?`\n          params.push(parseFloat(adv.price_min.trim()))\n        }\n        if (adv.price_max && adv.price_max.trim() !== '') {\n          query += ` AND cs.price_cell <= ?`\n          params.push(parseFloat(adv.price_max.trim()))\n        }\n        \n        // Loading date range filter\n        if (adv.loading_date_from && adv.loading_date_from.trim() !== '') {\n          query += ` AND cs.date_loding >= ?`\n          params.push(adv.loading_date_from.trim())\n        }\n        if (adv.loading_date_to && adv.loading_date_to.trim() !== '') {\n          query += ` AND cs.date_loding <= ?`\n          params.push(adv.loading_date_to.trim())\n        }\n        \n        // Status filter (Available/Sold)\n        if (adv.status && adv.status.trim() !== '') {\n          if (adv.status === 'available') {\n            query += ` AND (cs.date_sell IS NULL AND cs.id_client IS NULL)`\n          } else if (adv.status === 'sold') {\n            query += ` AND (cs.date_sell IS NOT NULL OR cs.id_client IS NOT NULL)`\n          }\n        }\n        \n        // Client filter\n        if (adv.client && adv.client.trim() !== '') {\n          query += ` AND c.name = ?`\n          params.push(adv.client.trim())\n        }\n        \n        // Warehouse filter\n        if (adv.warehouse && adv.warehouse.trim() !== '') {\n          query += ` AND w.name = ?`\n          params.push(adv.warehouse.trim())\n        }\n      }\n    }\n    \n    // Add the ORDER BY clause\n    query += ` ORDER BY cs.id DESC`\n    \n    const result = await callApi({\n      query,\n      params\n    })\n    \n    if (result.success) {\n      cars.value = result.data\n    } else {\n      error.value = result.error || 'Failed to fetch cars stock'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\nconst handleEdit = (car) => {\n  props.onEdit(car)\n}\n\nconst toggleDropdown = (carId) => {\n  isDropdownOpen.value[carId] = !isDropdownOpen.value[carId];\n};\n\nconst handleVINAction = (car) => {\n  alert(`VIN action triggered for car with ID: ${car.id}`);\n  // Close the dropdown after action\n  isDropdownOpen.value[car.id] = false;\n};\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n    fetchCarsStock()\n  }\n}\n)\n\n// Expose the fetchCarsStock method to parent components\ndefineExpose({\n  fetchCarsStock\n})\n\n\n</script>\n\n<template>\n  <div class=\"cars-stock-table\">\n    <div v-if=\"loading\" class=\"loading\">Loading...</div>\n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\n    <div v-else-if=\"cars.length === 0\" class=\"empty-state\">No cars in stock</div>\n    \n    <table v-else class=\"cars-table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Car</th>\n          <th>Color</th>\n          <th>VIN</th>\n          <th>Loading Port</th>\n          <th>Discharge Port</th>\n          <th>Freight</th>\n          <th>Price Cell</th>\n          <th>Loading Date</th>\n          <th>Status</th>\n          <th>Client</th>\n          <th>Documents</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"car in cars\" :key=\"car.id\">\n          <td>{{ car.id }}</td>\n          <td>{{ car.car_name || 'N/A' }}</td>\n          <td>{{ car.color || 'N/A' }}</td>\n          <td>{{ car.vin || 'N/A' }}</td>\n          <td>{{ car.loading_port || 'N/A' }}</td>\n          <td>{{ car.discharge_port || 'N/A' }}</td>\n          <td>{{ car.freight ? '$' + car.freight : 'N/A' }}</td>\n          <td>{{ car.price_cell ? '$' + car.price_cell : 'N/A' }}</td>\n          <td>{{ car.date_loding ? new Date(car.date_loding).toLocaleDateString() : 'N/A' }}</td>\n          <td :class=\"car.date_sell || car.client_name ? 'status-sold' : 'status-available'\">\n            {{ car.date_sell || car.client_name ? 'Sold' : 'Available' }}\n          </td>\n          <td>{{ car.client_name || 'N/A' }}</td>\n          <td>\n            <div class=\"document-links\">\n              <a v-if=\"car.path_documents\" :href=\"car.path_documents\" target=\"_blank\">Documents</a>\n              <a v-if=\"car.sell_pi_path\" :href=\"car.sell_pi_path\" target=\"_blank\">Sell PI</a>\n              <a v-if=\"car.buy_pi_path\" :href=\"car.buy_pi_path\" target=\"_blank\">Buy PI</a>\n            </div>\n          </td>\n          <td>\n            <button :disabled=\"!can_edit_cars_prop\" @click=\"handleEdit(car)\" class=\"edit-btn\">Edit</button>\n            <div class=\"dropdown\">\n            <button @click=\"toggleDropdown(car.id)\" class=\"dropdown-toggle\">Actions</button>\n            <ul v-if=\"isDropdownOpen[car.id]\" class=\"dropdown-menu\">\n              <li><button @click=\"handleVINAction(car)\">VIN</button></li>\n              <!-- You can add more actions here -->\n            </ul>\n          </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  \n</template>\n\n<style scoped>\nbutton:disabled {\n  background-color: #cccccc;\n  color: #666666;\n  cursor: not-allowed;\n}\n.cars-stock-table {\n  width: 100%;\n  overflow-x: auto;\n}\n\n.loading, .error, .empty-state {\n  padding: 20px;\n  text-align: center;\n}\n\n.error {\n  color: #ef4444;\n}\n\n.cars-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.cars-table th,\n.cars-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.cars-table th {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n\n.cars-table tbody tr:hover {\n  background-color: #f5f5f5;\n}\n\n.status-available {\n  color: #10b981;\n  font-weight: 500;\n}\n\n.status-sold {\n  color: #ef4444;\n  font-weight: 500;\n}\n\n.document-links {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.document-links a {\n  color: #3b82f6;\n  text-decoration: none;\n  font-size: 0.9em;\n}\n\n.document-links a:hover {\n  text-decoration: underline;\n}\n\n.edit-btn {\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  cursor: pointer;\n  font-size: 0.9em;\n}\n\n.edit-btn:hover {\n  background-color: #2563eb;\n}\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n.dropdown-toggle {\n  background-color: #f5f5f5;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 4px 8px;\n  cursor: pointer;\n}\n\n.dropdown-menu {\n  position: absolute;\n  right: 0;\n  background-color: white;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  list-style: none;\n  padding: 8px 0;\n  margin: 0;\n  z-index: 1;\n  min-width: 120px;\n}\n\n.dropdown-menu li {\n  padding: 8px 16px;\n}\n\n.dropdown-menu li button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n  text-align: left;\n}\n\n.dropdown-menu li button:hover {\n  background-color: #f5f5f5;\n}\n</style>","<script setup>\nimport { ref, onMounted, watch, defineProps, defineEmits,computed } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\nconst props = defineProps({\n  carData: {\n    type: Object,\n    required: true\n  }\n})\n\nconst user = ref(null)\nconst can_edit_vin = computed(() => {\n  if (!user.value) return false\n  if (user.value.role_id === 1) return true\n  return user.value.permissions?.some(p => p.permission_name === 'can_edit_vin')\n})\n\nconst can_edit_car_client_name = computed(() => {\n  if (!user.value) return false\n  if (user.value.role_id === 1) return true\n  return user.value.permissions?.some(p => p.permission_name === 'can_edit_car_client_name')\n})\n\nconst can_edit_cars_sell_price = computed(() => {\n  if (!user.value) return false\n  if (user.value.role_id === 1) return true\n  return user.value.permissions?.some(p => p.permission_name === 'can_edit_cars_sell_price')\n})\n\nconst can_edit_cars_sell_rate = computed(() => {\n  if (!user.value) return false\n  if (user.value.role_id === 1) return true\n  return user.value.permissions?.some(p => p.permission_name === 'can_edit_cars_sell_rate')\n})\n\nconst can_edit_cars_discharge_port = computed(() => {\n  if (!user.value) return false\n  if (user.value.role_id === 1) return true\n  return user.value.permissions?.some(p => p.permission_name === 'can_edit_cars_discharge_port')\n})\n\n\n\nconst emit = defineEmits(['save', 'cancel'])\n\nconst { callApi } = useApi()\nconst loading = ref(false)\nconst error = ref(null)\n\n// Reference data\nconst clients = ref([])\nconst loadingPorts = ref([])\nconst dischargePorts = ref([])\nconst buyDetails = ref([])\nconst warehouses = ref([])\n\nconst formData = ref({\n  id: null,\n  notes: '',\n  id_buy_details: null,\n  date_sell: null,\n  id_client: null,\n  price_cell: null,\n  freight: null,\n  id_port_loading: null,\n  id_port_discharge: null,\n  vin: '',\n  path_documents: '',\n  date_loding: null,\n  date_send_documents: null,\n  id_sell_pi: '',\n  sell_pi_path: '',\n  buy_pi_path: '',\n  id_sell: null,\n  export_lisence_ref: '',\n  id_warehouse: null,\n  in_wharhouse_date: null,\n  date_get_documents_from_supp: null,\n  date_get_keys_from_supp: null,\n  rate:null\n})\n\n// Watch for changes in carData prop\nwatch(() => props.carData, (newData) => {\n  if (newData) {\n    formData.value = { ...newData }\n    \n    // Format dates for input fields\n    const dateFields = ['date_sell', 'date_loding', 'date_send_documents', 'in_wharhouse_date', 'date_get_documents_from_supp', 'date_get_keys_from_supp']\n    \n    dateFields.forEach(field => {\n      if (formData.value[field]) {\n        const date = new Date(formData.value[field])\n        if (!isNaN(date)) {\n          formData.value[field] = date.toISOString().split('T')[0]\n        }\n      }\n    })\n  }\n}, { immediate: true })\n\nconst fetchReferenceData = async () => {\n  try {\n    // Fetch clients\n    const clientsResult = await callApi({\n      query: 'SELECT id, name FROM clients ORDER BY name ASC',\n      params: []\n    })\n    if (clientsResult.success) {\n      clients.value = clientsResult.data\n    }\n    \n    // Fetch loading ports\n    const loadingPortsResult = await callApi({\n      query: 'SELECT id, loading_port FROM loading_ports ORDER BY loading_port ASC',\n      params: []\n    })\n    if (loadingPortsResult.success) {\n      loadingPorts.value = loadingPortsResult.data\n    }\n    \n    // Fetch discharge ports\n    const dischargePortsResult = await callApi({\n      query: 'SELECT id, discharge_port FROM discharge_ports ORDER BY discharge_port ASC',\n      params: []\n    })\n    if (dischargePortsResult.success) {\n      dischargePorts.value = dischargePortsResult.data\n    }\n    \n    // Fetch buy details\n    const buyDetailsResult = await callApi({\n      query: `\n        SELECT bd.id, cn.car_name, clr.color \n        FROM buy_details bd\n        LEFT JOIN cars_names cn ON bd.id_car_name = cn.id\n        LEFT JOIN colors clr ON bd.id_color = clr.id\n        ORDER BY bd.id DESC\n      `,\n      params: []\n    })\n    if (buyDetailsResult.success) {\n      buyDetails.value = buyDetailsResult.data\n    }\n    \n    // Fetch warehouses if needed\n    const warehousesResult = await callApi({\n      query: 'SELECT id, warhouse_name as name FROM warehouses ORDER BY warhouse_name ASC',\n      params: []\n    })\n    if (warehousesResult.success) {\n      warehouses.value = warehousesResult.data\n    }\n  } catch (err) {\n    error.value = err.message || 'Failed to fetch reference data'\n  }\n}\n\nconst saveCar = async () => {\n  loading.value = true\n  error.value = null\n  \n  try {\n    const result = await callApi({\n      query: `\n        UPDATE cars_stock\n        SET \n          notes = ?,\n          id_buy_details = ?,\n          date_sell = ?,\n          id_client = ?,\n          price_cell = ?,\n          freight = ?,\n          id_port_loading = ?,\n          id_port_discharge = ?,\n          vin = ?,\n          path_documents = ?,\n          date_loding = ?,\n          date_send_documents = ?,\n          id_sell_pi = ?,\n          sell_pi_path = ?,\n          buy_pi_path = ?,\n          id_sell = ?,\n          export_lisence_ref = ?,\n          id_warehouse = ?,\n          in_wharhouse_date = ?,\n          date_get_documents_from_supp = ?,\n          date_get_keys_from_supp = ?,\n          rate=?\n        WHERE id = ?\n      `,\n      params: [\n        formData.value.notes || null,\n        formData.value.id_buy_details || null,\n        formData.value.date_sell || null,\n        formData.value.id_client || null,\n        formData.value.price_cell || null,\n        formData.value.freight || null,\n        formData.value.id_port_loading || null,\n        formData.value.id_port_discharge || null,\n        formData.value.vin || null,\n        formData.value.path_documents || null,\n        formData.value.date_loding || null,\n        formData.value.date_send_documents || null,\n        formData.value.id_sell_pi || null,\n        formData.value.sell_pi_path || null,\n        formData.value.buy_pi_path || null,\n        formData.value.id_sell || null,\n        formData.value.export_lisence_ref || null,\n        formData.value.id_warehouse || null,\n        formData.value.in_wharhouse_date || null,\n        formData.value.date_get_documents_from_supp || null,\n        formData.value.date_get_keys_from_supp || null,\n        formData.value.rate|| null,\n        formData.value.id\n      ]\n    })\n    \n    if (result.success) {\n      emit('save')\n    } else {\n      error.value = result.error || 'Failed to update car'\n    }\n  } catch (err) {\n    error.value = err.message || 'An error occurred'\n  } finally {\n    loading.value = false\n  }\n}\n\nonMounted(() => {\n  const userStr = localStorage.getItem('user')\n  if (userStr) {\n    user.value = JSON.parse(userStr)\n      fetchReferenceData()\n  } \n\n})\n</script>\n\n<template>\n  <div class=\"car-stock-form\">\n    <h3>Edit Car Stock</h3>\n    \n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n    \n    <form @submit.prevent=\"saveCar\">\n      <div class=\"form-grid\">\n        <!-- Basic Information -->\n        <div class=\"form-section\">\n          <h4>Basic Information</h4>\n          \n          <div class=\"form-group\">\n            <label for=\"vin\">VIN:</label>\n            <input :disabled=\"!can_edit_vin\" type=\"text\" id=\"vin\" v-model=\"formData.vin\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"id_buy_details\">Buy Details:</label>\n            <select id=\"id_buy_details\" v-model=\"formData.id_buy_details\">\n              <option value=\"\">Select Buy Details</option>\n              <option v-for=\"detail in buyDetails\" :key=\"detail.id\" :value=\"detail.id\">\n                {{ detail.car_name }} - {{ detail.color }} (ID: {{ detail.id }})\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"notes\">Notes:</label>\n            <textarea id=\"notes\" v-model=\"formData.notes\"></textarea>\n          </div>\n        </div>\n        \n        <!-- Pricing and Client -->\n        <div class=\"form-section\">\n          <h4>Pricing and Client</h4>\n          \n          <div class=\"form-group\">\n            <label for=\"price_cell\">Price Cell:</label>\n            <input :disabled=\"!can_edit_cars_sell_price\" type=\"number\" id=\"price_cell\" v-model=\"formData.price_cell\" step=\"0.01\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"freight\">Freight:</label>\n            <input type=\"number\" id=\"freight\" v-model=\"formData.freight\" step=\"0.01\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"rate\">Rate:</label>\n            <input :disabled=\"!can_edit_cars_sell_rate\" type=\"number\" id=\"rate\" v-model=\"formData.rate\" step=\"0.01\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"id_client\">Client:</label>\n            <select :disabled=\"!can_edit_car_client_name\" id=\"id_client\" v-model=\"formData.id_client\">\n              <option  value=\"\">Select Client</option>\n              <option v-for=\"client in clients\" :key=\"client.id\" :value=\"client.id\">\n                {{ client.name }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"date_sell\">Sell Date:</label>\n            <input type=\"date\" id=\"date_sell\" v-model=\"formData.date_sell\">\n          </div>\n        </div>\n        \n        <!-- Ports and Shipping -->\n        <div class=\"form-section\">\n          <h4>Ports and Shipping</h4>\n          \n          <div class=\"form-group\">\n            <label for=\"id_port_loading\">Loading Port:</label>\n            <select id=\"id_port_loading\" v-model=\"formData.id_port_loading\">\n              <option value=\"\">Select Loading Port</option>\n              <option v-for=\"port in loadingPorts\" :key=\"port.id\" :value=\"port.id\">\n                {{ port.loading_port }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"id_port_discharge\">Discharge Port:</label>\n            <select :disabled=\"!can_edit_cars_discharge_port\" id=\"id_port_discharge\" v-model=\"formData.id_port_discharge\">\n              <option value=\"\">Select Discharge Port</option>\n              <option v-for=\"port in dischargePorts\" :key=\"port.id\" :value=\"port.id\">\n                {{ port.discharge_port }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"date_loding\">Loading Date:</label>\n            <input type=\"date\" id=\"date_loding\" v-model=\"formData.date_loding\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"export_lisence_ref\">Export License Ref:</label>\n            <input type=\"text\" id=\"export_lisence_ref\" v-model=\"formData.export_lisence_ref\">\n          </div>\n        </div>\n        \n        <!-- Documents -->\n        <div class=\"form-section\">\n          <h4>Documents</h4>\n          \n          <div class=\"form-group\">\n            <label for=\"path_documents\">Documents Path:</label>\n            <input type=\"text\" id=\"path_documents\" v-model=\"formData.path_documents\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"sell_pi_path\">Sell PI Path:</label>\n            <input type=\"text\" id=\"sell_pi_path\" v-model=\"formData.sell_pi_path\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"buy_pi_path\">Buy PI Path:</label>\n            <input type=\"text\" id=\"buy_pi_path\" v-model=\"formData.buy_pi_path\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"date_send_documents\">Documents Send Date:</label>\n            <input type=\"date\" id=\"date_send_documents\" v-model=\"formData.date_send_documents\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"date_get_documents_from_supp\">Documents From Supplier Date:</label>\n            <input type=\"date\" id=\"date_get_documents_from_supp\" v-model=\"formData.date_get_documents_from_supp\">\n          </div>\n        </div>\n        \n        <!-- Warehouse and Additional Info -->\n        <div class=\"form-section\">\n          <h4>Warehouse and Additional Info</h4>\n          \n          <div class=\"form-group\">\n            <label for=\"id_warehouse\">Warehouse:</label>\n            <select id=\"id_warehouse\" v-model=\"formData.id_warehouse\">\n              <option value=\"\">Select Warehouse</option>\n              <option v-for=\"warehouse in warehouses\" :key=\"warehouse.id\" :value=\"warehouse.id\">\n                {{ warehouse.name }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"in_wharhouse_date\">Warehouse Date:</label>\n            <input type=\"date\" id=\"in_wharhouse_date\" v-model=\"formData.in_wharhouse_date\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"date_get_keys_from_supp\">Keys From Supplier Date:</label>\n            <input type=\"date\" id=\"date_get_keys_from_supp\" v-model=\"formData.date_get_keys_from_supp\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"id_sell\">Sell Bill ID:</label>\n            <input type=\"number\" id=\"id_sell\" v-model=\"formData.id_sell\">\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"id_sell_pi\">Sell PI ID:</label>\n            <input type=\"text\" id=\"id_sell_pi\" v-model=\"formData.id_sell_pi\">\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"form-actions\">\n        <button type=\"button\" @click=\"emit('cancel')\" class=\"cancel-btn\">Cancel</button>\n        <button type=\"submit\" class=\"save-btn\" :disabled=\"loading\">{{ loading ? 'Saving...' : 'Save Changes' }}</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<style scoped>\n.car-stock-form {\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.error {\n  color: #ef4444;\n  margin-bottom: 16px;\n  padding: 8px;\n  background-color: #fee2e2;\n  border-radius: 4px;\n}\n\n.form-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  gap: 24px;\n  margin-bottom: 24px;\n}\n\n.form-section {\n  background-color: #f8f9fa;\n  padding: 16px;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.form-section h4 {\n  margin-top: 0;\n  margin-bottom: 16px;\n  color: #4b5563;\n  border-bottom: 1px solid #e5e7eb;\n  padding-bottom: 8px;\n}\n\n.form-group {\n  margin-bottom: 16px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 4px;\n  font-weight: 500;\n  color: #4b5563;\n}\n\n.form-group input,\n.form-group select,\n.form-group textarea {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.form-group textarea {\n  min-height: 80px;\n  resize: vertical;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 24px;\n}\n\n.cancel-btn {\n  background-color: #f3f4f6;\n  color: #4b5563;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.save-btn {\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.save-btn:hover {\n  background-color: #2563eb;\n}\n\n.save-btn:disabled {\n  background-color: #93c5fd;\n  cursor: not-allowed;\n}\n</style>","<script setup>\nimport { ref, defineEmits } from 'vue'\nimport { useApi } from '../../composables/useApi'\n\nconst emit = defineEmits(['filter'])\n\nconst { callApi } = useApi()\n\n// Reference data for dropdowns\nconst carNames = ref([])\nconst colors = ref([])\nconst loadingPorts = ref([])\nconst dischargePorts = ref([])\nconst clients = ref([])\nconst warehouses = ref([])\n\n// Basic filter\nconst basicFilter = ref('')\n\n// Advanced filter state\nconst showAdvancedFilter = ref(false)\nconst advancedFilters = ref({\n  id: '',\n  car_name: '',\n  color: '',\n  vin: '',\n  loading_port: '',\n  discharge_port: '',\n  freight_min: '',\n  freight_max: '',\n  price_min: '',\n  price_max: '',\n  loading_date_from: '',\n  loading_date_to: '',\n  status: '',\n  client: '',\n  warehouse: ''\n})\n\n// Fetch reference data for filter dropdowns\nconst fetchReferenceData = async () => {\n  try {\n    // Fetch car names\n    const carNamesResult = await callApi({\n      query: 'SELECT id, car_name FROM cars_names ORDER BY car_name',\n      params: []\n    })\n    if (carNamesResult.success) {\n      carNames.value = carNamesResult.data\n    }\n\n    // Fetch colors\n    const colorsResult = await callApi({\n      query: 'SELECT id, color FROM colors ORDER BY color',\n      params: []\n    })\n    if (colorsResult.success) {\n      colors.value = colorsResult.data\n    }\n\n    // Fetch loading ports\n    const loadingPortsResult = await callApi({\n      query: 'SELECT id, loading_port FROM loading_ports ORDER BY loading_port',\n      params: []\n    })\n    if (loadingPortsResult.success) {\n      loadingPorts.value = loadingPortsResult.data\n    }\n\n    // Fetch discharge ports\n    const dischargePortsResult = await callApi({\n      query: 'SELECT id, discharge_port FROM discharge_ports ORDER BY discharge_port',\n      params: []\n    })\n    if (dischargePortsResult.success) {\n      dischargePorts.value = dischargePortsResult.data\n    }\n\n    // Fetch clients\n    const clientsResult = await callApi({\n      query: 'SELECT id, name FROM clients ORDER BY name',\n      params: []\n    })\n    if (clientsResult.success) {\n      clients.value = clientsResult.data\n    }\n\n    // Fetch warehouses\n    const warehousesResult = await callApi({\n      query: 'SELECT id, name FROM warehouses ORDER BY name',\n      params: []\n    })\n    if (warehousesResult.success) {\n      warehouses.value = warehousesResult.data\n    }\n  } catch (error) {\n    console.error('Error fetching reference data:', error)\n  }\n}\n\n// Apply basic filter\nconst applyBasicFilter = () => {\n  emit('filter', { basic: basicFilter.value, advanced: null })\n}\n\n// Apply advanced filters\nconst applyAdvancedFilters = () => {\n  emit('filter', { basic: null, advanced: advancedFilters.value })\n}\n\n// Reset filters\nconst resetFilters = () => {\n  basicFilter.value = ''\n  Object.keys(advancedFilters.value).forEach(key => {\n    advancedFilters.value[key] = ''\n  })\n  emit('filter', { basic: '', advanced: null })\n}\n\n// Toggle advanced filter visibility\nconst toggleAdvancedFilter = () => {\n  showAdvancedFilter.value = !showAdvancedFilter.value\n}\n\n// Fetch reference data on component mount\nfetchReferenceData()\n</script>\n\n<template>\n  <div class=\"car-stock-filter\">\n    <!-- Basic Filter -->\n    <div class=\"basic-filter\">\n      <div class=\"filter-row\">\n        <div class=\"filter-input\">\n          <input \n            type=\"text\" \n            v-model=\"basicFilter\" \n            placeholder=\"Search by ID, Car, Color, VIN, Ports, Client...\" \n            @input=\"applyBasicFilter\"\n          />\n        </div>\n        <div class=\"filter-actions\">\n          <button @click=\"toggleAdvancedFilter\" class=\"toggle-btn\">\n            {{ showAdvancedFilter ? 'Hide Advanced' : 'Show Advanced' }}\n          </button>\n          <button @click=\"resetFilters\" class=\"reset-btn\">Reset</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Advanced Filters -->\n    <div v-if=\"showAdvancedFilter\" class=\"advanced-filters\">\n      <div class=\"filter-grid\">\n        <!-- ID Filter -->\n        <div class=\"filter-field\">\n          <label for=\"id-filter\">ID</label>\n          <input \n            id=\"id-filter\" \n            type=\"text\" \n            v-model=\"advancedFilters.id\" \n            placeholder=\"Car ID\"\n          />\n        </div>\n\n        <!-- Car Name Filter -->\n        <div class=\"filter-field\">\n          <label for=\"car-name-filter\">Car</label>\n          <select \n            id=\"car-name-filter\" \n            v-model=\"advancedFilters.car_name\"\n          >\n            <option value=\"\">All Cars</option>\n            <option \n              v-for=\"car in carNames\" \n              :key=\"car.id\" \n              :value=\"car.car_name\"\n            >\n              {{ car.car_name }}\n            </option>\n          </select>\n        </div>\n\n        <!-- Color Filter -->\n        <div class=\"filter-field\">\n          <label for=\"color-filter\">Color</label>\n          <select \n            id=\"color-filter\" \n            v-model=\"advancedFilters.color\"\n          >\n            <option value=\"\">All Colors</option>\n            <option \n              v-for=\"color in colors\" \n              :key=\"color.id\" \n              :value=\"color.color\"\n            >\n              {{ color.color }}\n            </option>\n          </select>\n        </div>\n\n        <!-- VIN Filter -->\n        <div class=\"filter-field\">\n          <label for=\"vin-filter\">VIN</label>\n          <input \n            id=\"vin-filter\" \n            type=\"text\" \n            v-model=\"advancedFilters.vin\" \n            placeholder=\"VIN Number\"\n          />\n        </div>\n\n        <!-- Loading Port Filter -->\n        <div class=\"filter-field\">\n          <label for=\"loading-port-filter\">Loading Port</label>\n          <select \n            id=\"loading-port-filter\" \n            v-model=\"advancedFilters.loading_port\"\n          >\n            <option value=\"\">All Loading Ports</option>\n            <option \n              v-for=\"port in loadingPorts\" \n              :key=\"port.id\" \n              :value=\"port.loading_port\"\n            >\n              {{ port.loading_port }}\n            </option>\n          </select>\n        </div>\n\n        <!-- Discharge Port Filter -->\n        <div class=\"filter-field\">\n          <label for=\"discharge-port-filter\">Discharge Port</label>\n          <select \n            id=\"discharge-port-filter\" \n            v-model=\"advancedFilters.discharge_port\"\n          >\n            <option value=\"\">All Discharge Ports</option>\n            <option \n              v-for=\"port in dischargePorts\" \n              :key=\"port.id\" \n              :value=\"port.discharge_port\"\n            >\n              {{ port.discharge_port }}\n            </option>\n          </select>\n        </div>\n\n        <!-- Freight Range Filter -->\n        <div class=\"filter-field\">\n          <label>Freight Range</label>\n          <div class=\"range-inputs\">\n            <input \n              type=\"number\" \n              v-model=\"advancedFilters.freight_min\" \n              placeholder=\"Min\"\n            />\n            <span>to</span>\n            <input \n              type=\"number\" \n              v-model=\"advancedFilters.freight_max\" \n              placeholder=\"Max\"\n            />\n          </div>\n        </div>\n\n        <!-- Price Range Filter -->\n        <div class=\"filter-field\">\n          <label>Price Range</label>\n          <div class=\"range-inputs\">\n            <input \n              type=\"number\" \n              v-model=\"advancedFilters.price_min\" \n              placeholder=\"Min\"\n            />\n            <span>to</span>\n            <input \n              type=\"number\" \n              v-model=\"advancedFilters.price_max\" \n              placeholder=\"Max\"\n            />\n          </div>\n        </div>\n\n        <!-- Loading Date Range Filter -->\n        <div class=\"filter-field\">\n          <label>Loading Date Range</label>\n          <div class=\"date-inputs\">\n            <input \n              type=\"date\" \n              v-model=\"advancedFilters.loading_date_from\" \n            />\n            <span>to</span>\n            <input \n              type=\"date\" \n              v-model=\"advancedFilters.loading_date_to\" \n            />\n          </div>\n        </div>\n\n        <!-- Status Filter -->\n        <div class=\"filter-field\">\n          <label for=\"status-filter\">Status</label>\n          <select \n            id=\"status-filter\" \n            v-model=\"advancedFilters.status\"\n          >\n            <option value=\"\">All Status</option>\n            <option value=\"available\">Available</option>\n            <option value=\"sold\">Sold</option>\n          </select>\n        </div>\n\n        <!-- Client Filter -->\n        <div class=\"filter-field\">\n          <label for=\"client-filter\">Client</label>\n          <select \n            id=\"client-filter\" \n            v-model=\"advancedFilters.client\"\n          >\n            <option value=\"\">All Clients</option>\n            <option \n              v-for=\"client in clients\" \n              :key=\"client.id\" \n              :value=\"client.name\"\n            >\n              {{ client.name }}\n            </option>\n          </select>\n        </div>\n\n        <!-- Warehouse Filter -->\n        <div class=\"filter-field\">\n          <label for=\"warehouse-filter\">Warehouse</label>\n          <select \n            id=\"warehouse-filter\" \n            v-model=\"advancedFilters.warehouse\"\n          >\n            <option value=\"\">All Warehouses</option>\n            <option \n              v-for=\"warehouse in warehouses\" \n              :key=\"warehouse.id\" \n              :value=\"warehouse.name\"\n            >\n              {{ warehouse.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"advanced-filter-actions\">\n        <button @click=\"applyAdvancedFilters\" class=\"apply-btn\">Apply Filters</button>\n        <button @click=\"resetFilters\" class=\"reset-btn\">Reset All</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.car-stock-filter {\n  margin-bottom: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  padding: 16px;\n}\n\n.filter-row {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n}\n\n.filter-input {\n  flex: 1;\n}\n\n.filter-input input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.filter-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.toggle-btn, .reset-btn, .apply-btn {\n  padding: 10px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.toggle-btn {\n  background-color: #6366f1;\n  color: white;\n}\n\n.reset-btn {\n  background-color: #9ca3af;\n  color: white;\n}\n\n.apply-btn {\n  background-color: #10b981;\n  color: white;\n}\n\n.toggle-btn:hover {\n  background-color: #4f46e5;\n}\n\n.reset-btn:hover {\n  background-color: #6b7280;\n}\n\n.apply-btn:hover {\n  background-color: #059669;\n}\n\n.advanced-filters {\n  margin-top: 16px;\n  padding-top: 16px;\n  border-top: 1px solid #e5e7eb;\n}\n\n.filter-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 16px;\n}\n\n.filter-field {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.filter-field label {\n  font-size: 14px;\n  font-weight: 500;\n  color: #4b5563;\n}\n\n.filter-field input,\n.filter-field select {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.range-inputs,\n.date-inputs {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.range-inputs input,\n.date-inputs input {\n  flex: 1;\n}\n\n.range-inputs span,\n.date-inputs span {\n  color: #6b7280;\n  font-size: 12px;\n}\n\n.advanced-filter-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 16px;\n}\n</style>","<script setup>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport CarStockTable from '../components/car-stock/CarStockTable.vue'\nimport CarStockForm from '../components/car-stock/CarStockForm.vue'\nimport CarStockFilter from '../components/car-stock/CarStockFilter.vue'\n\nconst router = useRouter()\nconst showEditDialog = ref(false)\nconst editingCar = ref(null)\nconst carStockTableRef = ref(null)\nconst filters = ref({\n  basic: '',\n  advanced: null\n})\n\nconst handleEditCar = (car) => {\n  editingCar.value = { ...car }\n  showEditDialog.value = true\n}\n\nconst handleSave = () => {\n  showEditDialog.value = false\n  \n  // Refresh the table\n  if (carStockTableRef.value) {\n    carStockTableRef.value.fetchCarsStock()\n  }\n}\n\nconst handleFilter = (filterData) => {\n  filters.value = filterData\n  \n  // Refresh the table with the new filters\n  if (carStockTableRef.value) {\n    carStockTableRef.value.fetchCarsStock()\n  }\n}\n\nconst navigateToWarehouses = () => {\n  router.push('/warehouses')\n}\n</script>\n\n<template>\n  <div class=\"cars-stock\">\n    <div class=\"header\">\n      <h2>Cars Stock Management</h2>\n    </div>\n    \n    <div class=\"content\">\n      <!-- Add the filter component -->\n      <CarStockFilter @filter=\"handleFilter\" />\n      \n      <CarStockTable \n        ref=\"carStockTableRef\"\n        :onEdit=\"handleEditCar\"\n        :filters=\"filters\"\n      />\n      \n      <!-- Add Warehouses Button at the bottom -->\n      <div class=\"warehouses-button-container\">\n        <button @click=\"navigateToWarehouses\" class=\"warehouses-btn\">\n          Manage Warehouses\n        </button>\n      </div>\n    </div>\n    \n    <!-- Edit Dialog -->\n    <div v-if=\"showEditDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <CarStockForm\n          :carData=\"editingCar\"\n          @save=\"handleSave\"\n          @cancel=\"showEditDialog = false\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.cars-stock {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.content {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.dialog {\n  background-color: white;\n  border-radius: 8px;\n  padding: 24px;\n  width: 90%;\n  max-width: 1200px;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n/* Add these styles for the warehouses button */\n.warehouses-button-container {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.warehouses-btn {\n  background-color: #4CAF50;\n  color: white;\n  padding: 12px 24px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: background-color 0.3s;\n}\n\n.warehouses-btn:hover {\n  background-color: #45a049;\n}\n</style>"],"names":["isDropdownOpen","ref","props","__props","user","can_edit_cars_prop","computed","_a","p","callApi","useApi","cars","loading","error","fetchCarsStock","query","params","searchTerm","i","adv","result","err","handleEdit","car","toggleDropdown","carId","handleVINAction","onMounted","userStr","__expose","can_edit_vin","can_edit_car_client_name","can_edit_cars_sell_price","can_edit_cars_sell_rate","can_edit_cars_discharge_port","emit","__emit","clients","loadingPorts","dischargePorts","buyDetails","warehouses","formData","watch","newData","field","date","fetchReferenceData","clientsResult","loadingPortsResult","dischargePortsResult","buyDetailsResult","warehousesResult","saveCar","carNames","colors","basicFilter","showAdvancedFilter","advancedFilters","carNamesResult","colorsResult","applyBasicFilter","applyAdvancedFilters","resetFilters","key","toggleAdvancedFilter","router","useRouter","showEditDialog","editingCar","carStockTableRef","filters","handleEditCar","handleSave","handleFilter","filterData","navigateToWarehouses"],"mappings":"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"}