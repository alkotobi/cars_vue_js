import{_ as N,u as V,r as d,j as U,o as x,c as o,a as e,b,f as O,i as F,F as $,d as L,w as r,v as i,g as u,t as _}from"./index.CoJVpPtY.js";const h={class:"sender-view"},q={class:"header"},I={class:"header-buttons"},M={class:"transfers-table"},B={class:"status-cell"},W={key:0,class:"status received"},H={key:1,class:"status pending"},P=["onClick"],j=["onClick"],J={key:0,class:"dialog-overlay"},Y={class:"dialog"},z={class:"form-group"},G={class:"form-group"},K={class:"form-group"},Q={class:"dialog-actions"},X={key:1,class:"dialog-overlay"},Z={class:"dialog"},ee={class:"form-group"},te={class:"form-group"},ne={class:"form-group"},se={class:"dialog-actions"},le={__name:"SenderView",setup(ae){const D=F(),{callApi:c,error:y}=V(),v=d(null),k=d([]),m=d(!1),p=d(!1),E=d(null),l=d({amount_sending_da:"",rate:"",notes:""}),a=d({amount_sending_da:"",rate:"",notes:""}),f=U(()=>{var s;return((s=v.value)==null?void 0:s.role_id)===1}),g=async()=>{const s=await c({query:`
      SELECT t.* 
      FROM transfers t
      WHERE t.id_user_do_transfer = ? OR t.id_user_receive_transfer = ?
      ORDER BY t.date_do_transfer DESC
    `,params:[v.value.id,v.value.id]});s.success&&(k.value=s.data)},S=(s,t)=>(s/t).toFixed(2),T=s=>{E.value=s,l.value={amount_sending_da:s.amount_sending_da,rate:s.rate,notes:s.notes||""},m.value=!0},w=async()=>{if(!l.value.amount_sending_da||!l.value.rate){y.value="Please fill all required fields";return}const s=(l.value.amount_sending_da/l.value.rate).toFixed(2);(await c({query:`
      UPDATE transfers 
      SET amount_sending_da = ?, 
          rate = ?,
          amount_received_usd = ?,
          notes = ?
      WHERE id = ? ${f.value?"":"AND date_receive IS NULL"}
    `,params:[l.value.amount_sending_da,l.value.rate,s,l.value.notes||null,E.value.id]})).success&&(m.value=!1,E.value=null,g())},A=async s=>{if(!f.value){y.value="Only admin can delete transfers";return}if(!confirm("Are you sure you want to delete this transfer?"))return;(await c({query:"DELETE FROM transfers WHERE id = ?",params:[s.id]})).success&&g()},C=async()=>{if(!a.value.amount_sending_da||!a.value.rate){y.value="Please fill all required fields";return}const s=(a.value.amount_sending_da/a.value.rate).toFixed(2);(await c({query:`
      INSERT INTO transfers (
        id_user_do_transfer, date_do_transfer, amount_sending_da, 
        rate, amount_received_usd, notes
      ) VALUES (?, NOW(), ?, ?, ?, ?)
    `,params:[v.value.id,a.value.amount_sending_da,a.value.rate,s,a.value.notes||null]})).success&&(p.value=!1,a.value={amount_sending_da:"",rate:"",notes:""},g())};return x(()=>{const s=localStorage.getItem("user");s&&(v.value=JSON.parse(s),g())}),(s,t)=>(u(),o("div",h,[e("div",q,[t[10]||(t[10]=e("h1",null,"My Transfers",-1)),e("div",I,[e("button",{onClick:t[0]||(t[0]=n=>p.value=!0),class:"btn create-btn"}," New Transfer "),e("button",{onClick:t[1]||(t[1]=n=>O(D).push("/transfers")),class:"back-btn"},"← Return to Transfers")])]),e("div",M,[e("table",null,[t[11]||(t[11]=e("thead",null,[e("tr",null,[e("th",null,"Date Sent"),e("th",null,"Amount (DA)"),e("th",null,"Rate"),e("th",null,"USD Value"),e("th",null,"Notes"),e("th",null,"Status"),e("th",null,"Actions")])],-1)),e("tbody",null,[(u(!0),o($,null,L(k.value,n=>(u(),o("tr",{key:n.id},[e("td",null,_(new Date(n.date_do_transfer).toLocaleString()),1),e("td",null,_(n.amount_sending_da),1),e("td",null,_(n.rate),1),e("td",null,"$"+_(S(n.amount_sending_da,n.rate)),1),e("td",null,_(n.notes||"-"),1),e("td",B,[n.date_receive?(u(),o("span",W,"✅")):(u(),o("span",H,"⏳"))]),e("td",null,[f.value||!n.date_receive?(u(),o("button",{key:0,onClick:R=>T(n),class:"btn update-btn"}," Edit ",8,P)):b("",!0),f.value?(u(),o("button",{key:1,onClick:R=>A(n),class:"btn delete-btn"}," Delete ",8,j)):b("",!0)])]))),128))])])]),m.value?(u(),o("div",J,[e("div",Y,[t[15]||(t[15]=e("h2",null,"Edit Transfer",-1)),e("div",z,[t[12]||(t[12]=e("label",null,"Amount (DA):",-1)),r(e("input",{type:"number","onUpdate:modelValue":t[2]||(t[2]=n=>l.value.amount_sending_da=n),class:"input-field"},null,512),[[i,l.value.amount_sending_da]])]),e("div",G,[t[13]||(t[13]=e("label",null,"Rate:",-1)),r(e("input",{type:"number","onUpdate:modelValue":t[3]||(t[3]=n=>l.value.rate=n),class:"input-field"},null,512),[[i,l.value.rate]])]),e("div",K,[t[14]||(t[14]=e("label",null,"Notes:",-1)),r(e("textarea",{"onUpdate:modelValue":t[4]||(t[4]=n=>l.value.notes=n),class:"input-field",placeholder:"Optional notes"},null,512),[[i,l.value.notes]])]),e("div",Q,[e("button",{onClick:w,class:"btn update-btn"},"Save"),e("button",{onClick:t[5]||(t[5]=n=>m.value=!1),class:"btn cancel-btn"},"Cancel")])])])):b("",!0),p.value?(u(),o("div",X,[e("div",Z,[t[19]||(t[19]=e("h2",null,"New Transfer",-1)),e("div",ee,[t[16]||(t[16]=e("label",null,"Amount (DA):",-1)),r(e("input",{type:"number","onUpdate:modelValue":t[6]||(t[6]=n=>a.value.amount_sending_da=n),class:"input-field",placeholder:"Enter amount in DA"},null,512),[[i,a.value.amount_sending_da]])]),e("div",te,[t[17]||(t[17]=e("label",null,"Rate:",-1)),r(e("input",{type:"number","onUpdate:modelValue":t[7]||(t[7]=n=>a.value.rate=n),class:"input-field",placeholder:"Enter exchange rate"},null,512),[[i,a.value.rate]])]),e("div",ne,[t[18]||(t[18]=e("label",null,"Notes:",-1)),r(e("textarea",{"onUpdate:modelValue":t[8]||(t[8]=n=>a.value.notes=n),class:"input-field",placeholder:"Optional notes"},null,512),[[i,a.value.notes]])]),e("div",se,[e("button",{onClick:C,class:"btn create-btn"},"Create"),e("button",{onClick:t[9]||(t[9]=n=>p.value=!1),class:"btn cancel-btn"},"Cancel")])])])):b("",!0)]))}},ue=N(le,[["__scopeId","data-v-8ab29b5e"]]);export{ue as default};
//# sourceMappingURL=SenderView.Byndie-v.js.map
